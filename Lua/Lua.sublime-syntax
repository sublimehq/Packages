%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Lua
comment: "Lua Syntax: version 0.8"
file_extensions:
  - lua
scope: source.lua
contexts:
  main:
    - match: '\b(function)\s+([a-zA-Z_.:]+[.:])?([a-zA-Z_]\w*)\s*(\()([^)]*)(\))'
      scope: meta.function.lua
      captures:
        1: keyword.control.lua
        2: entity.name.function.scope.lua
        3: entity.name.function.lua
        4: punctuation.definition.parameters.begin.lua
        5: variable.parameter.function.lua
        6: punctuation.definition.parameters.end.lua
    - match: '(?<![\d.])\b0[xX][a-fA-F\d\.]+([pP][\-\+]?\d+)?|\b\d+(\.\d+)?([eE]-?\d+)?|\.\d+([eE]-?\d+)?'
      scope: constant.numeric.lua
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.lua
      push:
        - meta_scope: string.quoted.single.lua
        - match: "'"
          captures:
            0: punctuation.definition.string.end.lua
          pop: true
        - match: '\\([abfnrtv\\"'']|\r?\n|\n\r?|\d\d?\d?)'
          scope: constant.character.escape.lua
        - match: '\\[xX][0-9a-fA-F][0-9a-fA-F]'
          scope: constant.character.escape.lua
        - match: '\\u\{[0-9a-fA-F]{,7}\}'
          scope: constant.character.escape.lua
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.lua
      push:
        - meta_scope: string.quoted.double.lua
        - match: '"'
          captures:
            0: punctuation.definition.string.end.lua
          pop: true
        - match: '\\([abfnrtv\\"'']|\r?\n|\n\r?|\d\d?\d?)'
          scope: constant.character.escape.lua
        - match: '\\[xX][0-9a-fA-F][0-9a-fA-F]'
          scope: constant.character.escape.lua
        - match: '\\u\{[0-9a-fA-F]{,7}\}'
          scope: constant.character.escape.lua
    - match: '(?<!--)\[(=*)\['
      captures:
        0: punctuation.definition.string.begin.lua
      push:
        - meta_scope: string.quoted.other.multiline.lua
        - match: '\]\1\]'
          captures:
            0: punctuation.definition.string.end.lua
          pop: true
    - match: '--\[(=*)\['
      captures:
        0: punctuation.definition.comment.lua
      push:
        - meta_scope: comment.block.lua
        - match: '\]\1\]'
          captures:
            0: punctuation.definition.comment.lua
          pop: true
    - match: '(--)(?!\[\[).*$\n?'
      scope: comment.line.double-dash.lua
      captures:
        1: punctuation.definition.comment.lua
    - match: \b(break|do|else|for|if|elseif|return|then|repeat|while|until|end|function|local|in)\b
      scope: keyword.control.lua
    - match: '(?<![^.]\.|:)\b(false|nil|true|_G|_VERSION|math\.(pi|huge))\b|(?<![.])\.{3}(?!\.)'
      scope: constant.language.lua
    - match: '(?<![^.]\.|:)\b(self)\b'
      scope: variable.language.self.lua
    - match: '(?<![^.]\.|:)\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\b(?=[( {"''\[])'
      scope: support.function.lua
    - match: '(?<![^.]\.|:)\b(coroutine\.(create|resume|running|status|wrap|yield)|string\.(byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\.(concat|insert|maxn|remove|sort)|math\.(abs|acos|asin|atan2?|ceil|cosh?|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pow|rad|random|randomseed|sinh?|sqrt|tanh?)|io\.(close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|os\.(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\.(cpath|loaded|loadlib|path|preload|seeall)|debug\.(debug|[gs]etfenv|[gs]ethook|getinfo|[gs]etlocal|[gs]etmetatable|getregistry|[gs]etupvalue|traceback))\b(?=[( {"''\[])'
      scope: support.function.library.lua
    - match: \b(and|or|not)\b
      scope: keyword.operator.lua
    - match: '\+|-|%|#|\*|\/|\^|==?|~=|<=?|>=?|(?<!\.)\.{2}(?!\.)'
      scope: keyword.operator.lua
