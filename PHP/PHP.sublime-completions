{
	"scope": "source.php - variable.other.php - source.php meta.embedded.html",

	"completions":
	[
		"php",

		{
			"trigger": "abs()",
			"contents": "abs(${1:number})",
			"kind": "function"
		},
		{
			"trigger": "acos()",
			"contents": "acos(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "acosh()",
			"contents": "acosh(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "addcslashes()",
			"contents": "addcslashes(${1:str}, ${2:charlist})",
			"kind": "function"
		},
		{
			"trigger": "addslashes()",
			"contents": "addslashes(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "aggregate()",
			"contents": "aggregate(${1:object}, ${2:class_name})",
			"kind": "function"
		},
		{
			"trigger": "aggregate_info()",
			"contents": "aggregate_info(${1:object})",
			"kind": "function"
		},
		{
			"trigger": "aggregate_methods()",
			"contents": "aggregate_methods(${1:object}, ${2:class_name})",
			"kind": "function"
		},
		{
			"trigger": "aggregate_methods_by_list()",
			"contents": "aggregate_methods_by_list(${1:object}, ${2:class_name}, ${3:methods_list})",
			"kind": "function"
		},
		{
			"trigger": "aggregate_methods_by_regexp()",
			"contents": "aggregate_methods_by_regexp(${1:object}, ${2:class_name}, ${3:regexp})",
			"kind": "function"
		},
		{
			"trigger": "aggregate_properties()",
			"contents": "aggregate_properties(${1:object}, ${2:class_name})",
			"kind": "function"
		},
		{
			"trigger": "aggregate_properties_by_list()",
			"contents": "aggregate_properties_by_list(${1:object}, ${2:class_name}, ${3:properties_list})",
			"kind": "function"
		},
		{
			"trigger": "aggregate_properties_by_regexp()",
			"contents": "aggregate_properties_by_regexp(${1:object}, ${2:class_name}, ${3:regexp})",
			"kind": "function"
		},
		{
			"trigger": "aggregation_info()",
			"contents": "aggregation_info()",
			"kind": "function"
		},
		{
			"trigger": "apache_child_terminate()",
			"contents": "apache_child_terminate()",
			"kind": "function"
		},
		{
			"trigger": "apache_get_modules()",
			"contents": "apache_get_modules()",
			"kind": "function"
		},
		{
			"trigger": "apache_get_version()",
			"contents": "apache_get_version()",
			"kind": "function"
		},
		{
			"trigger": "apache_getenv()",
			"contents": "apache_getenv(${1:variable})",
			"kind": "function"
		},
		{
			"trigger": "apache_lookup_uri()",
			"contents": "apache_lookup_uri(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "apache_note()",
			"contents": "apache_note(${1:note_name})",
			"kind": "function"
		},
		{
			"trigger": "apache_request_headers()",
			"contents": "apache_request_headers()",
			"kind": "function"
		},
		{
			"trigger": "apache_reset_timeout()",
			"contents": "apache_reset_timeout()",
			"kind": "function"
		},
		{
			"trigger": "apache_response_headers()",
			"contents": "apache_response_headers()",
			"kind": "function"
		},
		{
			"trigger": "apache_setenv()",
			"contents": "apache_setenv(${1:variable}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "apc_add()",
			"contents": "apc_add(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apc_bin_dump()",
			"contents": "apc_bin_dump()",
			"kind": "function"
		},
		{
			"trigger": "apc_bin_dumpfile()",
			"contents": "apc_bin_dumpfile(${1:files}, ${2:user_vars}, ${3:filename})",
			"kind": "function"
		},
		{
			"trigger": "apc_bin_load()",
			"contents": "apc_bin_load(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "apc_bin_loadfile()",
			"contents": "apc_bin_loadfile(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "apc_cache_info()",
			"contents": "apc_cache_info()",
			"kind": "function"
		},
		{
			"trigger": "apc_cas()",
			"contents": "apc_cas(${1:key}, ${2:old}, ${3:new})",
			"kind": "function"
		},
		{
			"trigger": "apc_clear_cache()",
			"contents": "apc_clear_cache()",
			"kind": "function"
		},
		{
			"trigger": "apc_compile_file()",
			"contents": "apc_compile_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "apc_dec()",
			"contents": "apc_dec(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apc_define_constants()",
			"contents": "apc_define_constants(${1:key}, ${2:constants})",
			"kind": "function"
		},
		{
			"trigger": "apc_delete()",
			"contents": "apc_delete(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apc_delete_file()",
			"contents": "apc_delete_file(${1:keys})",
			"kind": "function"
		},
		{
			"trigger": "apc_exists()",
			"contents": "apc_exists(${1:keys})",
			"kind": "function"
		},
		{
			"trigger": "apc_fetch()",
			"contents": "apc_fetch(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apc_inc()",
			"contents": "apc_inc(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apc_load_constants()",
			"contents": "apc_load_constants(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apc_sma_info()",
			"contents": "apc_sma_info()",
			"kind": "function"
		},
		{
			"trigger": "apc_store()",
			"contents": "apc_store(${1:key}, ${2:var})",
			"kind": "function"
		},
		{
			"trigger": "apcu_add()",
			"contents": "apcu_add(${1:key}, ${2:var})",
			"kind": "function"
		},
		{
			"trigger": "apcu_cache_info()",
			"contents": "apcu_cache_info()",
			"kind": "function"
		},
		{
			"trigger": "apcu_cas()",
			"contents": "apcu_cas(${1:key}, ${2:old}, ${3:new})",
			"kind": "function"
		},
		{
			"trigger": "apcu_clear_cache()",
			"contents": "apcu_clear_cache()",
			"kind": "function"
		},
		{
			"trigger": "apcu_dec()",
			"contents": "apcu_dec(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apcu_delete()",
			"contents": "apcu_delete(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apcu_entry()",
			"contents": "apcu_entry(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apcu_exists()",
			"contents": "apcu_exists(${1:keys})",
			"kind": "function"
		},
		{
			"trigger": "apcu_fetch()",
			"contents": "apcu_fetch(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apcu_inc()",
			"contents": "apcu_inc(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "apcu_sma_info()",
			"contents": "apcu_sma_info()",
			"kind": "function"
		},
		{
			"trigger": "apcu_store()",
			"contents": "apcu_store(${1:key}, ${2:var})",
			"kind": "function"
		},
		{
			"trigger": "apd_breakpoint()",
			"contents": "apd_breakpoint(${1:debug_level})",
			"kind": "function"
		},
		{
			"trigger": "apd_callstack()",
			"contents": "apd_callstack()",
			"kind": "function"
		},
		{
			"trigger": "apd_clunk()",
			"contents": "apd_clunk(${1:warning})",
			"kind": "function"
		},
		{
			"trigger": "apd_continue()",
			"contents": "apd_continue(${1:debug_level})",
			"kind": "function"
		},
		{
			"trigger": "apd_croak()",
			"contents": "apd_croak(${1:warning})",
			"kind": "function"
		},
		{
			"trigger": "apd_dump_function_table()",
			"contents": "apd_dump_function_table()",
			"kind": "function"
		},
		{
			"trigger": "apd_dump_persistent_resources()",
			"contents": "apd_dump_persistent_resources()",
			"kind": "function"
		},
		{
			"trigger": "apd_dump_regular_resources()",
			"contents": "apd_dump_regular_resources()",
			"kind": "function"
		},
		{
			"trigger": "apd_echo()",
			"contents": "apd_echo(${1:output})",
			"kind": "function"
		},
		{
			"trigger": "apd_get_active_symbols()",
			"contents": "apd_get_active_symbols()",
			"kind": "function"
		},
		{
			"trigger": "apd_set_pprof_trace()",
			"contents": "apd_set_pprof_trace()",
			"kind": "function"
		},
		{
			"trigger": "apd_set_session()",
			"contents": "apd_set_session(${1:debug_level})",
			"kind": "function"
		},
		{
			"trigger": "apd_set_session_trace()",
			"contents": "apd_set_session_trace(${1:debug_level})",
			"kind": "function"
		},
		{
			"trigger": "apd_set_session_trace_socket()",
			"contents": "apd_set_session_trace_socket(${1:tcp_server}, ${2:socket_type}, ${3:port}, ${4:debug_level})",
			"kind": "function"
		},
		{
			"trigger": "array()",
			"contents": "array()",
			"kind": "function"
		},
		{
			"trigger": "array_change_key_case()",
			"contents": "array_change_key_case(${1:input})",
			"kind": "function"
		},
		{
			"trigger": "array_chunk()",
			"contents": "array_chunk(${1:input}, ${2:size})",
			"kind": "function"
		},
		{
			"trigger": "array_column()",
			"contents": "array_column(${1:input}, ${2:column_key})",
			"kind": "function"
		},
		{
			"trigger": "array_combine()",
			"contents": "array_combine(${1:keys}, ${2:values})",
			"kind": "function"
		},
		{
			"trigger": "array_count_values()",
			"contents": "array_count_values(${1:input})",
			"kind": "function"
		},
		{
			"trigger": "array_diff()",
			"contents": "array_diff(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_diff_assoc()",
			"contents": "array_diff_assoc(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_diff_key()",
			"contents": "array_diff_key(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_diff_uassoc()",
			"contents": "array_diff_uassoc(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_diff_ukey()",
			"contents": "array_diff_ukey(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_fill()",
			"contents": "array_fill(${1:start_index}, ${2:num}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "array_fill_keys()",
			"contents": "array_fill_keys(${1:keys}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "array_filter()",
			"contents": "array_filter(${1:input})",
			"kind": "function"
		},
		{
			"trigger": "array_flip()",
			"contents": "array_flip(${1:trans})",
			"kind": "function"
		},
		{
			"trigger": "array_intersect()",
			"contents": "array_intersect(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_intersect_assoc()",
			"contents": "array_intersect_assoc(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_intersect_key()",
			"contents": "array_intersect_key(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_intersect_uassoc()",
			"contents": "array_intersect_uassoc(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_intersect_ukey()",
			"contents": "array_intersect_ukey(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_key_exists()",
			"contents": "array_key_exists(${1:key}, ${2:array})",
			"kind": "function"
		},
		{
			"trigger": "array_keys()",
			"contents": "array_keys(${1:input})",
			"kind": "function"
		},
		{
			"trigger": "array_map()",
			"contents": "array_map(${1:callback}, ${2:arr1})",
			"kind": "function"
		},
		{
			"trigger": "array_merge()",
			"contents": "array_merge(${1:array1})",
			"kind": "function"
		},
		{
			"trigger": "array_merge_recursive()",
			"contents": "array_merge_recursive(${1:array1})",
			"kind": "function"
		},
		{
			"trigger": "array_multisort()",
			"contents": "array_multisort(${1:arr})",
			"kind": "function"
		},
		{
			"trigger": "array_pad()",
			"contents": "array_pad(${1:input}, ${2:pad_size}, ${3:pad_value})",
			"kind": "function"
		},
		{
			"trigger": "array_pop()",
			"contents": "array_pop(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "array_product()",
			"contents": "array_product(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "array_push()",
			"contents": "array_push(${1:array}, ${2:var})",
			"kind": "function"
		},
		{
			"trigger": "array_rand()",
			"contents": "array_rand(${1:input})",
			"kind": "function"
		},
		{
			"trigger": "array_reduce()",
			"contents": "array_reduce(${1:input}, ${2:function})",
			"kind": "function"
		},
		{
			"trigger": "array_replace()",
			"contents": "array_replace(${1:array}, ${2:array1})",
			"kind": "function"
		},
		{
			"trigger": "array_replace_recursive()",
			"contents": "array_replace_recursive(${1:array}, ${2:array1})",
			"kind": "function"
		},
		{
			"trigger": "array_reverse()",
			"contents": "array_reverse(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "array_search()",
			"contents": "array_search(${1:needle}, ${2:haystack})",
			"kind": "function"
		},
		{
			"trigger": "array_shift()",
			"contents": "array_shift(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "array_slice()",
			"contents": "array_slice(${1:array}, ${2:offset})",
			"kind": "function"
		},
		{
			"trigger": "array_splice()",
			"contents": "array_splice(${1:input}, ${2:offset})",
			"kind": "function"
		},
		{
			"trigger": "array_sum()",
			"contents": "array_sum(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "array_udiff()",
			"contents": "array_udiff(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_udiff_assoc()",
			"contents": "array_udiff_assoc(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_udiff_uassoc()",
			"contents": "array_udiff_uassoc(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_uintersect()",
			"contents": "array_uintersect(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_uintersect_assoc()",
			"contents": "array_uintersect_assoc(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_uintersect_uassoc()",
			"contents": "array_uintersect_uassoc(${1:array1}, ${2:array2})",
			"kind": "function"
		},
		{
			"trigger": "array_unique()",
			"contents": "array_unique(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "array_unshift()",
			"contents": "array_unshift(${1:array}, ${2:var})",
			"kind": "function"
		},
		{
			"trigger": "array_values()",
			"contents": "array_values(${1:input})",
			"kind": "function"
		},
		{
			"trigger": "array_walk()",
			"contents": "array_walk(${1:array}, ${2:funcname})",
			"kind": "function"
		},
		{
			"trigger": "array_walk_recursive()",
			"contents": "array_walk_recursive(${1:input}, ${2:funcname})",
			"kind": "function"
		},
		{
			"trigger": "arsort()",
			"contents": "arsort(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "asin()",
			"contents": "asin(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "asinh()",
			"contents": "asinh(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "asort()",
			"contents": "asort(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "assert()",
			"contents": "assert(${1:assertion})",
			"kind": "function"
		},
		{
			"trigger": "assert_options()",
			"contents": "assert_options(${1:what})",
			"kind": "function"
		},
		{
			"trigger": "atan()",
			"contents": "atan(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "atan2()",
			"contents": "atan2(${1:y}, ${2:x})",
			"kind": "function"
		},
		{
			"trigger": "atanh()",
			"contents": "atanh(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "base64_decode()",
			"contents": "base64_decode(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "base64_encode()",
			"contents": "base64_encode(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "base_convert()",
			"contents": "base_convert(${1:number}, ${2:frombase}, ${3:tobase})",
			"kind": "function"
		},
		{
			"trigger": "basename()",
			"contents": "basename(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "bbcode_add_element()",
			"contents": "bbcode_add_element(${1:bbcode_container}, ${2:tag_name}, ${3:tag_rules})",
			"kind": "function"
		},
		{
			"trigger": "bbcode_add_smiley()",
			"contents": "bbcode_add_smiley(${1:bbcode_container}, ${2:smiley}, ${3:replace_by})",
			"kind": "function"
		},
		{
			"trigger": "bbcode_create()",
			"contents": "bbcode_create()",
			"kind": "function"
		},
		{
			"trigger": "bbcode_destroy()",
			"contents": "bbcode_destroy(${1:bbcode_container})",
			"kind": "function"
		},
		{
			"trigger": "bbcode_parse()",
			"contents": "bbcode_parse(${1:bbcode_container}, ${2:to_parse})",
			"kind": "function"
		},
		{
			"trigger": "bbcode_set_arg_parser()",
			"contents": "bbcode_set_arg_parser(${1:bbcode_container}, ${2:bbcode_arg_parser})",
			"kind": "function"
		},
		{
			"trigger": "bbcode_set_flags()",
			"contents": "bbcode_set_flags(${1:bbcode_container}, ${2:flags})",
			"kind": "function"
		},
		{
			"trigger": "bcadd()",
			"contents": "bcadd(${1:left_operand}, ${2:right_operand})",
			"kind": "function"
		},
		{
			"trigger": "bccomp()",
			"contents": "bccomp(${1:left_operand}, ${2:right_operand})",
			"kind": "function"
		},
		{
			"trigger": "bcdiv()",
			"contents": "bcdiv(${1:left_operand}, ${2:right_operand})",
			"kind": "function"
		},
		{
			"trigger": "bcmod()",
			"contents": "bcmod(${1:left_operand}, ${2:modulus})",
			"kind": "function"
		},
		{
			"trigger": "bcmul()",
			"contents": "bcmul(${1:left_operand}, ${2:right_operand})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_load()",
			"contents": "bcompiler_load(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_load_exe()",
			"contents": "bcompiler_load_exe(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_parse_class()",
			"contents": "bcompiler_parse_class(${1:class}, ${2:callback})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_read()",
			"contents": "bcompiler_read(${1:filehandle})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_write_class()",
			"contents": "bcompiler_write_class(${1:filehandle}, ${2:className})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_write_constant()",
			"contents": "bcompiler_write_constant(${1:filehandle}, ${2:constantName})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_write_exe_footer()",
			"contents": "bcompiler_write_exe_footer(${1:filehandle}, ${2:startpos})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_write_file()",
			"contents": "bcompiler_write_file(${1:filehandle}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_write_footer()",
			"contents": "bcompiler_write_footer(${1:filehandle})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_write_function()",
			"contents": "bcompiler_write_function(${1:filehandle}, ${2:functionName})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_write_functions_from_file()",
			"contents": "bcompiler_write_functions_from_file(${1:filehandle}, ${2:fileName})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_write_header()",
			"contents": "bcompiler_write_header(${1:filehandle})",
			"kind": "function"
		},
		{
			"trigger": "bcompiler_write_included_filename()",
			"contents": "bcompiler_write_included_filename(${1:filehandle}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "bcpow()",
			"contents": "bcpow(${1:left_operand}, ${2:right_operand})",
			"kind": "function"
		},
		{
			"trigger": "bcpowmod()",
			"contents": "bcpowmod(${1:left_operand}, ${2:right_operand}, ${3:modulus})",
			"kind": "function"
		},
		{
			"trigger": "bcscale()",
			"contents": "bcscale(${1:scale})",
			"kind": "function"
		},
		{
			"trigger": "bcsqrt()",
			"contents": "bcsqrt(${1:operand})",
			"kind": "function"
		},
		{
			"trigger": "bcsub()",
			"contents": "bcsub(${1:left_operand}, ${2:right_operand})",
			"kind": "function"
		},
		{
			"trigger": "bin2hex()",
			"contents": "bin2hex(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "bind_textdomain_codeset()",
			"contents": "bind_textdomain_codeset(${1:domain}, ${2:codeset})",
			"kind": "function"
		},
		{
			"trigger": "bindec()",
			"contents": "bindec(${1:binary_string})",
			"kind": "function"
		},
		{
			"trigger": "bindtextdomain()",
			"contents": "bindtextdomain(${1:domain}, ${2:directory})",
			"kind": "function"
		},
		{
			"trigger": "boolval()",
			"contents": "boolval(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "bson_decode()",
			"contents": "bson_decode(${1:bson})",
			"kind": "function"
		},
		{
			"trigger": "bson_encode()",
			"contents": "bson_encode(${1:anything})",
			"kind": "function"
		},
		{
			"trigger": "bzclose()",
			"contents": "bzclose(${1:bz})",
			"kind": "function"
		},
		{
			"trigger": "bzcompress()",
			"contents": "bzcompress(${1:source}, ${2:blocksize}, ${3:workfactor})",
			"kind": "function"
		},
		{
			"trigger": "bzdecompress()",
			"contents": "bzdecompress(${1:source})",
			"kind": "function"
		},
		{
			"trigger": "bzerrno()",
			"contents": "bzerrno(${1:bz})",
			"kind": "function"
		},
		{
			"trigger": "bzerror()",
			"contents": "bzerror(${1:bz})",
			"kind": "function"
		},
		{
			"trigger": "bzerrstr()",
			"contents": "bzerrstr(${1:bz})",
			"kind": "function"
		},
		{
			"trigger": "bzflush()",
			"contents": "bzflush(${1:bz})",
			"kind": "function"
		},
		{
			"trigger": "bzopen()",
			"contents": "bzopen(${1:filename}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "bzread()",
			"contents": "bzread(${1:bz})",
			"kind": "function"
		},
		{
			"trigger": "bzwrite()",
			"contents": "bzwrite(${1:bz}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "cairo_create()",
			"contents": "cairo_create(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_face_get_type()",
			"contents": "cairo_font_face_get_type(${1:fontface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_face_status()",
			"contents": "cairo_font_face_status(${1:fontface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_create()",
			"contents": "cairo_font_options_create()",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_equal()",
			"contents": "cairo_font_options_equal(${1:options}, ${2:other})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_get_antialias()",
			"contents": "cairo_font_options_get_antialias(${1:options})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_get_hint_metrics()",
			"contents": "cairo_font_options_get_hint_metrics(${1:options})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_get_hint_style()",
			"contents": "cairo_font_options_get_hint_style(${1:options})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_get_subpixel_order()",
			"contents": "cairo_font_options_get_subpixel_order(${1:options})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_hash()",
			"contents": "cairo_font_options_hash(${1:options})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_merge()",
			"contents": "cairo_font_options_merge(${1:options}, ${2:other})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_set_antialias()",
			"contents": "cairo_font_options_set_antialias(${1:options}, ${2:antialias})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_set_hint_metrics()",
			"contents": "cairo_font_options_set_hint_metrics(${1:options}, ${2:hint_metrics})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_set_hint_style()",
			"contents": "cairo_font_options_set_hint_style(${1:options}, ${2:hint_style})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_set_subpixel_order()",
			"contents": "cairo_font_options_set_subpixel_order(${1:options}, ${2:subpixel_order})",
			"kind": "function"
		},
		{
			"trigger": "cairo_font_options_status()",
			"contents": "cairo_font_options_status(${1:options})",
			"kind": "function"
		},
		{
			"trigger": "cairo_format_stride_for_width()",
			"contents": "cairo_format_stride_for_width(${1:format}, ${2:width})",
			"kind": "function"
		},
		{
			"trigger": "cairo_image_surface_create()",
			"contents": "cairo_image_surface_create(${1:format}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "cairo_image_surface_create_for_data()",
			"contents": "cairo_image_surface_create_for_data(${1:data}, ${2:format}, ${3:width}, ${4:height})",
			"kind": "function"
		},
		{
			"trigger": "cairo_image_surface_create_from_png()",
			"contents": "cairo_image_surface_create_from_png(${1:file})",
			"kind": "function"
		},
		{
			"trigger": "cairo_image_surface_get_data()",
			"contents": "cairo_image_surface_get_data(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_image_surface_get_format()",
			"contents": "cairo_image_surface_get_format(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_image_surface_get_height()",
			"contents": "cairo_image_surface_get_height(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_image_surface_get_stride()",
			"contents": "cairo_image_surface_get_stride(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_image_surface_get_width()",
			"contents": "cairo_image_surface_get_width(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_matrix_create_scale()",
			"contents": "cairo_matrix_create_scale()",
			"kind": "function"
		},
		{
			"trigger": "cairo_matrix_create_translate()",
			"contents": "cairo_matrix_create_translate()",
			"kind": "function"
		},
		{
			"trigger": "cairo_matrix_invert()",
			"contents": "cairo_matrix_invert(${1:matrix})",
			"kind": "function"
		},
		{
			"trigger": "cairo_matrix_multiply()",
			"contents": "cairo_matrix_multiply(${1:matrix1}, ${2:matrix2})",
			"kind": "function"
		},
		{
			"trigger": "cairo_matrix_rotate()",
			"contents": "cairo_matrix_rotate(${1:matrix}, ${2:radians})",
			"kind": "function"
		},
		{
			"trigger": "cairo_matrix_transform_distance()",
			"contents": "cairo_matrix_transform_distance(${1:matrix}, ${2:dx}, ${3:dy})",
			"kind": "function"
		},
		{
			"trigger": "cairo_matrix_transform_point()",
			"contents": "cairo_matrix_transform_point(${1:matrix}, ${2:dx}, ${3:dy})",
			"kind": "function"
		},
		{
			"trigger": "cairo_matrix_translate()",
			"contents": "cairo_matrix_translate(${1:matrix}, ${2:tx}, ${3:ty})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_add_color_stop_rgb()",
			"contents": "cairo_pattern_add_color_stop_rgb(${1:pattern}, ${2:offset}, ${3:red}, ${4:green}, ${5:blue})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_add_color_stop_rgba()",
			"contents": "cairo_pattern_add_color_stop_rgba(${1:pattern}, ${2:offset}, ${3:red}, ${4:green}, ${5:blue}, ${6:alpha})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_create_for_surface()",
			"contents": "cairo_pattern_create_for_surface(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_create_linear()",
			"contents": "cairo_pattern_create_linear(${1:x0}, ${2:y0}, ${3:x1}, ${4:y1})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_create_radial()",
			"contents": "cairo_pattern_create_radial(${1:x0}, ${2:y0}, ${3:r0}, ${4:x1}, ${5:y1}, ${6:r1})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_create_rgb()",
			"contents": "cairo_pattern_create_rgb(${1:red}, ${2:green}, ${3:blue})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_create_rgba()",
			"contents": "cairo_pattern_create_rgba(${1:red}, ${2:green}, ${3:blue}, ${4:alpha})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_get_color_stop_count()",
			"contents": "cairo_pattern_get_color_stop_count(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_get_color_stop_rgba()",
			"contents": "cairo_pattern_get_color_stop_rgba(${1:pattern}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_get_extend()",
			"contents": "cairo_pattern_get_extend(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_get_filter()",
			"contents": "cairo_pattern_get_filter(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_get_linear_points()",
			"contents": "cairo_pattern_get_linear_points(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_get_matrix()",
			"contents": "cairo_pattern_get_matrix(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_get_radial_circles()",
			"contents": "cairo_pattern_get_radial_circles(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_get_rgba()",
			"contents": "cairo_pattern_get_rgba(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_get_surface()",
			"contents": "cairo_pattern_get_surface(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_get_type()",
			"contents": "cairo_pattern_get_type(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_set_extend()",
			"contents": "cairo_pattern_set_extend(${1:pattern}, ${2:extend})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_set_filter()",
			"contents": "cairo_pattern_set_filter(${1:pattern}, ${2:filter})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_set_matrix()",
			"contents": "cairo_pattern_set_matrix(${1:pattern}, ${2:matrix})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pattern_status()",
			"contents": "cairo_pattern_status(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pdf_surface_create()",
			"contents": "cairo_pdf_surface_create(${1:file}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "cairo_pdf_surface_set_size()",
			"contents": "cairo_pdf_surface_set_size(${1:surface}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "cairo_ps_get_levels()",
			"contents": "cairo_ps_get_levels()",
			"kind": "function"
		},
		{
			"trigger": "cairo_ps_level_to_string()",
			"contents": "cairo_ps_level_to_string(${1:level})",
			"kind": "function"
		},
		{
			"trigger": "cairo_ps_surface_create()",
			"contents": "cairo_ps_surface_create(${1:file}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "cairo_ps_surface_dsc_begin_page_setup()",
			"contents": "cairo_ps_surface_dsc_begin_page_setup(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_ps_surface_dsc_begin_setup()",
			"contents": "cairo_ps_surface_dsc_begin_setup(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_ps_surface_dsc_comment()",
			"contents": "cairo_ps_surface_dsc_comment(${1:surface}, ${2:comment})",
			"kind": "function"
		},
		{
			"trigger": "cairo_ps_surface_get_eps()",
			"contents": "cairo_ps_surface_get_eps(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_ps_surface_restrict_to_level()",
			"contents": "cairo_ps_surface_restrict_to_level(${1:surface}, ${2:level})",
			"kind": "function"
		},
		{
			"trigger": "cairo_ps_surface_set_eps()",
			"contents": "cairo_ps_surface_set_eps(${1:surface}, ${2:level})",
			"kind": "function"
		},
		{
			"trigger": "cairo_ps_surface_set_size()",
			"contents": "cairo_ps_surface_set_size(${1:surface}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_create()",
			"contents": "cairo_scaled_font_create(${1:fontface}, ${2:matrix}, ${3:ctm}, ${4:fontoptions})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_extents()",
			"contents": "cairo_scaled_font_extents(${1:scaledfont})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_get_ctm()",
			"contents": "cairo_scaled_font_get_ctm(${1:scaledfont})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_get_font_face()",
			"contents": "cairo_scaled_font_get_font_face(${1:scaledfont})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_get_font_matrix()",
			"contents": "cairo_scaled_font_get_font_matrix(${1:scaledfont})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_get_font_options()",
			"contents": "cairo_scaled_font_get_font_options(${1:scaledfont})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_get_scale_matrix()",
			"contents": "cairo_scaled_font_get_scale_matrix(${1:scaledfont})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_get_type()",
			"contents": "cairo_scaled_font_get_type(${1:scaledfont})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_glyph_extents()",
			"contents": "cairo_scaled_font_glyph_extents(${1:scaledfont}, ${2:glyphs})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_status()",
			"contents": "cairo_scaled_font_status(${1:scaledfont})",
			"kind": "function"
		},
		{
			"trigger": "cairo_scaled_font_text_extents()",
			"contents": "cairo_scaled_font_text_extents(${1:scaledfont}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_copy_page()",
			"contents": "cairo_surface_copy_page(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_create_similar()",
			"contents": "cairo_surface_create_similar(${1:surface}, ${2:content}, ${3:width}, ${4:height})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_finish()",
			"contents": "cairo_surface_finish(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_flush()",
			"contents": "cairo_surface_flush(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_get_content()",
			"contents": "cairo_surface_get_content(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_get_device_offset()",
			"contents": "cairo_surface_get_device_offset(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_get_font_options()",
			"contents": "cairo_surface_get_font_options(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_get_type()",
			"contents": "cairo_surface_get_type(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_mark_dirty()",
			"contents": "cairo_surface_mark_dirty(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_mark_dirty_rectangle()",
			"contents": "cairo_surface_mark_dirty_rectangle(${1:surface}, ${2:x}, ${3:y}, ${4:width}, ${5:height})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_set_device_offset()",
			"contents": "cairo_surface_set_device_offset(${1:surface}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_set_fallback_resolution()",
			"contents": "cairo_surface_set_fallback_resolution(${1:surface}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_show_page()",
			"contents": "cairo_surface_show_page(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_status()",
			"contents": "cairo_surface_status(${1:surface})",
			"kind": "function"
		},
		{
			"trigger": "cairo_surface_write_to_png()",
			"contents": "cairo_surface_write_to_png(${1:surface}, ${2:stream})",
			"kind": "function"
		},
		{
			"trigger": "cairo_svg_surface_create()",
			"contents": "cairo_svg_surface_create(${1:file}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "cairo_svg_surface_restrict_to_version()",
			"contents": "cairo_svg_surface_restrict_to_version(${1:surface}, ${2:version})",
			"kind": "function"
		},
		{
			"trigger": "cairo_svg_version_to_string()",
			"contents": "cairo_svg_version_to_string(${1:version})",
			"kind": "function"
		},
		{
			"trigger": "cal_days_in_month()",
			"contents": "cal_days_in_month(${1:calendar}, ${2:month}, ${3:year})",
			"kind": "function"
		},
		{
			"trigger": "cal_from_jd()",
			"contents": "cal_from_jd(${1:jd}, ${2:calendar})",
			"kind": "function"
		},
		{
			"trigger": "cal_info()",
			"contents": "cal_info()",
			"kind": "function"
		},
		{
			"trigger": "cal_to_jd()",
			"contents": "cal_to_jd(${1:calendar}, ${2:month}, ${3:day}, ${4:year})",
			"kind": "function"
		},
		{
			"trigger": "calcul_hmac()",
			"contents": "calcul_hmac(${1:clent}, ${2:siretcode}, ${3:price}, ${4:reference}, ${5:validity}, ${6:taxation}, ${7:devise}, ${8:language})",
			"kind": "function"
		},
		{
			"trigger": "calculhmac()",
			"contents": "calculhmac(${1:clent}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "call_user_func()",
			"contents": "call_user_func(${1:function})",
			"kind": "function"
		},
		{
			"trigger": "call_user_func_array()",
			"contents": "call_user_func_array(${1:function}, ${2:param_arr})",
			"kind": "function"
		},
		{
			"trigger": "call_user_method()",
			"contents": "call_user_method(${1:method_name}, ${2:obj})",
			"kind": "function"
		},
		{
			"trigger": "call_user_method_array()",
			"contents": "call_user_method_array(${1:method_name}, ${2:obj}, ${3:params})",
			"kind": "function"
		},
		{
			"trigger": "ceil()",
			"contents": "ceil(${1:value})",
			"kind": "function"
		},
		{
			"trigger": "chdb_create()",
			"contents": "chdb_create(${1:pathname}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "chdir()",
			"contents": "chdir(${1:directory})",
			"kind": "function"
		},
		{
			"trigger": "checkdate()",
			"contents": "checkdate(${1:month}, ${2:day}, ${3:year})",
			"kind": "function"
		},
		{
			"trigger": "checkdnsrr()",
			"contents": "checkdnsrr(${1:host})",
			"kind": "function"
		},
		{
			"trigger": "chgrp()",
			"contents": "chgrp(${1:filename}, ${2:group})",
			"kind": "function"
		},
		{
			"trigger": "chmod()",
			"contents": "chmod(${1:filename}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "chop()",
			"contents": "chop()",
			"kind": "function"
		},
		{
			"trigger": "chown()",
			"contents": "chown(${1:filename}, ${2:user})",
			"kind": "function"
		},
		{
			"trigger": "chr()",
			"contents": "chr(${1:ascii})",
			"kind": "function"
		},
		{
			"trigger": "chroot()",
			"contents": "chroot(${1:directory})",
			"kind": "function"
		},
		{
			"trigger": "chunk_split()",
			"contents": "chunk_split(${1:body})",
			"kind": "function"
		},
		{
			"trigger": "class_alias()",
			"contents": "class_alias()",
			"kind": "function"
		},
		{
			"trigger": "class_exists()",
			"contents": "class_exists(${1:class_name})",
			"kind": "function"
		},
		{
			"trigger": "class_implements()",
			"contents": "class_implements(${1:class})",
			"kind": "function"
		},
		{
			"trigger": "class_parents()",
			"contents": "class_parents(${1:class})",
			"kind": "function"
		},
		{
			"trigger": "classkit_import()",
			"contents": "classkit_import(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "classkit_method_add()",
			"contents": "classkit_method_add(${1:classname}, ${2:methodname}, ${3:args}, ${4:code})",
			"kind": "function"
		},
		{
			"trigger": "classkit_method_copy()",
			"contents": "classkit_method_copy(${1:dClass}, ${2:dMethod}, ${3:sClass})",
			"kind": "function"
		},
		{
			"trigger": "classkit_method_redefine()",
			"contents": "classkit_method_redefine(${1:classname}, ${2:methodname}, ${3:args}, ${4:code})",
			"kind": "function"
		},
		{
			"trigger": "classkit_method_remove()",
			"contents": "classkit_method_remove(${1:classname}, ${2:methodname})",
			"kind": "function"
		},
		{
			"trigger": "classkit_method_rename()",
			"contents": "classkit_method_rename(${1:classname}, ${2:methodname}, ${3:newname})",
			"kind": "function"
		},
		{
			"trigger": "clearstatcache()",
			"contents": "clearstatcache()",
			"kind": "function"
		},
		{
			"trigger": "closedir()",
			"contents": "closedir()",
			"kind": "function"
		},
		{
			"trigger": "closelog()",
			"contents": "closelog()",
			"kind": "function"
		},
		{
			"trigger": "com_addref()",
			"contents": "com_addref()",
			"kind": "function"
		},
		{
			"trigger": "com_create_guid()",
			"contents": "com_create_guid()",
			"kind": "function"
		},
		{
			"trigger": "com_event_sink()",
			"contents": "com_event_sink(${1:comobject}, ${2:sinkobject})",
			"kind": "function"
		},
		{
			"trigger": "com_get()",
			"contents": "com_get()",
			"kind": "function"
		},
		{
			"trigger": "com_get_active_object()",
			"contents": "com_get_active_object(${1:progid})",
			"kind": "function"
		},
		{
			"trigger": "com_invoke()",
			"contents": "com_invoke(${1:com_object}, ${2:function_name})",
			"kind": "function"
		},
		{
			"trigger": "com_isenum()",
			"contents": "com_isenum(${1:com_module})",
			"kind": "function"
		},
		{
			"trigger": "com_load()",
			"contents": "com_load()",
			"kind": "function"
		},
		{
			"trigger": "com_load_typelib()",
			"contents": "com_load_typelib(${1:typelib_name})",
			"kind": "function"
		},
		{
			"trigger": "com_message_pump()",
			"contents": "com_message_pump()",
			"kind": "function"
		},
		{
			"trigger": "com_print_typeinfo()",
			"contents": "com_print_typeinfo(${1:comobject})",
			"kind": "function"
		},
		{
			"trigger": "com_propget()",
			"contents": "com_propget()",
			"kind": "function"
		},
		{
			"trigger": "com_propput()",
			"contents": "com_propput()",
			"kind": "function"
		},
		{
			"trigger": "com_propset()",
			"contents": "com_propset()",
			"kind": "function"
		},
		{
			"trigger": "com_release()",
			"contents": "com_release()",
			"kind": "function"
		},
		{
			"trigger": "com_set()",
			"contents": "com_set()",
			"kind": "function"
		},
		{
			"trigger": "compact()",
			"contents": "compact(${1:varname})",
			"kind": "function"
		},
		{
			"trigger": "connection_aborted()",
			"contents": "connection_aborted()",
			"kind": "function"
		},
		{
			"trigger": "connection_status()",
			"contents": "connection_status()",
			"kind": "function"
		},
		{
			"trigger": "connection_timeout()",
			"contents": "connection_timeout()",
			"kind": "function"
		},
		{
			"trigger": "constant()",
			"contents": "constant(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "convert_cyr_string()",
			"contents": "convert_cyr_string(${1:str}, ${2:from}, ${3:to})",
			"kind": "function"
		},
		{
			"trigger": "convert_uudecode()",
			"contents": "convert_uudecode(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "convert_uuencode()",
			"contents": "convert_uuencode(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "copy()",
			"contents": "copy(${1:source}, ${2:dest})",
			"kind": "function"
		},
		{
			"trigger": "cos()",
			"contents": "cos(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "cosh()",
			"contents": "cosh(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "count()",
			"contents": "count(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "count_chars()",
			"contents": "count_chars(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "counter_bump()",
			"contents": "counter_bump(${1:offset})",
			"kind": "function"
		},
		{
			"trigger": "counter_bump_value()",
			"contents": "counter_bump_value(${1:counter}, ${2:offset})",
			"kind": "function"
		},
		{
			"trigger": "counter_create()",
			"contents": "counter_create(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "counter_get()",
			"contents": "counter_get()",
			"kind": "function"
		},
		{
			"trigger": "counter_get_meta()",
			"contents": "counter_get_meta(${1:counter}, ${2:attribute})",
			"kind": "function"
		},
		{
			"trigger": "counter_get_named()",
			"contents": "counter_get_named(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "counter_get_value()",
			"contents": "counter_get_value(${1:counter})",
			"kind": "function"
		},
		{
			"trigger": "counter_reset()",
			"contents": "counter_reset()",
			"kind": "function"
		},
		{
			"trigger": "counter_reset_value()",
			"contents": "counter_reset_value(${1:counter})",
			"kind": "function"
		},
		{
			"trigger": "crack_check()",
			"contents": "crack_check(${1:dictionary}, ${2:password})",
			"kind": "function"
		},
		{
			"trigger": "crack_closedict()",
			"contents": "crack_closedict()",
			"kind": "function"
		},
		{
			"trigger": "crack_getlastmessage()",
			"contents": "crack_getlastmessage()",
			"kind": "function"
		},
		{
			"trigger": "crack_opendict()",
			"contents": "crack_opendict(${1:dictionary})",
			"kind": "function"
		},
		{
			"trigger": "crc32()",
			"contents": "crc32(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "create_function()",
			"contents": "create_function(${1:args}, ${2:code})",
			"kind": "function"
		},
		{
			"trigger": "crypt()",
			"contents": "crypt(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "ctype_alnum()",
			"contents": "ctype_alnum(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ctype_alpha()",
			"contents": "ctype_alpha(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ctype_cntrl()",
			"contents": "ctype_cntrl(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ctype_digit()",
			"contents": "ctype_digit(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ctype_graph()",
			"contents": "ctype_graph(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ctype_lower()",
			"contents": "ctype_lower(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ctype_print()",
			"contents": "ctype_print(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ctype_punct()",
			"contents": "ctype_punct(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ctype_space()",
			"contents": "ctype_space(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ctype_upper()",
			"contents": "ctype_upper(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ctype_xdigit()",
			"contents": "ctype_xdigit(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_affected_rows()",
			"contents": "cubrid_affected_rows()",
			"kind": "function"
		},
		{
			"trigger": "cubrid_bind()",
			"contents": "cubrid_bind(${1:req_identifier}, ${2:bind_index}, ${3:bind_value})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_client_encoding()",
			"contents": "cubrid_client_encoding()",
			"kind": "function"
		},
		{
			"trigger": "cubrid_close()",
			"contents": "cubrid_close()",
			"kind": "function"
		},
		{
			"trigger": "cubrid_close_prepare()",
			"contents": "cubrid_close_prepare(${1:req_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_close_request()",
			"contents": "cubrid_close_request(${1:req_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_col_get()",
			"contents": "cubrid_col_get(${1:conn_identifier}, ${2:oid}, ${3:attr_name})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_col_size()",
			"contents": "cubrid_col_size(${1:conn_identifier}, ${2:oid}, ${3:attr_name})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_column_names()",
			"contents": "cubrid_column_names(${1:req_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_column_types()",
			"contents": "cubrid_column_types(${1:req_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_commit()",
			"contents": "cubrid_commit(${1:conn_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_connect()",
			"contents": "cubrid_connect(${1:host}, ${2:port}, ${3:dbname})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_connect_with_url()",
			"contents": "cubrid_connect_with_url(${1:conn_url})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_current_oid()",
			"contents": "cubrid_current_oid(${1:req_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_data_seek()",
			"contents": "cubrid_data_seek(${1:req_identifier}, ${2:row_number})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_db_name()",
			"contents": "cubrid_db_name(${1:result}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_disconnect()",
			"contents": "cubrid_disconnect(${1:conn_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_drop()",
			"contents": "cubrid_drop(${1:conn_identifier}, ${2:oid})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_errno()",
			"contents": "cubrid_errno()",
			"kind": "function"
		},
		{
			"trigger": "cubrid_error()",
			"contents": "cubrid_error()",
			"kind": "function"
		},
		{
			"trigger": "cubrid_error_code()",
			"contents": "cubrid_error_code()",
			"kind": "function"
		},
		{
			"trigger": "cubrid_error_code_facility()",
			"contents": "cubrid_error_code_facility()",
			"kind": "function"
		},
		{
			"trigger": "cubrid_error_msg()",
			"contents": "cubrid_error_msg()",
			"kind": "function"
		},
		{
			"trigger": "cubrid_execute()",
			"contents": "cubrid_execute(${1:conn_identifier}, ${2:SQL})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_fetch()",
			"contents": "cubrid_fetch(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_fetch_array()",
			"contents": "cubrid_fetch_array(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_fetch_assoc()",
			"contents": "cubrid_fetch_assoc(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_fetch_field()",
			"contents": "cubrid_fetch_field(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_fetch_lengths()",
			"contents": "cubrid_fetch_lengths(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_fetch_object()",
			"contents": "cubrid_fetch_object(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_fetch_row()",
			"contents": "cubrid_fetch_row(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_field_flags()",
			"contents": "cubrid_field_flags(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_field_len()",
			"contents": "cubrid_field_len(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_field_name()",
			"contents": "cubrid_field_name(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_field_seek()",
			"contents": "cubrid_field_seek(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_field_table()",
			"contents": "cubrid_field_table(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_field_type()",
			"contents": "cubrid_field_type(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_free_result()",
			"contents": "cubrid_free_result(${1:req_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_get()",
			"contents": "cubrid_get(${1:conn_identifier}, ${2:oid})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_get_charset()",
			"contents": "cubrid_get_charset(${1:conn_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_get_class_name()",
			"contents": "cubrid_get_class_name(${1:conn_identifier}, ${2:oid})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_get_client_info()",
			"contents": "cubrid_get_client_info()",
			"kind": "function"
		},
		{
			"trigger": "cubrid_get_db_parameter()",
			"contents": "cubrid_get_db_parameter(${1:conn_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_get_server_info()",
			"contents": "cubrid_get_server_info(${1:conn_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_insert_id()",
			"contents": "cubrid_insert_id(${1:class_name})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_is_instance()",
			"contents": "cubrid_is_instance(${1:conn_identifier}, ${2:oid})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_list_dbs()",
			"contents": "cubrid_list_dbs(${1:conn_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_load_from_glo()",
			"contents": "cubrid_load_from_glo(${1:conn_identifier}, ${2:oid}, ${3:file_name})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_lob_close()",
			"contents": "cubrid_lob_close(${1:lob_identifier_array})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_lob_export()",
			"contents": "cubrid_lob_export(${1:conn_identifier}, ${2:lob_identifier}, ${3:path_name})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_lob_get()",
			"contents": "cubrid_lob_get(${1:conn_identifier}, ${2:SQL})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_lob_send()",
			"contents": "cubrid_lob_send(${1:conn_identifier}, ${2:lob_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_lob_size()",
			"contents": "cubrid_lob_size(${1:lob_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_lock_read()",
			"contents": "cubrid_lock_read(${1:conn_identifier}, ${2:oid})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_lock_write()",
			"contents": "cubrid_lock_write(${1:conn_identifier}, ${2:oid})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_move_cursor()",
			"contents": "cubrid_move_cursor(${1:req_identifier}, ${2:offset})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_new_glo()",
			"contents": "cubrid_new_glo(${1:conn_identifier}, ${2:class_name}, ${3:file_name})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_num_cols()",
			"contents": "cubrid_num_cols(${1:req_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_num_fields()",
			"contents": "cubrid_num_fields(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_num_rows()",
			"contents": "cubrid_num_rows(${1:req_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_ping()",
			"contents": "cubrid_ping()",
			"kind": "function"
		},
		{
			"trigger": "cubrid_prepare()",
			"contents": "cubrid_prepare(${1:conn_identifier}, ${2:prepare_stmt})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_put()",
			"contents": "cubrid_put(${1:conn_identifier}, ${2:oid})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_query()",
			"contents": "cubrid_query(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_real_escape_string()",
			"contents": "cubrid_real_escape_string(${1:unescaped_string})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_result()",
			"contents": "cubrid_result(${1:result}, ${2:row})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_rollback()",
			"contents": "cubrid_rollback(${1:conn_identifier})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_save_to_glo()",
			"contents": "cubrid_save_to_glo(${1:conn_identifier}, ${2:oid}, ${3:file_name})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_schema()",
			"contents": "cubrid_schema(${1:conn_identifier}, ${2:schema_type})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_send_glo()",
			"contents": "cubrid_send_glo(${1:conn_identifier}, ${2:oid})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_seq_drop()",
			"contents": "cubrid_seq_drop(${1:conn_identifier}, ${2:oid}, ${3:attr_name}, ${4:index})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_seq_insert()",
			"contents": "cubrid_seq_insert(${1:conn_identifier}, ${2:oid}, ${3:attr_name}, ${4:index}, ${5:seq_element})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_seq_put()",
			"contents": "cubrid_seq_put(${1:conn_identifier}, ${2:oid}, ${3:attr_name}, ${4:index}, ${5:seq_element})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_set_add()",
			"contents": "cubrid_set_add(${1:conn_identifier}, ${2:oid}, ${3:attr_name}, ${4:set_element})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_set_drop()",
			"contents": "cubrid_set_drop(${1:conn_identifier}, ${2:oid}, ${3:attr_name}, ${4:set_element})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_unbuffered_query()",
			"contents": "cubrid_unbuffered_query(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "cubrid_version()",
			"contents": "cubrid_version()",
			"kind": "function"
		},
		{
			"trigger": "curl_close()",
			"contents": "curl_close(${1:ch})",
			"kind": "function"
		},
		{
			"trigger": "curl_copy_handle()",
			"contents": "curl_copy_handle(${1:ch})",
			"kind": "function"
		},
		{
			"trigger": "curl_errno()",
			"contents": "curl_errno(${1:ch})",
			"kind": "function"
		},
		{
			"trigger": "curl_error()",
			"contents": "curl_error(${1:ch})",
			"kind": "function"
		},
		{
			"trigger": "curl_exec()",
			"contents": "curl_exec(${1:ch})",
			"kind": "function"
		},
		{
			"trigger": "curl_getinfo()",
			"contents": "curl_getinfo(${1:ch})",
			"kind": "function"
		},
		{
			"trigger": "curl_init()",
			"contents": "curl_init()",
			"kind": "function"
		},
		{
			"trigger": "curl_multi_add_handle()",
			"contents": "curl_multi_add_handle(${1:mh}, ${2:ch})",
			"kind": "function"
		},
		{
			"trigger": "curl_multi_close()",
			"contents": "curl_multi_close(${1:mh})",
			"kind": "function"
		},
		{
			"trigger": "curl_multi_exec()",
			"contents": "curl_multi_exec(${1:mh}, ${2:still_running})",
			"kind": "function"
		},
		{
			"trigger": "curl_multi_getcontent()",
			"contents": "curl_multi_getcontent(${1:ch})",
			"kind": "function"
		},
		{
			"trigger": "curl_multi_info_read()",
			"contents": "curl_multi_info_read(${1:mh})",
			"kind": "function"
		},
		{
			"trigger": "curl_multi_init()",
			"contents": "curl_multi_init()",
			"kind": "function"
		},
		{
			"trigger": "curl_multi_remove_handle()",
			"contents": "curl_multi_remove_handle(${1:mh}, ${2:ch})",
			"kind": "function"
		},
		{
			"trigger": "curl_multi_select()",
			"contents": "curl_multi_select(${1:mh})",
			"kind": "function"
		},
		{
			"trigger": "curl_setopt()",
			"contents": "curl_setopt(${1:ch}, ${2:option}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "curl_setopt_array()",
			"contents": "curl_setopt_array(${1:ch}, ${2:options})",
			"kind": "function"
		},
		{
			"trigger": "curl_version()",
			"contents": "curl_version()",
			"kind": "function"
		},
		{
			"trigger": "current()",
			"contents": "current(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "cyrus_authenticate()",
			"contents": "cyrus_authenticate(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "cyrus_bind()",
			"contents": "cyrus_bind(${1:connection}, ${2:callbacks})",
			"kind": "function"
		},
		{
			"trigger": "cyrus_close()",
			"contents": "cyrus_close(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "cyrus_connect()",
			"contents": "cyrus_connect()",
			"kind": "function"
		},
		{
			"trigger": "cyrus_query()",
			"contents": "cyrus_query(${1:connection}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "cyrus_unbind()",
			"contents": "cyrus_unbind(${1:connection}, ${2:trigger_name})",
			"kind": "function"
		},
		{
			"trigger": "date()",
			"contents": "date(${1:format})",
			"kind": "function"
		},
		{
			"trigger": "date_add()",
			"contents": "date_add()",
			"kind": "function"
		},
		{
			"trigger": "date_create()",
			"contents": "date_create()",
			"kind": "function"
		},
		{
			"trigger": "date_create_from_format()",
			"contents": "date_create_from_format()",
			"kind": "function"
		},
		{
			"trigger": "date_date_set()",
			"contents": "date_date_set()",
			"kind": "function"
		},
		{
			"trigger": "date_default_timezone_get()",
			"contents": "date_default_timezone_get()",
			"kind": "function"
		},
		{
			"trigger": "date_default_timezone_set()",
			"contents": "date_default_timezone_set(${1:timezone_identifier})",
			"kind": "function"
		},
		{
			"trigger": "date_diff()",
			"contents": "date_diff()",
			"kind": "function"
		},
		{
			"trigger": "date_format()",
			"contents": "date_format()",
			"kind": "function"
		},
		{
			"trigger": "date_get_last_errors()",
			"contents": "date_get_last_errors()",
			"kind": "function"
		},
		{
			"trigger": "date_interval_create_from_date_string()",
			"contents": "date_interval_create_from_date_string()",
			"kind": "function"
		},
		{
			"trigger": "date_interval_format()",
			"contents": "date_interval_format()",
			"kind": "function"
		},
		{
			"trigger": "date_isodate_set()",
			"contents": "date_isodate_set()",
			"kind": "function"
		},
		{
			"trigger": "date_modify()",
			"contents": "date_modify()",
			"kind": "function"
		},
		{
			"trigger": "date_offset_get()",
			"contents": "date_offset_get()",
			"kind": "function"
		},
		{
			"trigger": "date_parse()",
			"contents": "date_parse(${1:date})",
			"kind": "function"
		},
		{
			"trigger": "date_parse_from_format()",
			"contents": "date_parse_from_format(${1:format}, ${2:date})",
			"kind": "function"
		},
		{
			"trigger": "date_sub()",
			"contents": "date_sub()",
			"kind": "function"
		},
		{
			"trigger": "date_sun_info()",
			"contents": "date_sun_info(${1:time}, ${2:latitude}, ${3:longitude})",
			"kind": "function"
		},
		{
			"trigger": "date_sunrise()",
			"contents": "date_sunrise(${1:timestamp})",
			"kind": "function"
		},
		{
			"trigger": "date_sunset()",
			"contents": "date_sunset(${1:timestamp})",
			"kind": "function"
		},
		{
			"trigger": "date_time_set()",
			"contents": "date_time_set()",
			"kind": "function"
		},
		{
			"trigger": "date_timestamp_get()",
			"contents": "date_timestamp_get()",
			"kind": "function"
		},
		{
			"trigger": "date_timestamp_set()",
			"contents": "date_timestamp_set()",
			"kind": "function"
		},
		{
			"trigger": "date_timezone_get()",
			"contents": "date_timezone_get()",
			"kind": "function"
		},
		{
			"trigger": "date_timezone_set()",
			"contents": "date_timezone_set()",
			"kind": "function"
		},
		{
			"trigger": "db2_autocommit()",
			"contents": "db2_autocommit(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "db2_bind_param()",
			"contents": "db2_bind_param(${1:stmt}, ${2:parameter-number}, ${3:variable-name})",
			"kind": "function"
		},
		{
			"trigger": "db2_client_info()",
			"contents": "db2_client_info(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "db2_close()",
			"contents": "db2_close(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "db2_column_privileges()",
			"contents": "db2_column_privileges(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "db2_columns()",
			"contents": "db2_columns(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "db2_commit()",
			"contents": "db2_commit(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "db2_conn_error()",
			"contents": "db2_conn_error()",
			"kind": "function"
		},
		{
			"trigger": "db2_conn_errormsg()",
			"contents": "db2_conn_errormsg()",
			"kind": "function"
		},
		{
			"trigger": "db2_connect()",
			"contents": "db2_connect(${1:database}, ${2:username}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "db2_cursor_type()",
			"contents": "db2_cursor_type(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_escape_string()",
			"contents": "db2_escape_string(${1:string_literal})",
			"kind": "function"
		},
		{
			"trigger": "db2_exec()",
			"contents": "db2_exec(${1:connection}, ${2:statement})",
			"kind": "function"
		},
		{
			"trigger": "db2_execute()",
			"contents": "db2_execute(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_fetch_array()",
			"contents": "db2_fetch_array(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_fetch_assoc()",
			"contents": "db2_fetch_assoc(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_fetch_both()",
			"contents": "db2_fetch_both(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_fetch_object()",
			"contents": "db2_fetch_object(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_fetch_row()",
			"contents": "db2_fetch_row(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_field_display_size()",
			"contents": "db2_field_display_size(${1:stmt}, ${2:column})",
			"kind": "function"
		},
		{
			"trigger": "db2_field_name()",
			"contents": "db2_field_name(${1:stmt}, ${2:column})",
			"kind": "function"
		},
		{
			"trigger": "db2_field_num()",
			"contents": "db2_field_num(${1:stmt}, ${2:column})",
			"kind": "function"
		},
		{
			"trigger": "db2_field_precision()",
			"contents": "db2_field_precision(${1:stmt}, ${2:column})",
			"kind": "function"
		},
		{
			"trigger": "db2_field_scale()",
			"contents": "db2_field_scale(${1:stmt}, ${2:column})",
			"kind": "function"
		},
		{
			"trigger": "db2_field_type()",
			"contents": "db2_field_type(${1:stmt}, ${2:column})",
			"kind": "function"
		},
		{
			"trigger": "db2_field_width()",
			"contents": "db2_field_width(${1:stmt}, ${2:column})",
			"kind": "function"
		},
		{
			"trigger": "db2_foreign_keys()",
			"contents": "db2_foreign_keys(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:table-name})",
			"kind": "function"
		},
		{
			"trigger": "db2_free_result()",
			"contents": "db2_free_result(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_free_stmt()",
			"contents": "db2_free_stmt(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_get_option()",
			"contents": "db2_get_option(${1:resource}, ${2:option})",
			"kind": "function"
		},
		{
			"trigger": "db2_last_insert_id()",
			"contents": "db2_last_insert_id(${1:resource})",
			"kind": "function"
		},
		{
			"trigger": "db2_lob_read()",
			"contents": "db2_lob_read(${1:stmt}, ${2:colnum}, ${3:length})",
			"kind": "function"
		},
		{
			"trigger": "db2_next_result()",
			"contents": "db2_next_result(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_num_fields()",
			"contents": "db2_num_fields(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_num_rows()",
			"contents": "db2_num_rows(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "db2_pclose()",
			"contents": "db2_pclose(${1:resource})",
			"kind": "function"
		},
		{
			"trigger": "db2_pconnect()",
			"contents": "db2_pconnect(${1:database}, ${2:username}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "db2_prepare()",
			"contents": "db2_prepare(${1:connection}, ${2:statement})",
			"kind": "function"
		},
		{
			"trigger": "db2_primary_keys()",
			"contents": "db2_primary_keys(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:table-name})",
			"kind": "function"
		},
		{
			"trigger": "db2_procedure_columns()",
			"contents": "db2_procedure_columns(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:procedure}, ${5:parameter})",
			"kind": "function"
		},
		{
			"trigger": "db2_procedures()",
			"contents": "db2_procedures(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:procedure})",
			"kind": "function"
		},
		{
			"trigger": "db2_result()",
			"contents": "db2_result(${1:stmt}, ${2:column})",
			"kind": "function"
		},
		{
			"trigger": "db2_rollback()",
			"contents": "db2_rollback(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "db2_server_info()",
			"contents": "db2_server_info(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "db2_set_option()",
			"contents": "db2_set_option(${1:resource}, ${2:options}, ${3:type})",
			"kind": "function"
		},
		{
			"trigger": "db2_special_columns()",
			"contents": "db2_special_columns(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:table_name}, ${5:scope})",
			"kind": "function"
		},
		{
			"trigger": "db2_statistics()",
			"contents": "db2_statistics(${1:connection}, ${2:qualifier}, ${3:schema}, ${4:table-name}, ${5:unique})",
			"kind": "function"
		},
		{
			"trigger": "db2_stmt_error()",
			"contents": "db2_stmt_error()",
			"kind": "function"
		},
		{
			"trigger": "db2_stmt_errormsg()",
			"contents": "db2_stmt_errormsg()",
			"kind": "function"
		},
		{
			"trigger": "db2_table_privileges()",
			"contents": "db2_table_privileges(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "db2_tables()",
			"contents": "db2_tables(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "dba_close()",
			"contents": "dba_close(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "dba_delete()",
			"contents": "dba_delete(${1:key}, ${2:handle})",
			"kind": "function"
		},
		{
			"trigger": "dba_exists()",
			"contents": "dba_exists(${1:key}, ${2:handle})",
			"kind": "function"
		},
		{
			"trigger": "dba_fetch()",
			"contents": "dba_fetch(${1:key}, ${2:handle})",
			"kind": "function"
		},
		{
			"trigger": "dba_firstkey()",
			"contents": "dba_firstkey(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "dba_handlers()",
			"contents": "dba_handlers()",
			"kind": "function"
		},
		{
			"trigger": "dba_insert()",
			"contents": "dba_insert(${1:key}, ${2:value}, ${3:handle})",
			"kind": "function"
		},
		{
			"trigger": "dba_key_split()",
			"contents": "dba_key_split(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "dba_list()",
			"contents": "dba_list()",
			"kind": "function"
		},
		{
			"trigger": "dba_nextkey()",
			"contents": "dba_nextkey(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "dba_open()",
			"contents": "dba_open(${1:path}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "dba_optimize()",
			"contents": "dba_optimize(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "dba_popen()",
			"contents": "dba_popen(${1:path}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "dba_replace()",
			"contents": "dba_replace(${1:key}, ${2:value}, ${3:handle})",
			"kind": "function"
		},
		{
			"trigger": "dba_sync()",
			"contents": "dba_sync(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "dbase_add_record()",
			"contents": "dbase_add_record(${1:dbase_identifier}, ${2:record})",
			"kind": "function"
		},
		{
			"trigger": "dbase_close()",
			"contents": "dbase_close(${1:dbase_identifier})",
			"kind": "function"
		},
		{
			"trigger": "dbase_create()",
			"contents": "dbase_create(${1:filename}, ${2:fields})",
			"kind": "function"
		},
		{
			"trigger": "dbase_delete_record()",
			"contents": "dbase_delete_record(${1:dbase_identifier}, ${2:record_number})",
			"kind": "function"
		},
		{
			"trigger": "dbase_get_header_info()",
			"contents": "dbase_get_header_info(${1:dbase_identifier})",
			"kind": "function"
		},
		{
			"trigger": "dbase_get_record()",
			"contents": "dbase_get_record(${1:dbase_identifier}, ${2:record_number})",
			"kind": "function"
		},
		{
			"trigger": "dbase_get_record_with_names()",
			"contents": "dbase_get_record_with_names(${1:dbase_identifier}, ${2:record_number})",
			"kind": "function"
		},
		{
			"trigger": "dbase_numfields()",
			"contents": "dbase_numfields(${1:dbase_identifier})",
			"kind": "function"
		},
		{
			"trigger": "dbase_numrecords()",
			"contents": "dbase_numrecords(${1:dbase_identifier})",
			"kind": "function"
		},
		{
			"trigger": "dbase_open()",
			"contents": "dbase_open(${1:filename}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "dbase_pack()",
			"contents": "dbase_pack(${1:dbase_identifier})",
			"kind": "function"
		},
		{
			"trigger": "dbase_replace_record()",
			"contents": "dbase_replace_record(${1:dbase_identifier}, ${2:record}, ${3:record_number})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_add()",
			"contents": "dbplus_add(${1:relation}, ${2:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_aql()",
			"contents": "dbplus_aql(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_chdir()",
			"contents": "dbplus_chdir()",
			"kind": "function"
		},
		{
			"trigger": "dbplus_close()",
			"contents": "dbplus_close(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_curr()",
			"contents": "dbplus_curr(${1:relation}, ${2:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_errcode()",
			"contents": "dbplus_errcode()",
			"kind": "function"
		},
		{
			"trigger": "dbplus_errno()",
			"contents": "dbplus_errno()",
			"kind": "function"
		},
		{
			"trigger": "dbplus_find()",
			"contents": "dbplus_find(${1:relation}, ${2:constraints}, ${3:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_first()",
			"contents": "dbplus_first(${1:relation}, ${2:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_flush()",
			"contents": "dbplus_flush(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_freealllocks()",
			"contents": "dbplus_freealllocks()",
			"kind": "function"
		},
		{
			"trigger": "dbplus_freelock()",
			"contents": "dbplus_freelock(${1:relation}, ${2:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_freerlocks()",
			"contents": "dbplus_freerlocks(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_getlock()",
			"contents": "dbplus_getlock(${1:relation}, ${2:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_getunique()",
			"contents": "dbplus_getunique(${1:relation}, ${2:uniqueid})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_info()",
			"contents": "dbplus_info(${1:relation}, ${2:key}, ${3:result})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_last()",
			"contents": "dbplus_last(${1:relation}, ${2:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_lockrel()",
			"contents": "dbplus_lockrel(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_next()",
			"contents": "dbplus_next(${1:relation}, ${2:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_open()",
			"contents": "dbplus_open(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_prev()",
			"contents": "dbplus_prev(${1:relation}, ${2:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_rchperm()",
			"contents": "dbplus_rchperm(${1:relation}, ${2:mask}, ${3:user}, ${4:group})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_rcreate()",
			"contents": "dbplus_rcreate(${1:name}, ${2:domlist})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_rcrtexact()",
			"contents": "dbplus_rcrtexact(${1:name}, ${2:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_rcrtlike()",
			"contents": "dbplus_rcrtlike(${1:name}, ${2:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_resolve()",
			"contents": "dbplus_resolve(${1:relation_name})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_restorepos()",
			"contents": "dbplus_restorepos(${1:relation}, ${2:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_rkeys()",
			"contents": "dbplus_rkeys(${1:relation}, ${2:domlist})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_ropen()",
			"contents": "dbplus_ropen(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_rquery()",
			"contents": "dbplus_rquery(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_rrename()",
			"contents": "dbplus_rrename(${1:relation}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_rsecindex()",
			"contents": "dbplus_rsecindex(${1:relation}, ${2:domlist}, ${3:type})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_runlink()",
			"contents": "dbplus_runlink(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_rzap()",
			"contents": "dbplus_rzap(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_savepos()",
			"contents": "dbplus_savepos(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_setindex()",
			"contents": "dbplus_setindex(${1:relation}, ${2:idx_name})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_setindexbynumber()",
			"contents": "dbplus_setindexbynumber(${1:relation}, ${2:idx_number})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_sql()",
			"contents": "dbplus_sql(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_tcl()",
			"contents": "dbplus_tcl(${1:sid}, ${2:script})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_tremove()",
			"contents": "dbplus_tremove(${1:relation}, ${2:tuple})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_undo()",
			"contents": "dbplus_undo(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_undoprepare()",
			"contents": "dbplus_undoprepare(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_unlockrel()",
			"contents": "dbplus_unlockrel(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_unselect()",
			"contents": "dbplus_unselect(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_update()",
			"contents": "dbplus_update(${1:relation}, ${2:old}, ${3:new})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_xlockrel()",
			"contents": "dbplus_xlockrel(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbplus_xunlockrel()",
			"contents": "dbplus_xunlockrel(${1:relation})",
			"kind": "function"
		},
		{
			"trigger": "dbx_close()",
			"contents": "dbx_close(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "dbx_compare()",
			"contents": "dbx_compare(${1:row_a}, ${2:row_b}, ${3:column_key})",
			"kind": "function"
		},
		{
			"trigger": "dbx_connect()",
			"contents": "dbx_connect(${1:module}, ${2:host}, ${3:database}, ${4:username}, ${5:password})",
			"kind": "function"
		},
		{
			"trigger": "dbx_error()",
			"contents": "dbx_error(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "dbx_escape_string()",
			"contents": "dbx_escape_string(${1:link_identifier}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "dbx_fetch_row()",
			"contents": "dbx_fetch_row(${1:result_identifier})",
			"kind": "function"
		},
		{
			"trigger": "dbx_query()",
			"contents": "dbx_query(${1:link_identifier}, ${2:sql_statement})",
			"kind": "function"
		},
		{
			"trigger": "dbx_sort()",
			"contents": "dbx_sort(${1:result}, ${2:user_compare_function})",
			"kind": "function"
		},
		{
			"trigger": "dcgettext()",
			"contents": "dcgettext(${1:domain}, ${2:message}, ${3:category})",
			"kind": "function"
		},
		{
			"trigger": "dcngettext()",
			"contents": "dcngettext(${1:domain}, ${2:msgid1}, ${3:msgid2}, ${4:n}, ${5:category})",
			"kind": "function"
		},
		{
			"trigger": "deaggregate()",
			"contents": "deaggregate(${1:object})",
			"kind": "function"
		},
		{
			"trigger": "debug_backtrace()",
			"contents": "debug_backtrace()",
			"kind": "function"
		},
		{
			"trigger": "debug_print_backtrace()",
			"contents": "debug_print_backtrace()",
			"kind": "function"
		},
		{
			"trigger": "debug_zval_dump()",
			"contents": "debug_zval_dump(${1:variable})",
			"kind": "function"
		},
		{
			"trigger": "decbin()",
			"contents": "decbin(${1:number})",
			"kind": "function"
		},
		{
			"trigger": "dechex()",
			"contents": "dechex(${1:number})",
			"kind": "function"
		},
		{
			"trigger": "decoct()",
			"contents": "decoct(${1:number})",
			"kind": "function"
		},
		{
			"trigger": "define()",
			"contents": "define(${1:name}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "define_syslog_variables()",
			"contents": "define_syslog_variables()",
			"kind": "function"
		},
		{
			"trigger": "defined()",
			"contents": "defined(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "deg2rad()",
			"contents": "deg2rad(${1:number})",
			"kind": "function"
		},
		{
			"trigger": "delete()",
			"contents": "delete()",
			"kind": "function"
		},
		{
			"trigger": "dgettext()",
			"contents": "dgettext(${1:domain}, ${2:message})",
			"kind": "function"
		},
		{
			"trigger": "die()",
			"contents": "die()",
			"kind": "function"
		},
		{
			"trigger": "dio_close()",
			"contents": "dio_close(${1:fd})",
			"kind": "function"
		},
		{
			"trigger": "dio_fcntl()",
			"contents": "dio_fcntl(${1:fd}, ${2:cmd})",
			"kind": "function"
		},
		{
			"trigger": "dio_open()",
			"contents": "dio_open(${1:filename}, ${2:flags})",
			"kind": "function"
		},
		{
			"trigger": "dio_read()",
			"contents": "dio_read(${1:fd})",
			"kind": "function"
		},
		{
			"trigger": "dio_seek()",
			"contents": "dio_seek(${1:fd}, ${2:pos})",
			"kind": "function"
		},
		{
			"trigger": "dio_stat()",
			"contents": "dio_stat(${1:fd})",
			"kind": "function"
		},
		{
			"trigger": "dio_tcsetattr()",
			"contents": "dio_tcsetattr(${1:fd}, ${2:options})",
			"kind": "function"
		},
		{
			"trigger": "dio_truncate()",
			"contents": "dio_truncate(${1:fd}, ${2:offset})",
			"kind": "function"
		},
		{
			"trigger": "dio_write()",
			"contents": "dio_write(${1:fd}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "dirname()",
			"contents": "dirname(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "disk_free_space()",
			"contents": "disk_free_space(${1:directory})",
			"kind": "function"
		},
		{
			"trigger": "disk_total_space()",
			"contents": "disk_total_space(${1:directory})",
			"kind": "function"
		},
		{
			"trigger": "diskfreespace()",
			"contents": "diskfreespace()",
			"kind": "function"
		},
		{
			"trigger": "dl()",
			"contents": "dl(${1:library})",
			"kind": "function"
		},
		{
			"trigger": "dngettext()",
			"contents": "dngettext(${1:domain}, ${2:msgid1}, ${3:msgid2}, ${4:n})",
			"kind": "function"
		},
		{
			"trigger": "dns_check_record()",
			"contents": "dns_check_record()",
			"kind": "function"
		},
		{
			"trigger": "dns_get_mx()",
			"contents": "dns_get_mx()",
			"kind": "function"
		},
		{
			"trigger": "dns_get_record()",
			"contents": "dns_get_record(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "dom_import_simplexml()",
			"contents": "dom_import_simplexml(${1:node})",
			"kind": "function"
		},
		{
			"trigger": "domxml_new_doc()",
			"contents": "domxml_new_doc(${1:version})",
			"kind": "function"
		},
		{
			"trigger": "domxml_open_file()",
			"contents": "domxml_open_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "domxml_open_mem()",
			"contents": "domxml_open_mem(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "domxml_version()",
			"contents": "domxml_version()",
			"kind": "function"
		},
		{
			"trigger": "domxml_xmltree()",
			"contents": "domxml_xmltree(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "domxml_xslt_stylesheet()",
			"contents": "domxml_xslt_stylesheet(${1:xsl_buf})",
			"kind": "function"
		},
		{
			"trigger": "domxml_xslt_stylesheet_doc()",
			"contents": "domxml_xslt_stylesheet_doc(${1:xsl_doc})",
			"kind": "function"
		},
		{
			"trigger": "domxml_xslt_stylesheet_file()",
			"contents": "domxml_xslt_stylesheet_file(${1:xsl_file})",
			"kind": "function"
		},
		{
			"trigger": "domxml_xslt_version()",
			"contents": "domxml_xslt_version()",
			"kind": "function"
		},
		{
			"trigger": "dotnet_load()",
			"contents": "dotnet_load(${1:assembly_name})",
			"kind": "function"
		},
		{
			"trigger": "doubleval()",
			"contents": "doubleval()",
			"kind": "function"
		},
		{
			"trigger": "each()",
			"contents": "each(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "easter_date()",
			"contents": "easter_date()",
			"kind": "function"
		},
		{
			"trigger": "easter_days()",
			"contents": "easter_days()",
			"kind": "function"
		},
		{
			"trigger": "echo()",
			"contents": "echo(${1:arg1})",
			"kind": "function"
		},
		{
			"trigger": "empty()",
			"contents": "empty(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "enchant_broker_describe()",
			"contents": "enchant_broker_describe(${1:broker})",
			"kind": "function"
		},
		{
			"trigger": "enchant_broker_dict_exists()",
			"contents": "enchant_broker_dict_exists(${1:broker}, ${2:tag})",
			"kind": "function"
		},
		{
			"trigger": "enchant_broker_free()",
			"contents": "enchant_broker_free(${1:broker})",
			"kind": "function"
		},
		{
			"trigger": "enchant_broker_free_dict()",
			"contents": "enchant_broker_free_dict(${1:dict})",
			"kind": "function"
		},
		{
			"trigger": "enchant_broker_get_error()",
			"contents": "enchant_broker_get_error(${1:broker})",
			"kind": "function"
		},
		{
			"trigger": "enchant_broker_init()",
			"contents": "enchant_broker_init()",
			"kind": "function"
		},
		{
			"trigger": "enchant_broker_list_dicts()",
			"contents": "enchant_broker_list_dicts(${1:broker})",
			"kind": "function"
		},
		{
			"trigger": "enchant_broker_request_dict()",
			"contents": "enchant_broker_request_dict(${1:broker}, ${2:tag})",
			"kind": "function"
		},
		{
			"trigger": "enchant_broker_request_pwl_dict()",
			"contents": "enchant_broker_request_pwl_dict(${1:broker}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "enchant_broker_set_ordering()",
			"contents": "enchant_broker_set_ordering(${1:broker}, ${2:tag}, ${3:ordering})",
			"kind": "function"
		},
		{
			"trigger": "enchant_dict_add_to_personal()",
			"contents": "enchant_dict_add_to_personal(${1:dict}, ${2:word})",
			"kind": "function"
		},
		{
			"trigger": "enchant_dict_add_to_session()",
			"contents": "enchant_dict_add_to_session(${1:dict}, ${2:word})",
			"kind": "function"
		},
		{
			"trigger": "enchant_dict_check()",
			"contents": "enchant_dict_check(${1:dict}, ${2:word})",
			"kind": "function"
		},
		{
			"trigger": "enchant_dict_describe()",
			"contents": "enchant_dict_describe(${1:dict})",
			"kind": "function"
		},
		{
			"trigger": "enchant_dict_get_error()",
			"contents": "enchant_dict_get_error(${1:dict})",
			"kind": "function"
		},
		{
			"trigger": "enchant_dict_is_in_session()",
			"contents": "enchant_dict_is_in_session(${1:dict}, ${2:word})",
			"kind": "function"
		},
		{
			"trigger": "enchant_dict_quick_check()",
			"contents": "enchant_dict_quick_check(${1:dict}, ${2:word})",
			"kind": "function"
		},
		{
			"trigger": "enchant_dict_store_replacement()",
			"contents": "enchant_dict_store_replacement(${1:dict}, ${2:mis}, ${3:cor})",
			"kind": "function"
		},
		{
			"trigger": "enchant_dict_suggest()",
			"contents": "enchant_dict_suggest(${1:dict}, ${2:word})",
			"kind": "function"
		},
		{
			"trigger": "end()",
			"contents": "end(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "ereg()",
			"contents": "ereg(${1:pattern}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "ereg_replace()",
			"contents": "ereg_replace(${1:pattern}, ${2:replacement}, ${3:string})",
			"kind": "function"
		},
		{
			"trigger": "eregi()",
			"contents": "eregi(${1:pattern}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "eregi_replace()",
			"contents": "eregi_replace(${1:pattern}, ${2:replacement}, ${3:string})",
			"kind": "function"
		},
		{
			"trigger": "error_get_last()",
			"contents": "error_get_last()",
			"kind": "function"
		},
		{
			"trigger": "error_log()",
			"contents": "error_log(${1:message})",
			"kind": "function"
		},
		{
			"trigger": "error_reporting()",
			"contents": "error_reporting()",
			"kind": "function"
		},
		{
			"trigger": "escapeshellarg()",
			"contents": "escapeshellarg(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "escapeshellcmd()",
			"contents": "escapeshellcmd(${1:command})",
			"kind": "function"
		},
		{
			"trigger": "eval()",
			"contents": "eval(${1:code_str})",
			"kind": "function"
		},
		{
			"trigger": "event_add()",
			"contents": "event_add(${1:event})",
			"kind": "function"
		},
		{
			"trigger": "event_base_free()",
			"contents": "event_base_free(${1:event_base})",
			"kind": "function"
		},
		{
			"trigger": "event_base_loop()",
			"contents": "event_base_loop(${1:event_base})",
			"kind": "function"
		},
		{
			"trigger": "event_base_loopbreak()",
			"contents": "event_base_loopbreak(${1:event_base})",
			"kind": "function"
		},
		{
			"trigger": "event_base_loopexit()",
			"contents": "event_base_loopexit(${1:event_base})",
			"kind": "function"
		},
		{
			"trigger": "event_base_new()",
			"contents": "event_base_new()",
			"kind": "function"
		},
		{
			"trigger": "event_base_priority_init()",
			"contents": "event_base_priority_init(${1:event_base}, ${2:npriorities})",
			"kind": "function"
		},
		{
			"trigger": "event_base_set()",
			"contents": "event_base_set(${1:event}, ${2:event_base})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_base_set()",
			"contents": "event_buffer_base_set(${1:bevent}, ${2:event_base})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_disable()",
			"contents": "event_buffer_disable(${1:bevent}, ${2:events})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_enable()",
			"contents": "event_buffer_enable(${1:bevent}, ${2:events})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_fd_set()",
			"contents": "event_buffer_fd_set(${1:bevent}, ${2:fd})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_free()",
			"contents": "event_buffer_free(${1:bevent})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_new()",
			"contents": "event_buffer_new(${1:stream}, ${2:readcb}, ${3:writecb}, ${4:errorcb})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_priority_set()",
			"contents": "event_buffer_priority_set(${1:bevent}, ${2:priority})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_read()",
			"contents": "event_buffer_read(${1:bevent}, ${2:data_size})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_set_callback()",
			"contents": "event_buffer_set_callback(${1:event}, ${2:readcb}, ${3:writecb}, ${4:errorcb})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_timeout_set()",
			"contents": "event_buffer_timeout_set(${1:bevent}, ${2:read_timeout}, ${3:write_timeout})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_watermark_set()",
			"contents": "event_buffer_watermark_set(${1:bevent}, ${2:events}, ${3:lowmark}, ${4:highmark})",
			"kind": "function"
		},
		{
			"trigger": "event_buffer_write()",
			"contents": "event_buffer_write(${1:bevent}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "event_del()",
			"contents": "event_del(${1:event})",
			"kind": "function"
		},
		{
			"trigger": "event_free()",
			"contents": "event_free(${1:event})",
			"kind": "function"
		},
		{
			"trigger": "event_new()",
			"contents": "event_new()",
			"kind": "function"
		},
		{
			"trigger": "event_set()",
			"contents": "event_set(${1:event}, ${2:fd}, ${3:events}, ${4:callback})",
			"kind": "function"
		},
		{
			"trigger": "exec()",
			"contents": "exec(${1:command})",
			"kind": "function"
		},
		{
			"trigger": "exif_imagetype()",
			"contents": "exif_imagetype(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "exif_read_data()",
			"contents": "exif_read_data(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "exif_tagname()",
			"contents": "exif_tagname(${1:index})",
			"kind": "function"
		},
		{
			"trigger": "exif_thumbnail()",
			"contents": "exif_thumbnail(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "exit()",
			"contents": "exit()",
			"kind": "function"
		},
		{
			"trigger": "exp()",
			"contents": "exp(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "expect_expectl()",
			"contents": "expect_expectl(${1:expect}, ${2:cases})",
			"kind": "function"
		},
		{
			"trigger": "expect_popen()",
			"contents": "expect_popen(${1:command})",
			"kind": "function"
		},
		{
			"trigger": "explode()",
			"contents": "explode(${1:delimiter}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "expm1()",
			"contents": "expm1(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "extension_loaded()",
			"contents": "extension_loaded(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "extract()",
			"contents": "extract(${1:var_array})",
			"kind": "function"
		},
		{
			"trigger": "ezmlm_hash()",
			"contents": "ezmlm_hash(${1:addr})",
			"kind": "function"
		},
		{
			"trigger": "fam_cancel_monitor()",
			"contents": "fam_cancel_monitor(${1:fam}, ${2:fam_monitor})",
			"kind": "function"
		},
		{
			"trigger": "fam_close()",
			"contents": "fam_close(${1:fam})",
			"kind": "function"
		},
		{
			"trigger": "fam_monitor_collection()",
			"contents": "fam_monitor_collection(${1:fam}, ${2:dirname}, ${3:depth}, ${4:mask})",
			"kind": "function"
		},
		{
			"trigger": "fam_monitor_directory()",
			"contents": "fam_monitor_directory(${1:fam}, ${2:dirname})",
			"kind": "function"
		},
		{
			"trigger": "fam_monitor_file()",
			"contents": "fam_monitor_file(${1:fam}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "fam_next_event()",
			"contents": "fam_next_event(${1:fam})",
			"kind": "function"
		},
		{
			"trigger": "fam_open()",
			"contents": "fam_open()",
			"kind": "function"
		},
		{
			"trigger": "fam_pending()",
			"contents": "fam_pending(${1:fam})",
			"kind": "function"
		},
		{
			"trigger": "fam_resume_monitor()",
			"contents": "fam_resume_monitor(${1:fam}, ${2:fam_monitor})",
			"kind": "function"
		},
		{
			"trigger": "fam_suspend_monitor()",
			"contents": "fam_suspend_monitor(${1:fam}, ${2:fam_monitor})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_affected_rows()",
			"contents": "fbsql_affected_rows()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_autocommit()",
			"contents": "fbsql_autocommit(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_blob_size()",
			"contents": "fbsql_blob_size(${1:blob_handle})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_change_user()",
			"contents": "fbsql_change_user(${1:user}, ${2:password})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_clob_size()",
			"contents": "fbsql_clob_size(${1:clob_handle})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_close()",
			"contents": "fbsql_close()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_commit()",
			"contents": "fbsql_commit()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_connect()",
			"contents": "fbsql_connect()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_create_blob()",
			"contents": "fbsql_create_blob(${1:blob_data})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_create_clob()",
			"contents": "fbsql_create_clob(${1:clob_data})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_create_db()",
			"contents": "fbsql_create_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_data_seek()",
			"contents": "fbsql_data_seek(${1:result}, ${2:row_number})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_database()",
			"contents": "fbsql_database(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_database_password()",
			"contents": "fbsql_database_password(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_db_query()",
			"contents": "fbsql_db_query(${1:database}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_db_status()",
			"contents": "fbsql_db_status(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_drop_db()",
			"contents": "fbsql_drop_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_errno()",
			"contents": "fbsql_errno()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_error()",
			"contents": "fbsql_error()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_fetch_array()",
			"contents": "fbsql_fetch_array(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_fetch_assoc()",
			"contents": "fbsql_fetch_assoc(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_fetch_field()",
			"contents": "fbsql_fetch_field(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_fetch_lengths()",
			"contents": "fbsql_fetch_lengths(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_fetch_object()",
			"contents": "fbsql_fetch_object(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_fetch_row()",
			"contents": "fbsql_fetch_row(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_field_flags()",
			"contents": "fbsql_field_flags(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_field_len()",
			"contents": "fbsql_field_len(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_field_name()",
			"contents": "fbsql_field_name(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_field_seek()",
			"contents": "fbsql_field_seek(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_field_table()",
			"contents": "fbsql_field_table(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_field_type()",
			"contents": "fbsql_field_type(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_free_result()",
			"contents": "fbsql_free_result(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_get_autostart_info()",
			"contents": "fbsql_get_autostart_info()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_hostname()",
			"contents": "fbsql_hostname(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_insert_id()",
			"contents": "fbsql_insert_id()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_list_dbs()",
			"contents": "fbsql_list_dbs()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_list_fields()",
			"contents": "fbsql_list_fields(${1:database_name}, ${2:table_name})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_list_tables()",
			"contents": "fbsql_list_tables(${1:database})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_next_result()",
			"contents": "fbsql_next_result(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_num_fields()",
			"contents": "fbsql_num_fields(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_num_rows()",
			"contents": "fbsql_num_rows(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_password()",
			"contents": "fbsql_password(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_pconnect()",
			"contents": "fbsql_pconnect()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_query()",
			"contents": "fbsql_query(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_read_blob()",
			"contents": "fbsql_read_blob(${1:blob_handle})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_read_clob()",
			"contents": "fbsql_read_clob(${1:clob_handle})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_result()",
			"contents": "fbsql_result(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_rollback()",
			"contents": "fbsql_rollback()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_rows_fetched()",
			"contents": "fbsql_rows_fetched(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_select_db()",
			"contents": "fbsql_select_db()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_set_characterset()",
			"contents": "fbsql_set_characterset(${1:link_identifier}, ${2:characterset})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_set_lob_mode()",
			"contents": "fbsql_set_lob_mode(${1:result}, ${2:lob_mode})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_set_password()",
			"contents": "fbsql_set_password(${1:link_identifier}, ${2:user}, ${3:password}, ${4:old_password})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_set_transaction()",
			"contents": "fbsql_set_transaction(${1:link_identifier}, ${2:locking}, ${3:isolation})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_start_db()",
			"contents": "fbsql_start_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_stop_db()",
			"contents": "fbsql_stop_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_table_name()",
			"contents": "fbsql_table_name(${1:result}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_tablename()",
			"contents": "fbsql_tablename()",
			"kind": "function"
		},
		{
			"trigger": "fbsql_username()",
			"contents": "fbsql_username(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "fbsql_warnings()",
			"contents": "fbsql_warnings()",
			"kind": "function"
		},
		{
			"trigger": "fclose()",
			"contents": "fclose(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "fdf_add_doc_javascript()",
			"contents": "fdf_add_doc_javascript(${1:fdf_document}, ${2:script_name}, ${3:script_code})",
			"kind": "function"
		},
		{
			"trigger": "fdf_add_template()",
			"contents": "fdf_add_template(${1:fdf_document}, ${2:newpage}, ${3:filename}, ${4:template}, ${5:rename})",
			"kind": "function"
		},
		{
			"trigger": "fdf_close()",
			"contents": "fdf_close(${1:fdf_document})",
			"kind": "function"
		},
		{
			"trigger": "fdf_create()",
			"contents": "fdf_create()",
			"kind": "function"
		},
		{
			"trigger": "fdf_enum_values()",
			"contents": "fdf_enum_values(${1:fdf_document}, ${2:function})",
			"kind": "function"
		},
		{
			"trigger": "fdf_errno()",
			"contents": "fdf_errno()",
			"kind": "function"
		},
		{
			"trigger": "fdf_error()",
			"contents": "fdf_error()",
			"kind": "function"
		},
		{
			"trigger": "fdf_get_ap()",
			"contents": "fdf_get_ap(${1:fdf_document}, ${2:field}, ${3:face}, ${4:filename})",
			"kind": "function"
		},
		{
			"trigger": "fdf_get_attachment()",
			"contents": "fdf_get_attachment(${1:fdf_document}, ${2:fieldname}, ${3:savepath})",
			"kind": "function"
		},
		{
			"trigger": "fdf_get_encoding()",
			"contents": "fdf_get_encoding(${1:fdf_document})",
			"kind": "function"
		},
		{
			"trigger": "fdf_get_file()",
			"contents": "fdf_get_file(${1:fdf_document})",
			"kind": "function"
		},
		{
			"trigger": "fdf_get_flags()",
			"contents": "fdf_get_flags(${1:fdf_document}, ${2:fieldname}, ${3:whichflags})",
			"kind": "function"
		},
		{
			"trigger": "fdf_get_opt()",
			"contents": "fdf_get_opt(${1:fdf_document}, ${2:fieldname})",
			"kind": "function"
		},
		{
			"trigger": "fdf_get_status()",
			"contents": "fdf_get_status(${1:fdf_document})",
			"kind": "function"
		},
		{
			"trigger": "fdf_get_value()",
			"contents": "fdf_get_value(${1:fdf_document}, ${2:fieldname})",
			"kind": "function"
		},
		{
			"trigger": "fdf_get_version()",
			"contents": "fdf_get_version()",
			"kind": "function"
		},
		{
			"trigger": "fdf_header()",
			"contents": "fdf_header()",
			"kind": "function"
		},
		{
			"trigger": "fdf_next_field_name()",
			"contents": "fdf_next_field_name(${1:fdf_document})",
			"kind": "function"
		},
		{
			"trigger": "fdf_open()",
			"contents": "fdf_open(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "fdf_open_string()",
			"contents": "fdf_open_string(${1:fdf_data})",
			"kind": "function"
		},
		{
			"trigger": "fdf_remove_item()",
			"contents": "fdf_remove_item(${1:fdf_document}, ${2:fieldname}, ${3:item})",
			"kind": "function"
		},
		{
			"trigger": "fdf_save()",
			"contents": "fdf_save(${1:fdf_document})",
			"kind": "function"
		},
		{
			"trigger": "fdf_save_string()",
			"contents": "fdf_save_string(${1:fdf_document})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_ap()",
			"contents": "fdf_set_ap(${1:fdf_document}, ${2:field_name}, ${3:face}, ${4:filename}, ${5:page_number})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_encoding()",
			"contents": "fdf_set_encoding(${1:fdf_document}, ${2:encoding})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_file()",
			"contents": "fdf_set_file(${1:fdf_document}, ${2:url})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_flags()",
			"contents": "fdf_set_flags(${1:fdf_document}, ${2:fieldname}, ${3:whichFlags}, ${4:newFlags})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_javascript_action()",
			"contents": "fdf_set_javascript_action(${1:fdf_document}, ${2:fieldname}, ${3:trigger}, ${4:script})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_on_import_javascript()",
			"contents": "fdf_set_on_import_javascript(${1:fdf_document}, ${2:script}, ${3:before_data_import})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_opt()",
			"contents": "fdf_set_opt(${1:fdf_document}, ${2:fieldname}, ${3:element}, ${4:str1}, ${5:str2})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_status()",
			"contents": "fdf_set_status(${1:fdf_document}, ${2:status})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_submit_form_action()",
			"contents": "fdf_set_submit_form_action(${1:fdf_document}, ${2:fieldname}, ${3:trigger}, ${4:script}, ${5:flags})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_target_frame()",
			"contents": "fdf_set_target_frame(${1:fdf_document}, ${2:frame_name})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_value()",
			"contents": "fdf_set_value(${1:fdf_document}, ${2:fieldname}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "fdf_set_version()",
			"contents": "fdf_set_version(${1:fdf_document}, ${2:version})",
			"kind": "function"
		},
		{
			"trigger": "feof()",
			"contents": "feof(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "fflush()",
			"contents": "fflush(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "fgetc()",
			"contents": "fgetc(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "fgetcsv()",
			"contents": "fgetcsv(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "fgets()",
			"contents": "fgets(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "fgetss()",
			"contents": "fgetss(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "file()",
			"contents": "file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "file_exists()",
			"contents": "file_exists(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "file_get_contents()",
			"contents": "file_get_contents(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "file_put_contents()",
			"contents": "file_put_contents(${1:filename}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "fileatime()",
			"contents": "fileatime(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "filectime()",
			"contents": "filectime(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "filegroup()",
			"contents": "filegroup(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "fileinode()",
			"contents": "fileinode(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "filemtime()",
			"contents": "filemtime(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "fileowner()",
			"contents": "fileowner(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "fileperms()",
			"contents": "fileperms(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "filepro()",
			"contents": "filepro(${1:directory})",
			"kind": "function"
		},
		{
			"trigger": "filepro_fieldcount()",
			"contents": "filepro_fieldcount()",
			"kind": "function"
		},
		{
			"trigger": "filepro_fieldname()",
			"contents": "filepro_fieldname(${1:field_number})",
			"kind": "function"
		},
		{
			"trigger": "filepro_fieldtype()",
			"contents": "filepro_fieldtype(${1:field_number})",
			"kind": "function"
		},
		{
			"trigger": "filepro_fieldwidth()",
			"contents": "filepro_fieldwidth(${1:field_number})",
			"kind": "function"
		},
		{
			"trigger": "filepro_retrieve()",
			"contents": "filepro_retrieve(${1:row_number}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "filepro_rowcount()",
			"contents": "filepro_rowcount()",
			"kind": "function"
		},
		{
			"trigger": "filesize()",
			"contents": "filesize(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "filetype()",
			"contents": "filetype(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "filter_has_var()",
			"contents": "filter_has_var(${1:type}, ${2:variable_name})",
			"kind": "function"
		},
		{
			"trigger": "filter_id()",
			"contents": "filter_id(${1:filtername})",
			"kind": "function"
		},
		{
			"trigger": "filter_input()",
			"contents": "filter_input(${1:type}, ${2:variable_name})",
			"kind": "function"
		},
		{
			"trigger": "filter_input_array()",
			"contents": "filter_input_array(${1:type})",
			"kind": "function"
		},
		{
			"trigger": "filter_list()",
			"contents": "filter_list()",
			"kind": "function"
		},
		{
			"trigger": "filter_var()",
			"contents": "filter_var(${1:variable})",
			"kind": "function"
		},
		{
			"trigger": "filter_var_array()",
			"contents": "filter_var_array(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "finfo_buffer()",
			"contents": "finfo_buffer(${1:finfo}, ${2:string = NULL})",
			"kind": "function"
		},
		{
			"trigger": "finfo_close()",
			"contents": "finfo_close(${1:finfo})",
			"kind": "function"
		},
		{
			"trigger": "finfo_file()",
			"contents": "finfo_file(${1:finfo}, ${2:file_name = NULL})",
			"kind": "function"
		},
		{
			"trigger": "finfo_set_flags()",
			"contents": "finfo_set_flags(${1:finfo}, ${2:options})",
			"kind": "function"
		},
		{
			"trigger": "floatval()",
			"contents": "floatval(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "flock()",
			"contents": "flock(${1:handle}, ${2:operation})",
			"kind": "function"
		},
		{
			"trigger": "floor()",
			"contents": "floor(${1:value})",
			"kind": "function"
		},
		{
			"trigger": "flush()",
			"contents": "flush()",
			"kind": "function"
		},
		{
			"trigger": "fmod()",
			"contents": "fmod(${1:x}, ${2:y})",
			"kind": "function"
		},
		{
			"trigger": "fnmatch()",
			"contents": "fnmatch(${1:pattern}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "fopen()",
			"contents": "fopen(${1:filename}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "forward_static_call()",
			"contents": "forward_static_call(${1:function})",
			"kind": "function"
		},
		{
			"trigger": "forward_static_call_array()",
			"contents": "forward_static_call_array(${1:function}, ${2:parameters})",
			"kind": "function"
		},
		{
			"trigger": "fpassthru()",
			"contents": "fpassthru(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "fprintf()",
			"contents": "fprintf(${1:handle}, ${2:format})",
			"kind": "function"
		},
		{
			"trigger": "fputcsv()",
			"contents": "fputcsv(${1:handle}, ${2:fields})",
			"kind": "function"
		},
		{
			"trigger": "fputs()",
			"contents": "fputs()",
			"kind": "function"
		},
		{
			"trigger": "fread()",
			"contents": "fread(${1:handle}, ${2:length})",
			"kind": "function"
		},
		{
			"trigger": "FrenchToJD()",
			"contents": "FrenchToJD(${1:month}, ${2:day}, ${3:year})",
			"kind": "function"
		},
		{
			"trigger": "fribidi_log2vis()",
			"contents": "fribidi_log2vis(${1:str}, ${2:direction}, ${3:charset})",
			"kind": "function"
		},
		{
			"trigger": "fscanf()",
			"contents": "fscanf(${1:handle}, ${2:format})",
			"kind": "function"
		},
		{
			"trigger": "fseek()",
			"contents": "fseek(${1:handle}, ${2:offset})",
			"kind": "function"
		},
		{
			"trigger": "fsockopen()",
			"contents": "fsockopen(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "fstat()",
			"contents": "fstat(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "ftell()",
			"contents": "ftell(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "ftok()",
			"contents": "ftok(${1:pathname}, ${2:proj})",
			"kind": "function"
		},
		{
			"trigger": "ftp_alloc()",
			"contents": "ftp_alloc(${1:ftp_stream}, ${2:filesize})",
			"kind": "function"
		},
		{
			"trigger": "ftp_cdup()",
			"contents": "ftp_cdup(${1:ftp_stream})",
			"kind": "function"
		},
		{
			"trigger": "ftp_chdir()",
			"contents": "ftp_chdir(${1:ftp_stream}, ${2:directory})",
			"kind": "function"
		},
		{
			"trigger": "ftp_chmod()",
			"contents": "ftp_chmod(${1:ftp_stream}, ${2:mode}, ${3:filename})",
			"kind": "function"
		},
		{
			"trigger": "ftp_close()",
			"contents": "ftp_close(${1:ftp_stream})",
			"kind": "function"
		},
		{
			"trigger": "ftp_connect()",
			"contents": "ftp_connect(${1:host})",
			"kind": "function"
		},
		{
			"trigger": "ftp_delete()",
			"contents": "ftp_delete(${1:ftp_stream}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "ftp_exec()",
			"contents": "ftp_exec(${1:ftp_stream}, ${2:command})",
			"kind": "function"
		},
		{
			"trigger": "ftp_fget()",
			"contents": "ftp_fget(${1:ftp_stream}, ${2:handle}, ${3:remote_file}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "ftp_fput()",
			"contents": "ftp_fput(${1:ftp_stream}, ${2:remote_file}, ${3:handle}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "ftp_get()",
			"contents": "ftp_get(${1:ftp_stream}, ${2:local_file}, ${3:remote_file}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "ftp_get_option()",
			"contents": "ftp_get_option(${1:ftp_stream}, ${2:option})",
			"kind": "function"
		},
		{
			"trigger": "ftp_login()",
			"contents": "ftp_login(${1:ftp_stream}, ${2:username}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "ftp_mdtm()",
			"contents": "ftp_mdtm(${1:ftp_stream}, ${2:remote_file})",
			"kind": "function"
		},
		{
			"trigger": "ftp_mkdir()",
			"contents": "ftp_mkdir(${1:ftp_stream}, ${2:directory})",
			"kind": "function"
		},
		{
			"trigger": "ftp_nb_continue()",
			"contents": "ftp_nb_continue(${1:ftp_stream})",
			"kind": "function"
		},
		{
			"trigger": "ftp_nb_fget()",
			"contents": "ftp_nb_fget(${1:ftp_stream}, ${2:handle}, ${3:remote_file}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "ftp_nb_fput()",
			"contents": "ftp_nb_fput(${1:ftp_stream}, ${2:remote_file}, ${3:handle}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "ftp_nb_get()",
			"contents": "ftp_nb_get(${1:ftp_stream}, ${2:local_file}, ${3:remote_file}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "ftp_nb_put()",
			"contents": "ftp_nb_put(${1:ftp_stream}, ${2:remote_file}, ${3:local_file}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "ftp_nlist()",
			"contents": "ftp_nlist(${1:ftp_stream}, ${2:directory})",
			"kind": "function"
		},
		{
			"trigger": "ftp_pasv()",
			"contents": "ftp_pasv(${1:ftp_stream}, ${2:pasv})",
			"kind": "function"
		},
		{
			"trigger": "ftp_put()",
			"contents": "ftp_put(${1:ftp_stream}, ${2:remote_file}, ${3:local_file}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "ftp_pwd()",
			"contents": "ftp_pwd(${1:ftp_stream})",
			"kind": "function"
		},
		{
			"trigger": "ftp_quit()",
			"contents": "ftp_quit()",
			"kind": "function"
		},
		{
			"trigger": "ftp_raw()",
			"contents": "ftp_raw(${1:ftp_stream}, ${2:command})",
			"kind": "function"
		},
		{
			"trigger": "ftp_rawlist()",
			"contents": "ftp_rawlist(${1:ftp_stream}, ${2:directory})",
			"kind": "function"
		},
		{
			"trigger": "ftp_rename()",
			"contents": "ftp_rename(${1:ftp_stream}, ${2:oldname}, ${3:newname})",
			"kind": "function"
		},
		{
			"trigger": "ftp_rmdir()",
			"contents": "ftp_rmdir(${1:ftp_stream}, ${2:directory})",
			"kind": "function"
		},
		{
			"trigger": "ftp_set_option()",
			"contents": "ftp_set_option(${1:ftp_stream}, ${2:option}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "ftp_site()",
			"contents": "ftp_site(${1:ftp_stream}, ${2:command})",
			"kind": "function"
		},
		{
			"trigger": "ftp_size()",
			"contents": "ftp_size(${1:ftp_stream}, ${2:remote_file})",
			"kind": "function"
		},
		{
			"trigger": "ftp_ssl_connect()",
			"contents": "ftp_ssl_connect(${1:host})",
			"kind": "function"
		},
		{
			"trigger": "ftp_systype()",
			"contents": "ftp_systype(${1:ftp_stream})",
			"kind": "function"
		},
		{
			"trigger": "ftruncate()",
			"contents": "ftruncate(${1:handle}, ${2:size})",
			"kind": "function"
		},
		{
			"trigger": "func_get_arg()",
			"contents": "func_get_arg(${1:arg_num})",
			"kind": "function"
		},
		{
			"trigger": "func_get_args()",
			"contents": "func_get_args()",
			"kind": "function"
		},
		{
			"trigger": "func_num_args()",
			"contents": "func_num_args()",
			"kind": "function"
		},
		{
			"trigger": "function_exists()",
			"contents": "function_exists(${1:function_name})",
			"kind": "function"
		},
		{
			"trigger": "fwrite()",
			"contents": "fwrite(${1:handle}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "gc_collect_cycles()",
			"contents": "gc_collect_cycles()",
			"kind": "function"
		},
		{
			"trigger": "gc_disable()",
			"contents": "gc_disable()",
			"kind": "function"
		},
		{
			"trigger": "gc_enable()",
			"contents": "gc_enable()",
			"kind": "function"
		},
		{
			"trigger": "gc_enabled()",
			"contents": "gc_enabled()",
			"kind": "function"
		},
		{
			"trigger": "gd_info()",
			"contents": "gd_info()",
			"kind": "function"
		},
		{
			"trigger": "geoip_continent_code_by_name()",
			"contents": "geoip_continent_code_by_name(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "geoip_country_code3_by_name()",
			"contents": "geoip_country_code3_by_name(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "geoip_country_code_by_name()",
			"contents": "geoip_country_code_by_name(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "geoip_country_name_by_name()",
			"contents": "geoip_country_name_by_name(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "geoip_database_info()",
			"contents": "geoip_database_info()",
			"kind": "function"
		},
		{
			"trigger": "geoip_db_avail()",
			"contents": "geoip_db_avail(${1:database})",
			"kind": "function"
		},
		{
			"trigger": "geoip_db_filename()",
			"contents": "geoip_db_filename(${1:database})",
			"kind": "function"
		},
		{
			"trigger": "geoip_db_get_all_info()",
			"contents": "geoip_db_get_all_info()",
			"kind": "function"
		},
		{
			"trigger": "geoip_id_by_name()",
			"contents": "geoip_id_by_name(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "geoip_isp_by_name()",
			"contents": "geoip_isp_by_name(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "geoip_org_by_name()",
			"contents": "geoip_org_by_name(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "geoip_record_by_name()",
			"contents": "geoip_record_by_name(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "geoip_region_by_name()",
			"contents": "geoip_region_by_name(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "geoip_region_name_by_code()",
			"contents": "geoip_region_name_by_code(${1:country_code}, ${2:region_code})",
			"kind": "function"
		},
		{
			"trigger": "geoip_time_zone_by_country_and_region()",
			"contents": "geoip_time_zone_by_country_and_region(${1:country_code})",
			"kind": "function"
		},
		{
			"trigger": "get_browser()",
			"contents": "get_browser()",
			"kind": "function"
		},
		{
			"trigger": "get_called_class()",
			"contents": "get_called_class()",
			"kind": "function"
		},
		{
			"trigger": "get_cfg_var()",
			"contents": "get_cfg_var(${1:option})",
			"kind": "function"
		},
		{
			"trigger": "get_class()",
			"contents": "get_class()",
			"kind": "function"
		},
		{
			"trigger": "get_class_methods()",
			"contents": "get_class_methods(${1:class_name})",
			"kind": "function"
		},
		{
			"trigger": "get_class_vars()",
			"contents": "get_class_vars(${1:class_name})",
			"kind": "function"
		},
		{
			"trigger": "get_current_user()",
			"contents": "get_current_user()",
			"kind": "function"
		},
		{
			"trigger": "get_declared_classes()",
			"contents": "get_declared_classes()",
			"kind": "function"
		},
		{
			"trigger": "get_declared_interfaces()",
			"contents": "get_declared_interfaces()",
			"kind": "function"
		},
		{
			"trigger": "get_defined_constants()",
			"contents": "get_defined_constants()",
			"kind": "function"
		},
		{
			"trigger": "get_defined_functions()",
			"contents": "get_defined_functions()",
			"kind": "function"
		},
		{
			"trigger": "get_defined_vars()",
			"contents": "get_defined_vars()",
			"kind": "function"
		},
		{
			"trigger": "get_extension_funcs()",
			"contents": "get_extension_funcs(${1:module_name})",
			"kind": "function"
		},
		{
			"trigger": "get_headers()",
			"contents": "get_headers(${1:url})",
			"kind": "function"
		},
		{
			"trigger": "get_html_translation_table()",
			"contents": "get_html_translation_table()",
			"kind": "function"
		},
		{
			"trigger": "get_include_path()",
			"contents": "get_include_path()",
			"kind": "function"
		},
		{
			"trigger": "get_included_files()",
			"contents": "get_included_files()",
			"kind": "function"
		},
		{
			"trigger": "get_loaded_extensions()",
			"contents": "get_loaded_extensions()",
			"kind": "function"
		},
		{
			"trigger": "get_magic_quotes_gpc()",
			"contents": "get_magic_quotes_gpc()",
			"kind": "function"
		},
		{
			"trigger": "get_magic_quotes_runtime()",
			"contents": "get_magic_quotes_runtime()",
			"kind": "function"
		},
		{
			"trigger": "get_meta_tags()",
			"contents": "get_meta_tags(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "get_object_vars()",
			"contents": "get_object_vars(${1:object})",
			"kind": "function"
		},
		{
			"trigger": "get_parent_class()",
			"contents": "get_parent_class()",
			"kind": "function"
		},
		{
			"trigger": "get_required_files()",
			"contents": "get_required_files()",
			"kind": "function"
		},
		{
			"trigger": "get_resource_type()",
			"contents": "get_resource_type(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "getallheaders()",
			"contents": "getallheaders()",
			"kind": "function"
		},
		{
			"trigger": "getcwd()",
			"contents": "getcwd()",
			"kind": "function"
		},
		{
			"trigger": "getdate()",
			"contents": "getdate()",
			"kind": "function"
		},
		{
			"trigger": "getenv()",
			"contents": "getenv(${1:varname})",
			"kind": "function"
		},
		{
			"trigger": "gethostbyaddr()",
			"contents": "gethostbyaddr(${1:ip_address})",
			"kind": "function"
		},
		{
			"trigger": "gethostbyname()",
			"contents": "gethostbyname(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "gethostbynamel()",
			"contents": "gethostbynamel(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "gethostname()",
			"contents": "gethostname()",
			"kind": "function"
		},
		{
			"trigger": "getimagesize()",
			"contents": "getimagesize(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "getlastmod()",
			"contents": "getlastmod()",
			"kind": "function"
		},
		{
			"trigger": "getmxrr()",
			"contents": "getmxrr(${1:hostname}, ${2:mxhosts})",
			"kind": "function"
		},
		{
			"trigger": "getmygid()",
			"contents": "getmygid()",
			"kind": "function"
		},
		{
			"trigger": "getmyinode()",
			"contents": "getmyinode()",
			"kind": "function"
		},
		{
			"trigger": "getmypid()",
			"contents": "getmypid()",
			"kind": "function"
		},
		{
			"trigger": "getmyuid()",
			"contents": "getmyuid()",
			"kind": "function"
		},
		{
			"trigger": "getopt()",
			"contents": "getopt(${1:options})",
			"kind": "function"
		},
		{
			"trigger": "getprotobyname()",
			"contents": "getprotobyname(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "getprotobynumber()",
			"contents": "getprotobynumber(${1:number})",
			"kind": "function"
		},
		{
			"trigger": "getrandmax()",
			"contents": "getrandmax()",
			"kind": "function"
		},
		{
			"trigger": "getrusage()",
			"contents": "getrusage()",
			"kind": "function"
		},
		{
			"trigger": "getservbyname()",
			"contents": "getservbyname(${1:service}, ${2:protocol})",
			"kind": "function"
		},
		{
			"trigger": "getservbyport()",
			"contents": "getservbyport(${1:port}, ${2:protocol})",
			"kind": "function"
		},
		{
			"trigger": "gettext()",
			"contents": "gettext(${1:message})",
			"kind": "function"
		},
		{
			"trigger": "gettimeofday()",
			"contents": "gettimeofday()",
			"kind": "function"
		},
		{
			"trigger": "gettype()",
			"contents": "gettype(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "glob()",
			"contents": "glob(${1:pattern})",
			"kind": "function"
		},
		{
			"trigger": "gmdate()",
			"contents": "gmdate(${1:format})",
			"kind": "function"
		},
		{
			"trigger": "gmmktime()",
			"contents": "gmmktime()",
			"kind": "function"
		},
		{
			"trigger": "gmp_abs()",
			"contents": "gmp_abs(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_add()",
			"contents": "gmp_add(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_and()",
			"contents": "gmp_and(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_clrbit()",
			"contents": "gmp_clrbit(${1:a}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "gmp_cmp()",
			"contents": "gmp_cmp(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_com()",
			"contents": "gmp_com(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_div()",
			"contents": "gmp_div()",
			"kind": "function"
		},
		{
			"trigger": "gmp_div_q()",
			"contents": "gmp_div_q(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_div_qr()",
			"contents": "gmp_div_qr(${1:n}, ${2:d})",
			"kind": "function"
		},
		{
			"trigger": "gmp_div_r()",
			"contents": "gmp_div_r(${1:n}, ${2:d})",
			"kind": "function"
		},
		{
			"trigger": "gmp_divexact()",
			"contents": "gmp_divexact(${1:n}, ${2:d})",
			"kind": "function"
		},
		{
			"trigger": "gmp_fact()",
			"contents": "gmp_fact(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_gcd()",
			"contents": "gmp_gcd(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_gcdext()",
			"contents": "gmp_gcdext(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_hamdist()",
			"contents": "gmp_hamdist(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_init()",
			"contents": "gmp_init(${1:number})",
			"kind": "function"
		},
		{
			"trigger": "gmp_intval()",
			"contents": "gmp_intval(${1:gmpnumber})",
			"kind": "function"
		},
		{
			"trigger": "gmp_invert()",
			"contents": "gmp_invert(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_jacobi()",
			"contents": "gmp_jacobi(${1:a}, ${2:p})",
			"kind": "function"
		},
		{
			"trigger": "gmp_legendre()",
			"contents": "gmp_legendre(${1:a}, ${2:p})",
			"kind": "function"
		},
		{
			"trigger": "gmp_mod()",
			"contents": "gmp_mod(${1:n}, ${2:d})",
			"kind": "function"
		},
		{
			"trigger": "gmp_mul()",
			"contents": "gmp_mul(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_neg()",
			"contents": "gmp_neg(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_nextprime()",
			"contents": "gmp_nextprime(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_or()",
			"contents": "gmp_or(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_perfect_square()",
			"contents": "gmp_perfect_square(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_popcount()",
			"contents": "gmp_popcount(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_pow()",
			"contents": "gmp_pow(${1:base}, ${2:exp})",
			"kind": "function"
		},
		{
			"trigger": "gmp_powm()",
			"contents": "gmp_powm(${1:base}, ${2:exp}, ${3:mod})",
			"kind": "function"
		},
		{
			"trigger": "gmp_prob_prime()",
			"contents": "gmp_prob_prime(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_random()",
			"contents": "gmp_random()",
			"kind": "function"
		},
		{
			"trigger": "gmp_scan0()",
			"contents": "gmp_scan0(${1:a}, ${2:start})",
			"kind": "function"
		},
		{
			"trigger": "gmp_scan1()",
			"contents": "gmp_scan1(${1:a}, ${2:start})",
			"kind": "function"
		},
		{
			"trigger": "gmp_setbit()",
			"contents": "gmp_setbit(${1:a}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "gmp_sign()",
			"contents": "gmp_sign(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_sqrt()",
			"contents": "gmp_sqrt(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_sqrtrem()",
			"contents": "gmp_sqrtrem(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "gmp_strval()",
			"contents": "gmp_strval(${1:gmpnumber})",
			"kind": "function"
		},
		{
			"trigger": "gmp_sub()",
			"contents": "gmp_sub(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmp_testbit()",
			"contents": "gmp_testbit(${1:a}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "gmp_xor()",
			"contents": "gmp_xor(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "gmstrftime()",
			"contents": "gmstrftime(${1:format})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_adddecryptkey()",
			"contents": "gnupg_adddecryptkey(${1:identifier}, ${2:fingerprint}, ${3:passphrase})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_addencryptkey()",
			"contents": "gnupg_addencryptkey(${1:identifier}, ${2:fingerprint})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_addsignkey()",
			"contents": "gnupg_addsignkey(${1:identifier}, ${2:fingerprint})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_cleardecryptkeys()",
			"contents": "gnupg_cleardecryptkeys(${1:identifier})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_clearencryptkeys()",
			"contents": "gnupg_clearencryptkeys(${1:identifier})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_clearsignkeys()",
			"contents": "gnupg_clearsignkeys(${1:identifier})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_decrypt()",
			"contents": "gnupg_decrypt(${1:identifier}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_decryptverify()",
			"contents": "gnupg_decryptverify(${1:identifier}, ${2:text}, ${3:plaintext})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_encrypt()",
			"contents": "gnupg_encrypt(${1:identifier}, ${2:plaintext})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_encryptsign()",
			"contents": "gnupg_encryptsign(${1:identifier}, ${2:plaintext})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_export()",
			"contents": "gnupg_export(${1:identifier}, ${2:fingerprint})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_geterror()",
			"contents": "gnupg_geterror(${1:identifier})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_getprotocol()",
			"contents": "gnupg_getprotocol(${1:identifier})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_import()",
			"contents": "gnupg_import(${1:identifier}, ${2:keydata})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_init()",
			"contents": "gnupg_init()",
			"kind": "function"
		},
		{
			"trigger": "gnupg_keyinfo()",
			"contents": "gnupg_keyinfo(${1:identifier}, ${2:pattern})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_setarmor()",
			"contents": "gnupg_setarmor(${1:identifier}, ${2:armor})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_seterrormode()",
			"contents": "gnupg_seterrormode(${1:identifier}, ${2:errormode})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_setsignmode()",
			"contents": "gnupg_setsignmode(${1:identifier}, ${2:signmode})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_sign()",
			"contents": "gnupg_sign(${1:identifier}, ${2:plaintext})",
			"kind": "function"
		},
		{
			"trigger": "gnupg_verify()",
			"contents": "gnupg_verify(${1:identifier}, ${2:signed_text}, ${3:signature})",
			"kind": "function"
		},
		{
			"trigger": "gopher_parsedir()",
			"contents": "gopher_parsedir(${1:dirent})",
			"kind": "function"
		},
		{
			"trigger": "grapheme_extract()",
			"contents": "grapheme_extract(${1:haystack}, ${2:size})",
			"kind": "function"
		},
		{
			"trigger": "grapheme_stripos()",
			"contents": "grapheme_stripos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "grapheme_stristr()",
			"contents": "grapheme_stristr(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "grapheme_strlen()",
			"contents": "grapheme_strlen(${1:input})",
			"kind": "function"
		},
		{
			"trigger": "grapheme_strpos()",
			"contents": "grapheme_strpos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "grapheme_strripos()",
			"contents": "grapheme_strripos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "grapheme_strrpos()",
			"contents": "grapheme_strrpos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "grapheme_strstr()",
			"contents": "grapheme_strstr(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "grapheme_substr()",
			"contents": "grapheme_substr(${1:string}, ${2:start})",
			"kind": "function"
		},
		{
			"trigger": "GregorianToJD()",
			"contents": "GregorianToJD(${1:month}, ${2:day}, ${3:year})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_context_get_host_ip()",
			"contents": "gupnp_context_get_host_ip(${1:context})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_context_get_port()",
			"contents": "gupnp_context_get_port(${1:context})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_context_get_subscription_timeout()",
			"contents": "gupnp_context_get_subscription_timeout(${1:context})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_context_host_path()",
			"contents": "gupnp_context_host_path(${1:context}, ${2:local_path}, ${3:server_path})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_context_new()",
			"contents": "gupnp_context_new()",
			"kind": "function"
		},
		{
			"trigger": "gupnp_context_set_subscription_timeout()",
			"contents": "gupnp_context_set_subscription_timeout(${1:context}, ${2:timeout})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_context_timeout_add()",
			"contents": "gupnp_context_timeout_add(${1:context}, ${2:timeout}, ${3:callback})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_context_unhost_path()",
			"contents": "gupnp_context_unhost_path(${1:context}, ${2:server_path})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_control_point_browse_start()",
			"contents": "gupnp_control_point_browse_start(${1:cpoint})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_control_point_browse_stop()",
			"contents": "gupnp_control_point_browse_stop(${1:cpoint})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_control_point_callback_set()",
			"contents": "gupnp_control_point_callback_set(${1:cpoint}, ${2:signal}, ${3:callback})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_control_point_new()",
			"contents": "gupnp_control_point_new(${1:context}, ${2:target})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_device_action_callback_set()",
			"contents": "gupnp_device_action_callback_set(${1:root_device}, ${2:signal}, ${3:action_name}, ${4:callback})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_device_info_get()",
			"contents": "gupnp_device_info_get(${1:root_device})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_device_info_get_service()",
			"contents": "gupnp_device_info_get_service(${1:root_device}, ${2:type})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_root_device_get_available()",
			"contents": "gupnp_root_device_get_available(${1:root_device})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_root_device_get_relative_location()",
			"contents": "gupnp_root_device_get_relative_location(${1:root_device})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_root_device_new()",
			"contents": "gupnp_root_device_new(${1:context}, ${2:location}, ${3:description_dir})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_root_device_set_available()",
			"contents": "gupnp_root_device_set_available(${1:root_device}, ${2:available})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_root_device_start()",
			"contents": "gupnp_root_device_start(${1:root_device})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_root_device_stop()",
			"contents": "gupnp_root_device_stop(${1:root_device})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_action_get()",
			"contents": "gupnp_service_action_get(${1:action}, ${2:name}, ${3:type})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_action_return()",
			"contents": "gupnp_service_action_return(${1:action})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_action_return_error()",
			"contents": "gupnp_service_action_return_error(${1:action}, ${2:error_code})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_action_set()",
			"contents": "gupnp_service_action_set(${1:action}, ${2:name}, ${3:type}, ${4:value})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_freeze_notify()",
			"contents": "gupnp_service_freeze_notify(${1:service})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_info_get()",
			"contents": "gupnp_service_info_get(${1:proxy})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_info_get_introspection()",
			"contents": "gupnp_service_info_get_introspection(${1:proxy})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_introspection_get_state_variable()",
			"contents": "gupnp_service_introspection_get_state_variable(${1:introspection}, ${2:variable_name})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_notify()",
			"contents": "gupnp_service_notify(${1:service}, ${2:name}, ${3:type}, ${4:value})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_proxy_action_get()",
			"contents": "gupnp_service_proxy_action_get(${1:proxy}, ${2:action}, ${3:name}, ${4:type})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_proxy_action_set()",
			"contents": "gupnp_service_proxy_action_set(${1:proxy}, ${2:action}, ${3:name}, ${4:value}, ${5:type})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_proxy_add_notify()",
			"contents": "gupnp_service_proxy_add_notify(${1:proxy}, ${2:value}, ${3:type}, ${4:callback})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_proxy_callback_set()",
			"contents": "gupnp_service_proxy_callback_set(${1:proxy}, ${2:signal}, ${3:callback})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_proxy_get_subscribed()",
			"contents": "gupnp_service_proxy_get_subscribed(${1:proxy})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_proxy_remove_notify()",
			"contents": "gupnp_service_proxy_remove_notify(${1:proxy}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_proxy_set_subscribed()",
			"contents": "gupnp_service_proxy_set_subscribed(${1:proxy}, ${2:subscribed})",
			"kind": "function"
		},
		{
			"trigger": "gupnp_service_thaw_notify()",
			"contents": "gupnp_service_thaw_notify(${1:service})",
			"kind": "function"
		},
		{
			"trigger": "gzclose()",
			"contents": "gzclose(${1:zp})",
			"kind": "function"
		},
		{
			"trigger": "gzcompress()",
			"contents": "gzcompress(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "gzdecode()",
			"contents": "gzdecode(${1:data}, ${2:length})",
			"kind": "function"
		},
		{
			"trigger": "gzdeflate()",
			"contents": "gzdeflate(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "gzencode()",
			"contents": "gzencode(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "gzeof()",
			"contents": "gzeof(${1:zp})",
			"kind": "function"
		},
		{
			"trigger": "gzfile()",
			"contents": "gzfile(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "gzgetc()",
			"contents": "gzgetc(${1:zp})",
			"kind": "function"
		},
		{
			"trigger": "gzgets()",
			"contents": "gzgets(${1:zp}, ${2:length})",
			"kind": "function"
		},
		{
			"trigger": "gzgetss()",
			"contents": "gzgetss(${1:zp}, ${2:length})",
			"kind": "function"
		},
		{
			"trigger": "gzinflate()",
			"contents": "gzinflate(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "gzopen()",
			"contents": "gzopen(${1:filename}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "gzpassthru()",
			"contents": "gzpassthru(${1:zp})",
			"kind": "function"
		},
		{
			"trigger": "gzputs()",
			"contents": "gzputs()",
			"kind": "function"
		},
		{
			"trigger": "gzread()",
			"contents": "gzread(${1:zp}, ${2:length})",
			"kind": "function"
		},
		{
			"trigger": "gzrewind()",
			"contents": "gzrewind(${1:zp})",
			"kind": "function"
		},
		{
			"trigger": "gzseek()",
			"contents": "gzseek(${1:zp}, ${2:offset})",
			"kind": "function"
		},
		{
			"trigger": "gztell()",
			"contents": "gztell(${1:zp})",
			"kind": "function"
		},
		{
			"trigger": "gzuncompress()",
			"contents": "gzuncompress(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "gzwrite()",
			"contents": "gzwrite(${1:zp}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "__halt_compiler()",
			"contents": "__halt_compiler()",
			"kind": "function"
		},
		{
			"trigger": "hash()",
			"contents": "hash(${1:algo}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "hash_algos()",
			"contents": "hash_algos()",
			"kind": "function"
		},
		{
			"trigger": "hash_copy()",
			"contents": "hash_copy(${1:context})",
			"kind": "function"
		},
		{
			"trigger": "hash_file()",
			"contents": "hash_file(${1:algo}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "hash_final()",
			"contents": "hash_final(${1:context})",
			"kind": "function"
		},
		{
			"trigger": "hash_hmac()",
			"contents": "hash_hmac(${1:algo}, ${2:data}, ${3:key})",
			"kind": "function"
		},
		{
			"trigger": "hash_hmac_file()",
			"contents": "hash_hmac_file(${1:algo}, ${2:filename}, ${3:key})",
			"kind": "function"
		},
		{
			"trigger": "hash_init()",
			"contents": "hash_init(${1:algo})",
			"kind": "function"
		},
		{
			"trigger": "hash_update()",
			"contents": "hash_update(${1:context}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "hash_update_file()",
			"contents": "hash_update_file(${1:context}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "hash_update_stream()",
			"contents": "hash_update_stream(${1:context}, ${2:handle})",
			"kind": "function"
		},
		{
			"trigger": "header()",
			"contents": "header(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "header_remove()",
			"contents": "header_remove()",
			"kind": "function"
		},
		{
			"trigger": "headers_list()",
			"contents": "headers_list()",
			"kind": "function"
		},
		{
			"trigger": "headers_sent()",
			"contents": "headers_sent()",
			"kind": "function"
		},
		{
			"trigger": "hebrev()",
			"contents": "hebrev(${1:hebrew_text})",
			"kind": "function"
		},
		{
			"trigger": "hebrevc()",
			"contents": "hebrevc(${1:hebrew_text})",
			"kind": "function"
		},
		{
			"trigger": "hexdec()",
			"contents": "hexdec(${1:hex_string})",
			"kind": "function"
		},
		{
			"trigger": "highlight_file()",
			"contents": "highlight_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "highlight_string()",
			"contents": "highlight_string(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "html_entity_decode()",
			"contents": "html_entity_decode(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "htmlentities()",
			"contents": "htmlentities(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "htmlspecialchars()",
			"contents": "htmlspecialchars(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "htmlspecialchars_decode()",
			"contents": "htmlspecialchars_decode(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "http_build_cookie()",
			"contents": "http_build_cookie(${1:cookie})",
			"kind": "function"
		},
		{
			"trigger": "http_build_query()",
			"contents": "http_build_query(${1:query_data})",
			"kind": "function"
		},
		{
			"trigger": "http_build_str()",
			"contents": "http_build_str(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "http_build_url()",
			"contents": "http_build_url()",
			"kind": "function"
		},
		{
			"trigger": "http_cache_etag()",
			"contents": "http_cache_etag()",
			"kind": "function"
		},
		{
			"trigger": "http_cache_last_modified()",
			"contents": "http_cache_last_modified()",
			"kind": "function"
		},
		{
			"trigger": "http_chunked_decode()",
			"contents": "http_chunked_decode(${1:encoded})",
			"kind": "function"
		},
		{
			"trigger": "http_date()",
			"contents": "http_date()",
			"kind": "function"
		},
		{
			"trigger": "http_deflate()",
			"contents": "http_deflate(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "http_get()",
			"contents": "http_get(${1:url})",
			"kind": "function"
		},
		{
			"trigger": "http_get_request_body()",
			"contents": "http_get_request_body()",
			"kind": "function"
		},
		{
			"trigger": "http_get_request_body_stream()",
			"contents": "http_get_request_body_stream()",
			"kind": "function"
		},
		{
			"trigger": "http_get_request_headers()",
			"contents": "http_get_request_headers()",
			"kind": "function"
		},
		{
			"trigger": "http_head()",
			"contents": "http_head(${1:url})",
			"kind": "function"
		},
		{
			"trigger": "http_inflate()",
			"contents": "http_inflate(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "http_match_etag()",
			"contents": "http_match_etag(${1:etag})",
			"kind": "function"
		},
		{
			"trigger": "http_match_modified()",
			"contents": "http_match_modified()",
			"kind": "function"
		},
		{
			"trigger": "http_match_request_header()",
			"contents": "http_match_request_header(${1:header}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "http_negotiate_charset()",
			"contents": "http_negotiate_charset(${1:supported})",
			"kind": "function"
		},
		{
			"trigger": "http_negotiate_content_type()",
			"contents": "http_negotiate_content_type(${1:supported})",
			"kind": "function"
		},
		{
			"trigger": "http_negotiate_language()",
			"contents": "http_negotiate_language(${1:supported})",
			"kind": "function"
		},
		{
			"trigger": "http_parse_cookie()",
			"contents": "http_parse_cookie(${1:cookie})",
			"kind": "function"
		},
		{
			"trigger": "http_parse_headers()",
			"contents": "http_parse_headers(${1:header})",
			"kind": "function"
		},
		{
			"trigger": "http_parse_message()",
			"contents": "http_parse_message(${1:message})",
			"kind": "function"
		},
		{
			"trigger": "http_parse_params()",
			"contents": "http_parse_params(${1:param})",
			"kind": "function"
		},
		{
			"trigger": "http_persistent_handles_clean()",
			"contents": "http_persistent_handles_clean()",
			"kind": "function"
		},
		{
			"trigger": "http_persistent_handles_count()",
			"contents": "http_persistent_handles_count()",
			"kind": "function"
		},
		{
			"trigger": "http_persistent_handles_ident()",
			"contents": "http_persistent_handles_ident()",
			"kind": "function"
		},
		{
			"trigger": "http_post_data()",
			"contents": "http_post_data(${1:url}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "http_post_fields()",
			"contents": "http_post_fields(${1:url}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "http_put_data()",
			"contents": "http_put_data(${1:url}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "http_put_file()",
			"contents": "http_put_file(${1:url}, ${2:file})",
			"kind": "function"
		},
		{
			"trigger": "http_put_stream()",
			"contents": "http_put_stream(${1:url}, ${2:stream})",
			"kind": "function"
		},
		{
			"trigger": "http_redirect()",
			"contents": "http_redirect()",
			"kind": "function"
		},
		{
			"trigger": "http_request()",
			"contents": "http_request(${1:method}, ${2:url})",
			"kind": "function"
		},
		{
			"trigger": "http_request_body_encode()",
			"contents": "http_request_body_encode(${1:fields}, ${2:files})",
			"kind": "function"
		},
		{
			"trigger": "http_request_method_exists()",
			"contents": "http_request_method_exists(${1:method})",
			"kind": "function"
		},
		{
			"trigger": "http_request_method_name()",
			"contents": "http_request_method_name(${1:method})",
			"kind": "function"
		},
		{
			"trigger": "http_request_method_register()",
			"contents": "http_request_method_register(${1:method})",
			"kind": "function"
		},
		{
			"trigger": "http_request_method_unregister()",
			"contents": "http_request_method_unregister(${1:method})",
			"kind": "function"
		},
		{
			"trigger": "http_response_code()",
			"contents": "http_response_code(${1:code})",
			"kind": "function"
		},
		{
			"trigger": "http_send_content_disposition()",
			"contents": "http_send_content_disposition(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "http_send_content_type()",
			"contents": "http_send_content_type()",
			"kind": "function"
		},
		{
			"trigger": "http_send_data()",
			"contents": "http_send_data(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "http_send_file()",
			"contents": "http_send_file(${1:file})",
			"kind": "function"
		},
		{
			"trigger": "http_send_last_modified()",
			"contents": "http_send_last_modified()",
			"kind": "function"
		},
		{
			"trigger": "http_send_status()",
			"contents": "http_send_status(${1:status})",
			"kind": "function"
		},
		{
			"trigger": "http_send_stream()",
			"contents": "http_send_stream(${1:stream})",
			"kind": "function"
		},
		{
			"trigger": "http_support()",
			"contents": "http_support()",
			"kind": "function"
		},
		{
			"trigger": "http_throttle()",
			"contents": "http_throttle(${1:sec})",
			"kind": "function"
		},
		{
			"trigger": "hw_Array2Objrec()",
			"contents": "hw_Array2Objrec(${1:object_array})",
			"kind": "function"
		},
		{
			"trigger": "hw_changeobject()",
			"contents": "hw_changeobject(${1:link}, ${2:objid}, ${3:attributes})",
			"kind": "function"
		},
		{
			"trigger": "hw_Children()",
			"contents": "hw_Children(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_ChildrenObj()",
			"contents": "hw_ChildrenObj(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_Close()",
			"contents": "hw_Close(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "hw_Connect()",
			"contents": "hw_Connect(${1:host}, ${2:port})",
			"kind": "function"
		},
		{
			"trigger": "hw_connection_info()",
			"contents": "hw_connection_info(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "hw_cp()",
			"contents": "hw_cp(${1:connection}, ${2:object_id_array}, ${3:destination_id})",
			"kind": "function"
		},
		{
			"trigger": "hw_Deleteobject()",
			"contents": "hw_Deleteobject(${1:connection}, ${2:object_to_delete})",
			"kind": "function"
		},
		{
			"trigger": "hw_DocByAnchor()",
			"contents": "hw_DocByAnchor(${1:connection}, ${2:anchorID})",
			"kind": "function"
		},
		{
			"trigger": "hw_DocByAnchorObj()",
			"contents": "hw_DocByAnchorObj(${1:connection}, ${2:anchorID})",
			"kind": "function"
		},
		{
			"trigger": "hw_Document_Attributes()",
			"contents": "hw_Document_Attributes(${1:hw_document})",
			"kind": "function"
		},
		{
			"trigger": "hw_Document_BodyTag()",
			"contents": "hw_Document_BodyTag(${1:hw_document})",
			"kind": "function"
		},
		{
			"trigger": "hw_Document_Content()",
			"contents": "hw_Document_Content(${1:hw_document})",
			"kind": "function"
		},
		{
			"trigger": "hw_Document_SetContent()",
			"contents": "hw_Document_SetContent(${1:hw_document}, ${2:content})",
			"kind": "function"
		},
		{
			"trigger": "hw_Document_Size()",
			"contents": "hw_Document_Size(${1:hw_document})",
			"kind": "function"
		},
		{
			"trigger": "hw_dummy()",
			"contents": "hw_dummy(${1:link}, ${2:id}, ${3:msgid})",
			"kind": "function"
		},
		{
			"trigger": "hw_EditText()",
			"contents": "hw_EditText(${1:connection}, ${2:hw_document})",
			"kind": "function"
		},
		{
			"trigger": "hw_Error()",
			"contents": "hw_Error(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "hw_ErrorMsg()",
			"contents": "hw_ErrorMsg(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "hw_Free_Document()",
			"contents": "hw_Free_Document(${1:hw_document})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetAnchors()",
			"contents": "hw_GetAnchors(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetAnchorsObj()",
			"contents": "hw_GetAnchorsObj(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetAndLock()",
			"contents": "hw_GetAndLock(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetChildColl()",
			"contents": "hw_GetChildColl(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetChildCollObj()",
			"contents": "hw_GetChildCollObj(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetChildDocColl()",
			"contents": "hw_GetChildDocColl(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetChildDocCollObj()",
			"contents": "hw_GetChildDocCollObj(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetObject()",
			"contents": "hw_GetObject(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetObjectByQuery()",
			"contents": "hw_GetObjectByQuery(${1:connection}, ${2:query}, ${3:max_hits})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetObjectByQueryColl()",
			"contents": "hw_GetObjectByQueryColl(${1:connection}, ${2:objectID}, ${3:query}, ${4:max_hits})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetObjectByQueryCollObj()",
			"contents": "hw_GetObjectByQueryCollObj(${1:connection}, ${2:objectID}, ${3:query}, ${4:max_hits})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetObjectByQueryObj()",
			"contents": "hw_GetObjectByQueryObj(${1:connection}, ${2:query}, ${3:max_hits})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetParents()",
			"contents": "hw_GetParents(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetParentsObj()",
			"contents": "hw_GetParentsObj(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_getrellink()",
			"contents": "hw_getrellink(${1:link}, ${2:rootid}, ${3:sourceid}, ${4:destid})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetRemote()",
			"contents": "hw_GetRemote(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_getremotechildren()",
			"contents": "hw_getremotechildren(${1:connection}, ${2:object_record})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetSrcByDestObj()",
			"contents": "hw_GetSrcByDestObj(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_GetText()",
			"contents": "hw_GetText(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_getusername()",
			"contents": "hw_getusername(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "hw_Identify()",
			"contents": "hw_Identify(${1:link}, ${2:username}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "hw_InCollections()",
			"contents": "hw_InCollections(${1:connection}, ${2:object_id_array}, ${3:collection_id_array}, ${4:return_collections})",
			"kind": "function"
		},
		{
			"trigger": "hw_Info()",
			"contents": "hw_Info(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "hw_InsColl()",
			"contents": "hw_InsColl(${1:connection}, ${2:objectID}, ${3:object_array})",
			"kind": "function"
		},
		{
			"trigger": "hw_InsDoc()",
			"contents": "hw_InsDoc(${1:connection}, ${2:parentID}, ${3:object_record})",
			"kind": "function"
		},
		{
			"trigger": "hw_insertanchors()",
			"contents": "hw_insertanchors(${1:hwdoc}, ${2:anchorecs}, ${3:dest})",
			"kind": "function"
		},
		{
			"trigger": "hw_InsertDocument()",
			"contents": "hw_InsertDocument(${1:connection}, ${2:parent_id}, ${3:hw_document})",
			"kind": "function"
		},
		{
			"trigger": "hw_InsertObject()",
			"contents": "hw_InsertObject(${1:connection}, ${2:object_rec}, ${3:parameter})",
			"kind": "function"
		},
		{
			"trigger": "hw_mapid()",
			"contents": "hw_mapid(${1:connection}, ${2:server_id}, ${3:object_id})",
			"kind": "function"
		},
		{
			"trigger": "hw_Modifyobject()",
			"contents": "hw_Modifyobject(${1:connection}, ${2:object_to_change}, ${3:remove}, ${4:add})",
			"kind": "function"
		},
		{
			"trigger": "hw_mv()",
			"contents": "hw_mv(${1:connection}, ${2:object_id_array}, ${3:source_id}, ${4:destination_id})",
			"kind": "function"
		},
		{
			"trigger": "hw_New_Document()",
			"contents": "hw_New_Document(${1:object_record}, ${2:document_data}, ${3:document_size})",
			"kind": "function"
		},
		{
			"trigger": "hw_objrec2array()",
			"contents": "hw_objrec2array(${1:object_record})",
			"kind": "function"
		},
		{
			"trigger": "hw_Output_Document()",
			"contents": "hw_Output_Document(${1:hw_document})",
			"kind": "function"
		},
		{
			"trigger": "hw_pConnect()",
			"contents": "hw_pConnect(${1:host}, ${2:port})",
			"kind": "function"
		},
		{
			"trigger": "hw_PipeDocument()",
			"contents": "hw_PipeDocument(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_Root()",
			"contents": "hw_Root()",
			"kind": "function"
		},
		{
			"trigger": "hw_setlinkroot()",
			"contents": "hw_setlinkroot(${1:link}, ${2:rootid})",
			"kind": "function"
		},
		{
			"trigger": "hw_stat()",
			"contents": "hw_stat(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "hw_Unlock()",
			"contents": "hw_Unlock(${1:connection}, ${2:objectID})",
			"kind": "function"
		},
		{
			"trigger": "hw_Who()",
			"contents": "hw_Who(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "hw_api_attribute()",
			"contents": "hw_api_attribute()",
			"kind": "function"
		},
		{
			"trigger": "hwapi_hgcsp()",
			"contents": "hwapi_hgcsp(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "hw_api_content()",
			"contents": "hw_api_content(${1:content}, ${2:mimetype})",
			"kind": "function"
		},
		{
			"trigger": "hw_api_object()",
			"contents": "hw_api_object(${1:parameter})",
			"kind": "function"
		},
		{
			"trigger": "hypot()",
			"contents": "hypot(${1:x}, ${2:y})",
			"kind": "function"
		},
		{
			"trigger": "ibase_add_user()",
			"contents": "ibase_add_user(${1:service_handle}, ${2:user_name}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "ibase_affected_rows()",
			"contents": "ibase_affected_rows()",
			"kind": "function"
		},
		{
			"trigger": "ibase_backup()",
			"contents": "ibase_backup(${1:service_handle}, ${2:source_db}, ${3:dest_file})",
			"kind": "function"
		},
		{
			"trigger": "ibase_blob_add()",
			"contents": "ibase_blob_add(${1:blob_handle}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "ibase_blob_cancel()",
			"contents": "ibase_blob_cancel(${1:blob_handle})",
			"kind": "function"
		},
		{
			"trigger": "ibase_blob_close()",
			"contents": "ibase_blob_close(${1:blob_handle})",
			"kind": "function"
		},
		{
			"trigger": "ibase_blob_create()",
			"contents": "ibase_blob_create()",
			"kind": "function"
		},
		{
			"trigger": "ibase_blob_echo()",
			"contents": "ibase_blob_echo(${1:blob_id})",
			"kind": "function"
		},
		{
			"trigger": "ibase_blob_get()",
			"contents": "ibase_blob_get(${1:blob_handle}, ${2:len})",
			"kind": "function"
		},
		{
			"trigger": "ibase_blob_import()",
			"contents": "ibase_blob_import(${1:link_identifier}, ${2:file_handle})",
			"kind": "function"
		},
		{
			"trigger": "ibase_blob_info()",
			"contents": "ibase_blob_info(${1:link_identifier}, ${2:blob_id})",
			"kind": "function"
		},
		{
			"trigger": "ibase_blob_open()",
			"contents": "ibase_blob_open(${1:link_identifier}, ${2:blob_id})",
			"kind": "function"
		},
		{
			"trigger": "ibase_close()",
			"contents": "ibase_close()",
			"kind": "function"
		},
		{
			"trigger": "ibase_commit()",
			"contents": "ibase_commit()",
			"kind": "function"
		},
		{
			"trigger": "ibase_commit_ret()",
			"contents": "ibase_commit_ret()",
			"kind": "function"
		},
		{
			"trigger": "ibase_connect()",
			"contents": "ibase_connect()",
			"kind": "function"
		},
		{
			"trigger": "ibase_db_info()",
			"contents": "ibase_db_info(${1:service_handle}, ${2:db}, ${3:action})",
			"kind": "function"
		},
		{
			"trigger": "ibase_delete_user()",
			"contents": "ibase_delete_user(${1:service_handle}, ${2:user_name})",
			"kind": "function"
		},
		{
			"trigger": "ibase_drop_db()",
			"contents": "ibase_drop_db()",
			"kind": "function"
		},
		{
			"trigger": "ibase_errcode()",
			"contents": "ibase_errcode()",
			"kind": "function"
		},
		{
			"trigger": "ibase_errmsg()",
			"contents": "ibase_errmsg()",
			"kind": "function"
		},
		{
			"trigger": "ibase_execute()",
			"contents": "ibase_execute(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "ibase_fetch_assoc()",
			"contents": "ibase_fetch_assoc(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ibase_fetch_object()",
			"contents": "ibase_fetch_object(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ibase_fetch_row()",
			"contents": "ibase_fetch_row(${1:result_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ibase_field_info()",
			"contents": "ibase_field_info(${1:result}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "ibase_free_event_handler()",
			"contents": "ibase_free_event_handler(${1:event})",
			"kind": "function"
		},
		{
			"trigger": "ibase_free_query()",
			"contents": "ibase_free_query(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "ibase_free_result()",
			"contents": "ibase_free_result(${1:result_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ibase_gen_id()",
			"contents": "ibase_gen_id(${1:generator})",
			"kind": "function"
		},
		{
			"trigger": "ibase_maintain_db()",
			"contents": "ibase_maintain_db(${1:service_handle}, ${2:db}, ${3:action})",
			"kind": "function"
		},
		{
			"trigger": "ibase_modify_user()",
			"contents": "ibase_modify_user(${1:service_handle}, ${2:user_name}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "ibase_name_result()",
			"contents": "ibase_name_result(${1:result}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "ibase_num_fields()",
			"contents": "ibase_num_fields(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ibase_num_params()",
			"contents": "ibase_num_params(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "ibase_param_info()",
			"contents": "ibase_param_info(${1:query}, ${2:param_number})",
			"kind": "function"
		},
		{
			"trigger": "ibase_pconnect()",
			"contents": "ibase_pconnect()",
			"kind": "function"
		},
		{
			"trigger": "ibase_prepare()",
			"contents": "ibase_prepare(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "ibase_query()",
			"contents": "ibase_query()",
			"kind": "function"
		},
		{
			"trigger": "ibase_restore()",
			"contents": "ibase_restore(${1:service_handle}, ${2:source_file}, ${3:dest_db})",
			"kind": "function"
		},
		{
			"trigger": "ibase_rollback()",
			"contents": "ibase_rollback()",
			"kind": "function"
		},
		{
			"trigger": "ibase_rollback_ret()",
			"contents": "ibase_rollback_ret()",
			"kind": "function"
		},
		{
			"trigger": "ibase_server_info()",
			"contents": "ibase_server_info(${1:service_handle}, ${2:action})",
			"kind": "function"
		},
		{
			"trigger": "ibase_service_attach()",
			"contents": "ibase_service_attach(${1:host}, ${2:dba_username}, ${3:dba_password})",
			"kind": "function"
		},
		{
			"trigger": "ibase_service_detach()",
			"contents": "ibase_service_detach(${1:service_handle})",
			"kind": "function"
		},
		{
			"trigger": "ibase_set_event_handler()",
			"contents": "ibase_set_event_handler(${1:event_handler}, ${2:event_name1})",
			"kind": "function"
		},
		{
			"trigger": "ibase_timefmt()",
			"contents": "ibase_timefmt(${1:format})",
			"kind": "function"
		},
		{
			"trigger": "ibase_trans()",
			"contents": "ibase_trans()",
			"kind": "function"
		},
		{
			"trigger": "ibase_wait_event()",
			"contents": "ibase_wait_event(${1:event_name1})",
			"kind": "function"
		},
		{
			"trigger": "iconv()",
			"contents": "iconv(${1:in_charset}, ${2:out_charset}, ${3:str})",
			"kind": "function"
		},
		{
			"trigger": "iconv_get_encoding()",
			"contents": "iconv_get_encoding()",
			"kind": "function"
		},
		{
			"trigger": "iconv_mime_decode()",
			"contents": "iconv_mime_decode(${1:encoded_header})",
			"kind": "function"
		},
		{
			"trigger": "iconv_mime_decode_headers()",
			"contents": "iconv_mime_decode_headers(${1:encoded_headers})",
			"kind": "function"
		},
		{
			"trigger": "iconv_mime_encode()",
			"contents": "iconv_mime_encode(${1:field_name}, ${2:field_value})",
			"kind": "function"
		},
		{
			"trigger": "iconv_set_encoding()",
			"contents": "iconv_set_encoding(${1:type}, ${2:charset})",
			"kind": "function"
		},
		{
			"trigger": "iconv_strlen()",
			"contents": "iconv_strlen(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "iconv_strpos()",
			"contents": "iconv_strpos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "iconv_strrpos()",
			"contents": "iconv_strrpos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "iconv_substr()",
			"contents": "iconv_substr(${1:str}, ${2:offset})",
			"kind": "function"
		},
		{
			"trigger": "id3_get_frame_long_name()",
			"contents": "id3_get_frame_long_name(${1:frameId})",
			"kind": "function"
		},
		{
			"trigger": "id3_get_frame_short_name()",
			"contents": "id3_get_frame_short_name(${1:frameId})",
			"kind": "function"
		},
		{
			"trigger": "id3_get_genre_id()",
			"contents": "id3_get_genre_id(${1:genre})",
			"kind": "function"
		},
		{
			"trigger": "id3_get_genre_list()",
			"contents": "id3_get_genre_list()",
			"kind": "function"
		},
		{
			"trigger": "id3_get_genre_name()",
			"contents": "id3_get_genre_name(${1:genre_id})",
			"kind": "function"
		},
		{
			"trigger": "id3_get_tag()",
			"contents": "id3_get_tag(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "id3_get_version()",
			"contents": "id3_get_version(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "id3_remove_tag()",
			"contents": "id3_remove_tag(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "id3_set_tag()",
			"contents": "id3_set_tag(${1:filename}, ${2:tag})",
			"kind": "function"
		},
		{
			"trigger": "idate()",
			"contents": "idate(${1:format})",
			"kind": "function"
		},
		{
			"trigger": "idn_to_ascii()",
			"contents": "idn_to_ascii(${1:domain})",
			"kind": "function"
		},
		{
			"trigger": "idn_to_unicode()",
			"contents": "idn_to_unicode()",
			"kind": "function"
		},
		{
			"trigger": "idn_to_utf8()",
			"contents": "idn_to_utf8(${1:domain})",
			"kind": "function"
		},
		{
			"trigger": "ifx_affected_rows()",
			"contents": "ifx_affected_rows(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ifx_blobinfile_mode()",
			"contents": "ifx_blobinfile_mode(${1:mode})",
			"kind": "function"
		},
		{
			"trigger": "ifx_byteasvarchar()",
			"contents": "ifx_byteasvarchar(${1:mode})",
			"kind": "function"
		},
		{
			"trigger": "ifx_close()",
			"contents": "ifx_close()",
			"kind": "function"
		},
		{
			"trigger": "ifx_connect()",
			"contents": "ifx_connect()",
			"kind": "function"
		},
		{
			"trigger": "ifx_copy_blob()",
			"contents": "ifx_copy_blob(${1:bid})",
			"kind": "function"
		},
		{
			"trigger": "ifx_create_blob()",
			"contents": "ifx_create_blob(${1:type}, ${2:mode}, ${3:param})",
			"kind": "function"
		},
		{
			"trigger": "ifx_create_char()",
			"contents": "ifx_create_char(${1:param})",
			"kind": "function"
		},
		{
			"trigger": "ifx_do()",
			"contents": "ifx_do(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ifx_error()",
			"contents": "ifx_error()",
			"kind": "function"
		},
		{
			"trigger": "ifx_errormsg()",
			"contents": "ifx_errormsg()",
			"kind": "function"
		},
		{
			"trigger": "ifx_fetch_row()",
			"contents": "ifx_fetch_row(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ifx_fieldproperties()",
			"contents": "ifx_fieldproperties(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ifx_fieldtypes()",
			"contents": "ifx_fieldtypes(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ifx_free_blob()",
			"contents": "ifx_free_blob(${1:bid})",
			"kind": "function"
		},
		{
			"trigger": "ifx_free_char()",
			"contents": "ifx_free_char(${1:bid})",
			"kind": "function"
		},
		{
			"trigger": "ifx_free_result()",
			"contents": "ifx_free_result(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ifx_get_blob()",
			"contents": "ifx_get_blob(${1:bid})",
			"kind": "function"
		},
		{
			"trigger": "ifx_get_char()",
			"contents": "ifx_get_char(${1:bid})",
			"kind": "function"
		},
		{
			"trigger": "ifx_getsqlca()",
			"contents": "ifx_getsqlca(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ifx_htmltbl_result()",
			"contents": "ifx_htmltbl_result(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ifx_nullformat()",
			"contents": "ifx_nullformat(${1:mode})",
			"kind": "function"
		},
		{
			"trigger": "ifx_num_fields()",
			"contents": "ifx_num_fields(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ifx_num_rows()",
			"contents": "ifx_num_rows(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ifx_pconnect()",
			"contents": "ifx_pconnect()",
			"kind": "function"
		},
		{
			"trigger": "ifx_prepare()",
			"contents": "ifx_prepare(${1:query}, ${2:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ifx_query()",
			"contents": "ifx_query(${1:query}, ${2:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ifx_textasvarchar()",
			"contents": "ifx_textasvarchar(${1:mode})",
			"kind": "function"
		},
		{
			"trigger": "ifx_update_blob()",
			"contents": "ifx_update_blob(${1:bid}, ${2:content})",
			"kind": "function"
		},
		{
			"trigger": "ifx_update_char()",
			"contents": "ifx_update_char(${1:bid}, ${2:content})",
			"kind": "function"
		},
		{
			"trigger": "ifxus_close_slob()",
			"contents": "ifxus_close_slob(${1:bid})",
			"kind": "function"
		},
		{
			"trigger": "ifxus_create_slob()",
			"contents": "ifxus_create_slob(${1:mode})",
			"kind": "function"
		},
		{
			"trigger": "ifxus_free_slob()",
			"contents": "ifxus_free_slob(${1:bid})",
			"kind": "function"
		},
		{
			"trigger": "ifxus_open_slob()",
			"contents": "ifxus_open_slob(${1:bid}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "ifxus_read_slob()",
			"contents": "ifxus_read_slob(${1:bid}, ${2:nbytes})",
			"kind": "function"
		},
		{
			"trigger": "ifxus_seek_slob()",
			"contents": "ifxus_seek_slob(${1:bid}, ${2:mode}, ${3:offset})",
			"kind": "function"
		},
		{
			"trigger": "ifxus_tell_slob()",
			"contents": "ifxus_tell_slob(${1:bid})",
			"kind": "function"
		},
		{
			"trigger": "ifxus_write_slob()",
			"contents": "ifxus_write_slob(${1:bid}, ${2:content})",
			"kind": "function"
		},
		{
			"trigger": "ignore_user_abort()",
			"contents": "ignore_user_abort()",
			"kind": "function"
		},
		{
			"trigger": "iis_add_server()",
			"contents": "iis_add_server(${1:path}, ${2:comment}, ${3:server_ip}, ${4:port}, ${5:host_name}, ${6:rights}, ${7:start_server})",
			"kind": "function"
		},
		{
			"trigger": "iis_get_dir_security()",
			"contents": "iis_get_dir_security(${1:server_instance}, ${2:virtual_path})",
			"kind": "function"
		},
		{
			"trigger": "iis_get_script_map()",
			"contents": "iis_get_script_map(${1:server_instance}, ${2:virtual_path}, ${3:script_extension})",
			"kind": "function"
		},
		{
			"trigger": "iis_get_server_by_comment()",
			"contents": "iis_get_server_by_comment(${1:comment})",
			"kind": "function"
		},
		{
			"trigger": "iis_get_server_by_path()",
			"contents": "iis_get_server_by_path(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "iis_get_server_rights()",
			"contents": "iis_get_server_rights(${1:server_instance}, ${2:virtual_path})",
			"kind": "function"
		},
		{
			"trigger": "iis_get_service_state()",
			"contents": "iis_get_service_state(${1:service_id})",
			"kind": "function"
		},
		{
			"trigger": "iis_remove_server()",
			"contents": "iis_remove_server(${1:server_instance})",
			"kind": "function"
		},
		{
			"trigger": "iis_set_app_settings()",
			"contents": "iis_set_app_settings(${1:server_instance}, ${2:virtual_path}, ${3:application_scope})",
			"kind": "function"
		},
		{
			"trigger": "iis_set_dir_security()",
			"contents": "iis_set_dir_security(${1:server_instance}, ${2:virtual_path}, ${3:directory_flags})",
			"kind": "function"
		},
		{
			"trigger": "iis_set_script_map()",
			"contents": "iis_set_script_map(${1:server_instance}, ${2:virtual_path}, ${3:script_extension}, ${4:engine_path}, ${5:allow_scripting})",
			"kind": "function"
		},
		{
			"trigger": "iis_set_server_rights()",
			"contents": "iis_set_server_rights(${1:server_instance}, ${2:virtual_path}, ${3:directory_flags})",
			"kind": "function"
		},
		{
			"trigger": "iis_start_server()",
			"contents": "iis_start_server(${1:server_instance})",
			"kind": "function"
		},
		{
			"trigger": "iis_start_service()",
			"contents": "iis_start_service(${1:service_id})",
			"kind": "function"
		},
		{
			"trigger": "iis_stop_server()",
			"contents": "iis_stop_server(${1:server_instance})",
			"kind": "function"
		},
		{
			"trigger": "iis_stop_service()",
			"contents": "iis_stop_service(${1:service_id})",
			"kind": "function"
		},
		{
			"trigger": "image2wbmp()",
			"contents": "image2wbmp(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "image_type_to_extension()",
			"contents": "image_type_to_extension(${1:imagetype})",
			"kind": "function"
		},
		{
			"trigger": "image_type_to_mime_type()",
			"contents": "image_type_to_mime_type(${1:imagetype})",
			"kind": "function"
		},
		{
			"trigger": "imagealphablending()",
			"contents": "imagealphablending(${1:image}, ${2:blendmode})",
			"kind": "function"
		},
		{
			"trigger": "imageantialias()",
			"contents": "imageantialias(${1:image}, ${2:enabled})",
			"kind": "function"
		},
		{
			"trigger": "imagearc()",
			"contents": "imagearc(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:start}, ${7:end}, ${8:color})",
			"kind": "function"
		},
		{
			"trigger": "imagechar()",
			"contents": "imagechar(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:c}, ${6:color})",
			"kind": "function"
		},
		{
			"trigger": "imagecharup()",
			"contents": "imagecharup(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:c}, ${6:color})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorallocate()",
			"contents": "imagecolorallocate(${1:image}, ${2:red}, ${3:green}, ${4:blue})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorallocatealpha()",
			"contents": "imagecolorallocatealpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorat()",
			"contents": "imagecolorat(${1:image}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorclosest()",
			"contents": "imagecolorclosest(${1:image}, ${2:red}, ${3:green}, ${4:blue})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorclosestalpha()",
			"contents": "imagecolorclosestalpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorclosesthwb()",
			"contents": "imagecolorclosesthwb(${1:image}, ${2:red}, ${3:green}, ${4:blue})",
			"kind": "function"
		},
		{
			"trigger": "imagecolordeallocate()",
			"contents": "imagecolordeallocate(${1:image}, ${2:color})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorexact()",
			"contents": "imagecolorexact(${1:image}, ${2:red}, ${3:green}, ${4:blue})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorexactalpha()",
			"contents": "imagecolorexactalpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
			"kind": "function"
		},
		{
			"trigger": "imagecolormatch()",
			"contents": "imagecolormatch(${1:image1}, ${2:image2})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorresolve()",
			"contents": "imagecolorresolve(${1:image}, ${2:red}, ${3:green}, ${4:blue})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorresolvealpha()",
			"contents": "imagecolorresolvealpha(${1:image}, ${2:red}, ${3:green}, ${4:blue}, ${5:alpha})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorset()",
			"contents": "imagecolorset(${1:image}, ${2:index}, ${3:red}, ${4:green}, ${5:blue})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorsforindex()",
			"contents": "imagecolorsforindex(${1:image}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "imagecolorstotal()",
			"contents": "imagecolorstotal(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imagecolortransparent()",
			"contents": "imagecolortransparent(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imageconvolution()",
			"contents": "imageconvolution(${1:image}, ${2:matrix}, ${3:div}, ${4:offset})",
			"kind": "function"
		},
		{
			"trigger": "imagecopy()",
			"contents": "imagecopy(${1:dst_im}, ${2:src_im}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:src_w}, ${8:src_h})",
			"kind": "function"
		},
		{
			"trigger": "imagecopymerge()",
			"contents": "imagecopymerge(${1:dst_im}, ${2:src_im}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:src_w}, ${8:src_h}, ${9:pct})",
			"kind": "function"
		},
		{
			"trigger": "imagecopymergegray()",
			"contents": "imagecopymergegray(${1:dst_im}, ${2:src_im}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:src_w}, ${8:src_h}, ${9:pct})",
			"kind": "function"
		},
		{
			"trigger": "imagecopyresampled()",
			"contents": "imagecopyresampled(${1:dst_image}, ${2:src_image}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:dst_w}, ${8:dst_h}, ${9:src_w}, ${10:src_h})",
			"kind": "function"
		},
		{
			"trigger": "imagecopyresized()",
			"contents": "imagecopyresized(${1:dst_image}, ${2:src_image}, ${3:dst_x}, ${4:dst_y}, ${5:src_x}, ${6:src_y}, ${7:dst_w}, ${8:dst_h}, ${9:src_w}, ${10:src_h})",
			"kind": "function"
		},
		{
			"trigger": "imagecreate()",
			"contents": "imagecreate(${1:width}, ${2:height})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatefromgd()",
			"contents": "imagecreatefromgd(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatefromgd2()",
			"contents": "imagecreatefromgd2(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatefromgd2part()",
			"contents": "imagecreatefromgd2part(${1:filename}, ${2:srcX}, ${3:srcY}, ${4:width}, ${5:height})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatefromgif()",
			"contents": "imagecreatefromgif(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatefromjpeg()",
			"contents": "imagecreatefromjpeg(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatefrompng()",
			"contents": "imagecreatefrompng(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatefromstring()",
			"contents": "imagecreatefromstring(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatefromwbmp()",
			"contents": "imagecreatefromwbmp(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatefromxbm()",
			"contents": "imagecreatefromxbm(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatefromxpm()",
			"contents": "imagecreatefromxpm(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "imagecreatetruecolor()",
			"contents": "imagecreatetruecolor(${1:width}, ${2:height})",
			"kind": "function"
		},
		{
			"trigger": "imagedashedline()",
			"contents": "imagedashedline(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})",
			"kind": "function"
		},
		{
			"trigger": "imagedestroy()",
			"contents": "imagedestroy(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imageellipse()",
			"contents": "imageellipse(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:color})",
			"kind": "function"
		},
		{
			"trigger": "imagefill()",
			"contents": "imagefill(${1:image}, ${2:x}, ${3:y}, ${4:color})",
			"kind": "function"
		},
		{
			"trigger": "imagefilledarc()",
			"contents": "imagefilledarc(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:start}, ${7:end}, ${8:color}, ${9:style})",
			"kind": "function"
		},
		{
			"trigger": "imagefilledellipse()",
			"contents": "imagefilledellipse(${1:image}, ${2:cx}, ${3:cy}, ${4:width}, ${5:height}, ${6:color})",
			"kind": "function"
		},
		{
			"trigger": "imagefilledpolygon()",
			"contents": "imagefilledpolygon(${1:image}, ${2:points}, ${3:num_points}, ${4:color})",
			"kind": "function"
		},
		{
			"trigger": "imagefilledrectangle()",
			"contents": "imagefilledrectangle(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})",
			"kind": "function"
		},
		{
			"trigger": "imagefilltoborder()",
			"contents": "imagefilltoborder(${1:image}, ${2:x}, ${3:y}, ${4:border}, ${5:color})",
			"kind": "function"
		},
		{
			"trigger": "imagefilter()",
			"contents": "imagefilter(${1:image}, ${2:filtertype})",
			"kind": "function"
		},
		{
			"trigger": "imagefontheight()",
			"contents": "imagefontheight(${1:font})",
			"kind": "function"
		},
		{
			"trigger": "imagefontwidth()",
			"contents": "imagefontwidth(${1:font})",
			"kind": "function"
		},
		{
			"trigger": "imageftbbox()",
			"contents": "imageftbbox(${1:size}, ${2:angle}, ${3:fontfile}, ${4:text})",
			"kind": "function"
		},
		{
			"trigger": "imagefttext()",
			"contents": "imagefttext(${1:image}, ${2:size}, ${3:angle}, ${4:x}, ${5:y}, ${6:color}, ${7:fontfile}, ${8:text})",
			"kind": "function"
		},
		{
			"trigger": "imagegammacorrect()",
			"contents": "imagegammacorrect(${1:image}, ${2:inputgamma}, ${3:outputgamma})",
			"kind": "function"
		},
		{
			"trigger": "imagegd()",
			"contents": "imagegd(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imagegd2()",
			"contents": "imagegd2(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imagegif()",
			"contents": "imagegif(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imagegrabscreen()",
			"contents": "imagegrabscreen()",
			"kind": "function"
		},
		{
			"trigger": "imagegrabwindow()",
			"contents": "imagegrabwindow(${1:window_handle})",
			"kind": "function"
		},
		{
			"trigger": "imageinterlace()",
			"contents": "imageinterlace(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imageistruecolor()",
			"contents": "imageistruecolor(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imagejpeg()",
			"contents": "imagejpeg(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imagelayereffect()",
			"contents": "imagelayereffect(${1:image}, ${2:effect})",
			"kind": "function"
		},
		{
			"trigger": "imageline()",
			"contents": "imageline(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})",
			"kind": "function"
		},
		{
			"trigger": "imageloadfont()",
			"contents": "imageloadfont(${1:file})",
			"kind": "function"
		},
		{
			"trigger": "imagepalettecopy()",
			"contents": "imagepalettecopy(${1:destination}, ${2:source})",
			"kind": "function"
		},
		{
			"trigger": "imagepng()",
			"contents": "imagepng(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imagepolygon()",
			"contents": "imagepolygon(${1:image}, ${2:points}, ${3:num_points}, ${4:color})",
			"kind": "function"
		},
		{
			"trigger": "imagepsbbox()",
			"contents": "imagepsbbox(${1:text}, ${2:font}, ${3:size})",
			"kind": "function"
		},
		{
			"trigger": "imagepsencodefont()",
			"contents": "imagepsencodefont(${1:font_index}, ${2:encodingfile})",
			"kind": "function"
		},
		{
			"trigger": "imagepsextendfont()",
			"contents": "imagepsextendfont(${1:font_index}, ${2:extend})",
			"kind": "function"
		},
		{
			"trigger": "imagepsfreefont()",
			"contents": "imagepsfreefont(${1:font_index})",
			"kind": "function"
		},
		{
			"trigger": "imagepsloadfont()",
			"contents": "imagepsloadfont(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "imagepsslantfont()",
			"contents": "imagepsslantfont(${1:font_index}, ${2:slant})",
			"kind": "function"
		},
		{
			"trigger": "imagepstext()",
			"contents": "imagepstext(${1:image}, ${2:text}, ${3:font_index}, ${4:size}, ${5:foreground}, ${6:background}, ${7:x}, ${8:y})",
			"kind": "function"
		},
		{
			"trigger": "imagerectangle()",
			"contents": "imagerectangle(${1:image}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:color})",
			"kind": "function"
		},
		{
			"trigger": "imagerotate()",
			"contents": "imagerotate(${1:image}, ${2:angle}, ${3:bgd_color})",
			"kind": "function"
		},
		{
			"trigger": "imagesavealpha()",
			"contents": "imagesavealpha(${1:image}, ${2:saveflag})",
			"kind": "function"
		},
		{
			"trigger": "imagesetbrush()",
			"contents": "imagesetbrush(${1:image}, ${2:brush})",
			"kind": "function"
		},
		{
			"trigger": "imagesetpixel()",
			"contents": "imagesetpixel(${1:image}, ${2:x}, ${3:y}, ${4:color})",
			"kind": "function"
		},
		{
			"trigger": "imagesetstyle()",
			"contents": "imagesetstyle(${1:image}, ${2:style})",
			"kind": "function"
		},
		{
			"trigger": "imagesetthickness()",
			"contents": "imagesetthickness(${1:image}, ${2:thickness})",
			"kind": "function"
		},
		{
			"trigger": "imagesettile()",
			"contents": "imagesettile(${1:image}, ${2:tile})",
			"kind": "function"
		},
		{
			"trigger": "imagestring()",
			"contents": "imagestring(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:string}, ${6:color})",
			"kind": "function"
		},
		{
			"trigger": "imagestringup()",
			"contents": "imagestringup(${1:image}, ${2:font}, ${3:x}, ${4:y}, ${5:string}, ${6:color})",
			"kind": "function"
		},
		{
			"trigger": "imagesx()",
			"contents": "imagesx(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imagesy()",
			"contents": "imagesy(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imagetruecolortopalette()",
			"contents": "imagetruecolortopalette(${1:image}, ${2:dither}, ${3:ncolors})",
			"kind": "function"
		},
		{
			"trigger": "imagettfbbox()",
			"contents": "imagettfbbox(${1:size}, ${2:angle}, ${3:fontfile}, ${4:text})",
			"kind": "function"
		},
		{
			"trigger": "imagettftext()",
			"contents": "imagettftext(${1:image}, ${2:size}, ${3:angle}, ${4:x}, ${5:y}, ${6:color}, ${7:fontfile}, ${8:text})",
			"kind": "function"
		},
		{
			"trigger": "imagetypes()",
			"contents": "imagetypes()",
			"kind": "function"
		},
		{
			"trigger": "imagewbmp()",
			"contents": "imagewbmp(${1:image})",
			"kind": "function"
		},
		{
			"trigger": "imagexbm()",
			"contents": "imagexbm(${1:image}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "imap_8bit()",
			"contents": "imap_8bit(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "imap_alerts()",
			"contents": "imap_alerts()",
			"kind": "function"
		},
		{
			"trigger": "imap_append()",
			"contents": "imap_append(${1:imap_stream}, ${2:mailbox}, ${3:message})",
			"kind": "function"
		},
		{
			"trigger": "imap_base64()",
			"contents": "imap_base64(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "imap_binary()",
			"contents": "imap_binary(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "imap_body()",
			"contents": "imap_body(${1:imap_stream}, ${2:msg_number})",
			"kind": "function"
		},
		{
			"trigger": "imap_bodystruct()",
			"contents": "imap_bodystruct(${1:imap_stream}, ${2:msg_number}, ${3:section})",
			"kind": "function"
		},
		{
			"trigger": "imap_check()",
			"contents": "imap_check(${1:imap_stream})",
			"kind": "function"
		},
		{
			"trigger": "imap_clearflag_full()",
			"contents": "imap_clearflag_full(${1:imap_stream}, ${2:sequence}, ${3:flag})",
			"kind": "function"
		},
		{
			"trigger": "imap_close()",
			"contents": "imap_close(${1:imap_stream})",
			"kind": "function"
		},
		{
			"trigger": "imap_createmailbox()",
			"contents": "imap_createmailbox(${1:imap_stream}, ${2:mailbox})",
			"kind": "function"
		},
		{
			"trigger": "imap_delete()",
			"contents": "imap_delete(${1:imap_stream}, ${2:msg_number})",
			"kind": "function"
		},
		{
			"trigger": "imap_deletemailbox()",
			"contents": "imap_deletemailbox(${1:imap_stream}, ${2:mailbox})",
			"kind": "function"
		},
		{
			"trigger": "imap_errors()",
			"contents": "imap_errors()",
			"kind": "function"
		},
		{
			"trigger": "imap_expunge()",
			"contents": "imap_expunge(${1:imap_stream})",
			"kind": "function"
		},
		{
			"trigger": "imap_fetch_overview()",
			"contents": "imap_fetch_overview(${1:imap_stream}, ${2:sequence})",
			"kind": "function"
		},
		{
			"trigger": "imap_fetchbody()",
			"contents": "imap_fetchbody(${1:imap_stream}, ${2:msg_number}, ${3:section})",
			"kind": "function"
		},
		{
			"trigger": "imap_fetchheader()",
			"contents": "imap_fetchheader(${1:imap_stream}, ${2:msg_number})",
			"kind": "function"
		},
		{
			"trigger": "imap_fetchstructure()",
			"contents": "imap_fetchstructure(${1:imap_stream}, ${2:msg_number})",
			"kind": "function"
		},
		{
			"trigger": "imap_gc()",
			"contents": "imap_gc(${1:imap_stream}, ${2:caches})",
			"kind": "function"
		},
		{
			"trigger": "imap_get_quota()",
			"contents": "imap_get_quota(${1:imap_stream}, ${2:quota_root})",
			"kind": "function"
		},
		{
			"trigger": "imap_get_quotaroot()",
			"contents": "imap_get_quotaroot(${1:imap_stream}, ${2:quota_root})",
			"kind": "function"
		},
		{
			"trigger": "imap_getacl()",
			"contents": "imap_getacl(${1:imap_stream}, ${2:mailbox})",
			"kind": "function"
		},
		{
			"trigger": "imap_getmailboxes()",
			"contents": "imap_getmailboxes(${1:imap_stream}, ${2:ref}, ${3:pattern})",
			"kind": "function"
		},
		{
			"trigger": "imap_getsubscribed()",
			"contents": "imap_getsubscribed(${1:imap_stream}, ${2:ref}, ${3:pattern})",
			"kind": "function"
		},
		{
			"trigger": "imap_header()",
			"contents": "imap_header()",
			"kind": "function"
		},
		{
			"trigger": "imap_headerinfo()",
			"contents": "imap_headerinfo(${1:imap_stream}, ${2:msg_number})",
			"kind": "function"
		},
		{
			"trigger": "imap_headers()",
			"contents": "imap_headers(${1:imap_stream})",
			"kind": "function"
		},
		{
			"trigger": "imap_last_error()",
			"contents": "imap_last_error()",
			"kind": "function"
		},
		{
			"trigger": "imap_list()",
			"contents": "imap_list(${1:imap_stream}, ${2:ref}, ${3:pattern})",
			"kind": "function"
		},
		{
			"trigger": "imap_listmailbox()",
			"contents": "imap_listmailbox()",
			"kind": "function"
		},
		{
			"trigger": "imap_listscan()",
			"contents": "imap_listscan(${1:imap_stream}, ${2:ref}, ${3:pattern}, ${4:content})",
			"kind": "function"
		},
		{
			"trigger": "imap_listsubscribed()",
			"contents": "imap_listsubscribed()",
			"kind": "function"
		},
		{
			"trigger": "imap_lsub()",
			"contents": "imap_lsub(${1:imap_stream}, ${2:ref}, ${3:pattern})",
			"kind": "function"
		},
		{
			"trigger": "imap_mail()",
			"contents": "imap_mail(${1:to}, ${2:subject}, ${3:message})",
			"kind": "function"
		},
		{
			"trigger": "imap_mail_compose()",
			"contents": "imap_mail_compose(${1:envelope}, ${2:body})",
			"kind": "function"
		},
		{
			"trigger": "imap_mail_copy()",
			"contents": "imap_mail_copy(${1:imap_stream}, ${2:msglist}, ${3:mailbox})",
			"kind": "function"
		},
		{
			"trigger": "imap_mail_move()",
			"contents": "imap_mail_move(${1:imap_stream}, ${2:msglist}, ${3:mailbox})",
			"kind": "function"
		},
		{
			"trigger": "imap_mailboxmsginfo()",
			"contents": "imap_mailboxmsginfo(${1:imap_stream})",
			"kind": "function"
		},
		{
			"trigger": "imap_mime_header_decode()",
			"contents": "imap_mime_header_decode(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "imap_msgno()",
			"contents": "imap_msgno(${1:imap_stream}, ${2:uid})",
			"kind": "function"
		},
		{
			"trigger": "imap_num_msg()",
			"contents": "imap_num_msg(${1:imap_stream})",
			"kind": "function"
		},
		{
			"trigger": "imap_num_recent()",
			"contents": "imap_num_recent(${1:imap_stream})",
			"kind": "function"
		},
		{
			"trigger": "imap_open()",
			"contents": "imap_open(${1:mailbox}, ${2:username}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "imap_ping()",
			"contents": "imap_ping(${1:imap_stream})",
			"kind": "function"
		},
		{
			"trigger": "imap_qprint()",
			"contents": "imap_qprint(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "imap_renamemailbox()",
			"contents": "imap_renamemailbox(${1:imap_stream}, ${2:old_mbox}, ${3:new_mbox})",
			"kind": "function"
		},
		{
			"trigger": "imap_reopen()",
			"contents": "imap_reopen(${1:imap_stream}, ${2:mailbox})",
			"kind": "function"
		},
		{
			"trigger": "imap_rfc822_parse_adrlist()",
			"contents": "imap_rfc822_parse_adrlist(${1:address}, ${2:default_host})",
			"kind": "function"
		},
		{
			"trigger": "imap_rfc822_parse_headers()",
			"contents": "imap_rfc822_parse_headers(${1:headers})",
			"kind": "function"
		},
		{
			"trigger": "imap_rfc822_write_address()",
			"contents": "imap_rfc822_write_address(${1:mailbox}, ${2:host}, ${3:personal})",
			"kind": "function"
		},
		{
			"trigger": "imap_savebody()",
			"contents": "imap_savebody(${1:imap_stream}, ${2:file}, ${3:msg_number})",
			"kind": "function"
		},
		{
			"trigger": "imap_scanmailbox()",
			"contents": "imap_scanmailbox()",
			"kind": "function"
		},
		{
			"trigger": "imap_search()",
			"contents": "imap_search(${1:imap_stream}, ${2:criteria})",
			"kind": "function"
		},
		{
			"trigger": "imap_set_quota()",
			"contents": "imap_set_quota(${1:imap_stream}, ${2:quota_root}, ${3:quota_limit})",
			"kind": "function"
		},
		{
			"trigger": "imap_setacl()",
			"contents": "imap_setacl(${1:imap_stream}, ${2:mailbox}, ${3:id}, ${4:rights})",
			"kind": "function"
		},
		{
			"trigger": "imap_setflag_full()",
			"contents": "imap_setflag_full(${1:imap_stream}, ${2:sequence}, ${3:flag})",
			"kind": "function"
		},
		{
			"trigger": "imap_sort()",
			"contents": "imap_sort(${1:imap_stream}, ${2:criteria}, ${3:reverse})",
			"kind": "function"
		},
		{
			"trigger": "imap_status()",
			"contents": "imap_status(${1:imap_stream}, ${2:mailbox}, ${3:options})",
			"kind": "function"
		},
		{
			"trigger": "imap_subscribe()",
			"contents": "imap_subscribe(${1:imap_stream}, ${2:mailbox})",
			"kind": "function"
		},
		{
			"trigger": "imap_thread()",
			"contents": "imap_thread(${1:imap_stream})",
			"kind": "function"
		},
		{
			"trigger": "imap_timeout()",
			"contents": "imap_timeout(${1:timeout_type})",
			"kind": "function"
		},
		{
			"trigger": "imap_uid()",
			"contents": "imap_uid(${1:imap_stream}, ${2:msg_number})",
			"kind": "function"
		},
		{
			"trigger": "imap_undelete()",
			"contents": "imap_undelete(${1:imap_stream}, ${2:msg_number})",
			"kind": "function"
		},
		{
			"trigger": "imap_unsubscribe()",
			"contents": "imap_unsubscribe(${1:imap_stream}, ${2:mailbox})",
			"kind": "function"
		},
		{
			"trigger": "imap_utf7_decode()",
			"contents": "imap_utf7_decode(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "imap_utf7_encode()",
			"contents": "imap_utf7_encode(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "imap_utf8()",
			"contents": "imap_utf8(${1:mime_encoded_text})",
			"kind": "function"
		},
		{
			"trigger": "implode()",
			"contents": "implode(${1:glue}, ${2:pieces})",
			"kind": "function"
		},
		{
			"trigger": "import_request_variables()",
			"contents": "import_request_variables(${1:types})",
			"kind": "function"
		},
		{
			"trigger": "in_array()",
			"contents": "in_array(${1:needle}, ${2:haystack})",
			"kind": "function"
		},
		{
			"trigger": "()",
			"contents": "()"
		},
		{
			"trigger": "()",
			"contents": "()"
		},
		{
			"trigger": "inclued_get_data()",
			"contents": "inclued_get_data()",
			"kind": "function"
		},
		{
			"trigger": "inet_ntop()",
			"contents": "inet_ntop(${1:in_addr})",
			"kind": "function"
		},
		{
			"trigger": "inet_pton()",
			"contents": "inet_pton(${1:address})",
			"kind": "function"
		},
		{
			"trigger": "ingres_autocommit()",
			"contents": "ingres_autocommit(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "ingres_autocommit_state()",
			"contents": "ingres_autocommit_state(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "ingres_charset()",
			"contents": "ingres_charset(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "ingres_close()",
			"contents": "ingres_close(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "ingres_commit()",
			"contents": "ingres_commit(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "ingres_connect()",
			"contents": "ingres_connect()",
			"kind": "function"
		},
		{
			"trigger": "ingres_cursor()",
			"contents": "ingres_cursor(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ingres_errno()",
			"contents": "ingres_errno()",
			"kind": "function"
		},
		{
			"trigger": "ingres_error()",
			"contents": "ingres_error()",
			"kind": "function"
		},
		{
			"trigger": "ingres_errsqlstate()",
			"contents": "ingres_errsqlstate()",
			"kind": "function"
		},
		{
			"trigger": "ingres_escape_string()",
			"contents": "ingres_escape_string(${1:link}, ${2:source_string})",
			"kind": "function"
		},
		{
			"trigger": "ingres_execute()",
			"contents": "ingres_execute(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ingres_fetch_array()",
			"contents": "ingres_fetch_array(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ingres_fetch_assoc()",
			"contents": "ingres_fetch_assoc(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ingres_fetch_object()",
			"contents": "ingres_fetch_object(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ingres_fetch_proc_return()",
			"contents": "ingres_fetch_proc_return(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ingres_fetch_row()",
			"contents": "ingres_fetch_row(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ingres_field_length()",
			"contents": "ingres_field_length(${1:result}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "ingres_field_name()",
			"contents": "ingres_field_name(${1:result}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "ingres_field_nullable()",
			"contents": "ingres_field_nullable(${1:result}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "ingres_field_precision()",
			"contents": "ingres_field_precision(${1:result}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "ingres_field_scale()",
			"contents": "ingres_field_scale(${1:result}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "ingres_field_type()",
			"contents": "ingres_field_type(${1:result}, ${2:index})",
			"kind": "function"
		},
		{
			"trigger": "ingres_free_result()",
			"contents": "ingres_free_result(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ingres_next_error()",
			"contents": "ingres_next_error()",
			"kind": "function"
		},
		{
			"trigger": "ingres_num_fields()",
			"contents": "ingres_num_fields(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ingres_num_rows()",
			"contents": "ingres_num_rows(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "ingres_pconnect()",
			"contents": "ingres_pconnect()",
			"kind": "function"
		},
		{
			"trigger": "ingres_prepare()",
			"contents": "ingres_prepare(${1:link}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "ingres_query()",
			"contents": "ingres_query(${1:link}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "ingres_result_seek()",
			"contents": "ingres_result_seek(${1:result}, ${2:position})",
			"kind": "function"
		},
		{
			"trigger": "ingres_rollback()",
			"contents": "ingres_rollback(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "ingres_set_environment()",
			"contents": "ingres_set_environment(${1:link}, ${2:options})",
			"kind": "function"
		},
		{
			"trigger": "ingres_unbuffered_query()",
			"contents": "ingres_unbuffered_query(${1:link}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "ini_alter()",
			"contents": "ini_alter()",
			"kind": "function"
		},
		{
			"trigger": "ini_get()",
			"contents": "ini_get(${1:varname})",
			"kind": "function"
		},
		{
			"trigger": "ini_get_all()",
			"contents": "ini_get_all()",
			"kind": "function"
		},
		{
			"trigger": "ini_restore()",
			"contents": "ini_restore(${1:varname})",
			"kind": "function"
		},
		{
			"trigger": "ini_set()",
			"contents": "ini_set(${1:varname}, ${2:newvalue})",
			"kind": "function"
		},
		{
			"trigger": "inotify_add_watch()",
			"contents": "inotify_add_watch(${1:inotify_instance}, ${2:pathname}, ${3:mask})",
			"kind": "function"
		},
		{
			"trigger": "inotify_init()",
			"contents": "inotify_init()",
			"kind": "function"
		},
		{
			"trigger": "inotify_queue_len()",
			"contents": "inotify_queue_len(${1:inotify_instance})",
			"kind": "function"
		},
		{
			"trigger": "inotify_read()",
			"contents": "inotify_read(${1:inotify_instance})",
			"kind": "function"
		},
		{
			"trigger": "inotify_rm_watch()",
			"contents": "inotify_rm_watch(${1:inotify_instance}, ${2:watch_descriptor})",
			"kind": "function"
		},
		{
			"trigger": "intdiv()",
			"contents": "intdiv(${1:dividend}, ${2:divisor})",
			"kind": "function"
		},
		{
			"trigger": "interface_exists()",
			"contents": "interface_exists(${1:interface_name})",
			"kind": "function"
		},
		{
			"trigger": "intl_error_name()",
			"contents": "intl_error_name(${1:error_code})",
			"kind": "function"
		},
		{
			"trigger": "intl_get_error_code()",
			"contents": "intl_get_error_code()",
			"kind": "function"
		},
		{
			"trigger": "intl_get_error_message()",
			"contents": "intl_get_error_message()",
			"kind": "function"
		},
		{
			"trigger": "intl_is_failure()",
			"contents": "intl_is_failure(${1:error_code})",
			"kind": "function"
		},
		{
			"trigger": "intval()",
			"contents": "intval(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "ip2long()",
			"contents": "ip2long(${1:ip_address})",
			"kind": "function"
		},
		{
			"trigger": "iptcembed()",
			"contents": "iptcembed(${1:iptcdata}, ${2:jpeg_file_name})",
			"kind": "function"
		},
		{
			"trigger": "iptcparse()",
			"contents": "iptcparse(${1:iptcblock})",
			"kind": "function"
		},
		{
			"trigger": "is_a()",
			"contents": "is_a(${1:object}, ${2:class_name})",
			"kind": "function"
		},
		{
			"trigger": "is_array()",
			"contents": "is_array(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "is_bool()",
			"contents": "is_bool(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "is_callable()",
			"contents": "is_callable(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "is_dir()",
			"contents": "is_dir(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "is_double()",
			"contents": "is_double()",
			"kind": "function"
		},
		{
			"trigger": "is_executable()",
			"contents": "is_executable(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "is_file()",
			"contents": "is_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "is_finite()",
			"contents": "is_finite(${1:val})",
			"kind": "function"
		},
		{
			"trigger": "is_float()",
			"contents": "is_float(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "is_infinite()",
			"contents": "is_infinite(${1:val})",
			"kind": "function"
		},
		{
			"trigger": "is_int()",
			"contents": "is_int(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "is_integer()",
			"contents": "is_integer()",
			"kind": "function"
		},
		{
			"trigger": "is_link()",
			"contents": "is_link(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "is_long()",
			"contents": "is_long()",
			"kind": "function"
		},
		{
			"trigger": "is_nan()",
			"contents": "is_nan(${1:val})",
			"kind": "function"
		},
		{
			"trigger": "is_null()",
			"contents": "is_null(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "is_numeric()",
			"contents": "is_numeric(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "is_object()",
			"contents": "is_object(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "is_readable()",
			"contents": "is_readable(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "is_real()",
			"contents": "is_real()",
			"kind": "function"
		},
		{
			"trigger": "is_resource()",
			"contents": "is_resource(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "is_scalar()",
			"contents": "is_scalar(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "is_soap_fault()",
			"contents": "is_soap_fault(${1:object})",
			"kind": "function"
		},
		{
			"trigger": "is_string()",
			"contents": "is_string(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "is_subclass_of()",
			"contents": "is_subclass_of(${1:object}, ${2:class_name})",
			"kind": "function"
		},
		{
			"trigger": "is_uploaded_file()",
			"contents": "is_uploaded_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "is_writable()",
			"contents": "is_writable(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "is_writeable()",
			"contents": "is_writeable()",
			"kind": "function"
		},
		{
			"trigger": "isset()",
			"contents": "isset(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "iterator_apply()",
			"contents": "iterator_apply(${1:iterator}, ${2:function})",
			"kind": "function"
		},
		{
			"trigger": "iterator_count()",
			"contents": "iterator_count(${1:iterator})",
			"kind": "function"
		},
		{
			"trigger": "iterator_to_array()",
			"contents": "iterator_to_array(${1:iterator})",
			"kind": "function"
		},
		{
			"trigger": "java_last_exception_clear()",
			"contents": "java_last_exception_clear()",
			"kind": "function"
		},
		{
			"trigger": "java_last_exception_get()",
			"contents": "java_last_exception_get()",
			"kind": "function"
		},
		{
			"trigger": "JDDayOfWeek()",
			"contents": "JDDayOfWeek(${1:julianday})",
			"kind": "function"
		},
		{
			"trigger": "JDMonthName()",
			"contents": "JDMonthName(${1:julianday}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "JDToFrench()",
			"contents": "JDToFrench(${1:juliandaycount})",
			"kind": "function"
		},
		{
			"trigger": "JDToGregorian()",
			"contents": "JDToGregorian(${1:julianday})",
			"kind": "function"
		},
		{
			"trigger": "jdtojewish()",
			"contents": "jdtojewish(${1:juliandaycount})",
			"kind": "function"
		},
		{
			"trigger": "JDToJulian()",
			"contents": "JDToJulian(${1:julianday})",
			"kind": "function"
		},
		{
			"trigger": "jdtounix()",
			"contents": "jdtounix(${1:jday})",
			"kind": "function"
		},
		{
			"trigger": "JewishToJD()",
			"contents": "JewishToJD(${1:month}, ${2:day}, ${3:year})",
			"kind": "function"
		},
		{
			"trigger": "join()",
			"contents": "join()",
			"kind": "function"
		},
		{
			"trigger": "jpeg2wbmp()",
			"contents": "jpeg2wbmp(${1:jpegname}, ${2:wbmpname}, ${3:dest_height}, ${4:dest_width}, ${5:threshold})",
			"kind": "function"
		},
		{
			"trigger": "json_decode()",
			"contents": "json_decode(${1:json})",
			"kind": "function"
		},
		{
			"trigger": "json_encode()",
			"contents": "json_encode(${1:value})",
			"kind": "function"
		},
		{
			"trigger": "json_last_error()",
			"contents": "json_last_error()",
			"kind": "function"
		},
		{
			"trigger": "judy_type()",
			"contents": "judy_type(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "judy_version()",
			"contents": "judy_version()",
			"kind": "function"
		},
		{
			"trigger": "JulianToJD()",
			"contents": "JulianToJD(${1:month}, ${2:day}, ${3:year})",
			"kind": "function"
		},
		{
			"trigger": "kadm5_chpass_principal()",
			"contents": "kadm5_chpass_principal(${1:handle}, ${2:principal}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "kadm5_create_principal()",
			"contents": "kadm5_create_principal(${1:handle}, ${2:principal})",
			"kind": "function"
		},
		{
			"trigger": "kadm5_delete_principal()",
			"contents": "kadm5_delete_principal(${1:handle}, ${2:principal})",
			"kind": "function"
		},
		{
			"trigger": "kadm5_destroy()",
			"contents": "kadm5_destroy(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "kadm5_flush()",
			"contents": "kadm5_flush(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "kadm5_get_policies()",
			"contents": "kadm5_get_policies(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "kadm5_get_principal()",
			"contents": "kadm5_get_principal(${1:handle}, ${2:principal})",
			"kind": "function"
		},
		{
			"trigger": "kadm5_get_principals()",
			"contents": "kadm5_get_principals(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "kadm5_init_with_password()",
			"contents": "kadm5_init_with_password(${1:admin_server}, ${2:realm}, ${3:principal}, ${4:password})",
			"kind": "function"
		},
		{
			"trigger": "kadm5_modify_principal()",
			"contents": "kadm5_modify_principal(${1:handle}, ${2:principal}, ${3:options})",
			"kind": "function"
		},
		{
			"trigger": "key()",
			"contents": "key(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "krsort()",
			"contents": "krsort(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "ksort()",
			"contents": "ksort(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "lcfirst()",
			"contents": "lcfirst(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "lcg_value()",
			"contents": "lcg_value()",
			"kind": "function"
		},
		{
			"trigger": "lchgrp()",
			"contents": "lchgrp(${1:filename}, ${2:group})",
			"kind": "function"
		},
		{
			"trigger": "lchown()",
			"contents": "lchown(${1:filename}, ${2:user})",
			"kind": "function"
		},
		{
			"trigger": "ldap_8859_to_t61()",
			"contents": "ldap_8859_to_t61(${1:value})",
			"kind": "function"
		},
		{
			"trigger": "ldap_add()",
			"contents": "ldap_add(${1:link_identifier}, ${2:dn}, ${3:entry})",
			"kind": "function"
		},
		{
			"trigger": "ldap_bind()",
			"contents": "ldap_bind(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_close()",
			"contents": "ldap_close()",
			"kind": "function"
		},
		{
			"trigger": "ldap_compare()",
			"contents": "ldap_compare(${1:link_identifier}, ${2:dn}, ${3:attribute}, ${4:value})",
			"kind": "function"
		},
		{
			"trigger": "ldap_connect()",
			"contents": "ldap_connect()",
			"kind": "function"
		},
		{
			"trigger": "ldap_count_entries()",
			"contents": "ldap_count_entries(${1:link_identifier}, ${2:result_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_delete()",
			"contents": "ldap_delete(${1:link_identifier}, ${2:dn})",
			"kind": "function"
		},
		{
			"trigger": "ldap_dn2ufn()",
			"contents": "ldap_dn2ufn(${1:dn})",
			"kind": "function"
		},
		{
			"trigger": "ldap_err2str()",
			"contents": "ldap_err2str(${1:errno})",
			"kind": "function"
		},
		{
			"trigger": "ldap_errno()",
			"contents": "ldap_errno(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_error()",
			"contents": "ldap_error(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_explode_dn()",
			"contents": "ldap_explode_dn(${1:dn}, ${2:with_attrib})",
			"kind": "function"
		},
		{
			"trigger": "ldap_first_attribute()",
			"contents": "ldap_first_attribute(${1:link_identifier}, ${2:result_entry_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_first_entry()",
			"contents": "ldap_first_entry(${1:link_identifier}, ${2:result_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_first_reference()",
			"contents": "ldap_first_reference(${1:link}, ${2:result})",
			"kind": "function"
		},
		{
			"trigger": "ldap_free_result()",
			"contents": "ldap_free_result(${1:result_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_get_attributes()",
			"contents": "ldap_get_attributes(${1:link_identifier}, ${2:result_entry_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_get_dn()",
			"contents": "ldap_get_dn(${1:link_identifier}, ${2:result_entry_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_get_entries()",
			"contents": "ldap_get_entries(${1:link_identifier}, ${2:result_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_get_option()",
			"contents": "ldap_get_option(${1:link_identifier}, ${2:option}, ${3:retval})",
			"kind": "function"
		},
		{
			"trigger": "ldap_get_values()",
			"contents": "ldap_get_values(${1:link_identifier}, ${2:result_entry_identifier}, ${3:attribute})",
			"kind": "function"
		},
		{
			"trigger": "ldap_get_values_len()",
			"contents": "ldap_get_values_len(${1:link_identifier}, ${2:result_entry_identifier}, ${3:attribute})",
			"kind": "function"
		},
		{
			"trigger": "ldap_list()",
			"contents": "ldap_list(${1:link_identifier}, ${2:base_dn}, ${3:filter})",
			"kind": "function"
		},
		{
			"trigger": "ldap_mod_add()",
			"contents": "ldap_mod_add(${1:link_identifier}, ${2:dn}, ${3:entry})",
			"kind": "function"
		},
		{
			"trigger": "ldap_mod_del()",
			"contents": "ldap_mod_del(${1:link_identifier}, ${2:dn}, ${3:entry})",
			"kind": "function"
		},
		{
			"trigger": "ldap_mod_replace()",
			"contents": "ldap_mod_replace(${1:link_identifier}, ${2:dn}, ${3:entry})",
			"kind": "function"
		},
		{
			"trigger": "ldap_modify()",
			"contents": "ldap_modify(${1:link_identifier}, ${2:dn}, ${3:entry})",
			"kind": "function"
		},
		{
			"trigger": "ldap_next_attribute()",
			"contents": "ldap_next_attribute(${1:link_identifier}, ${2:result_entry_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_next_entry()",
			"contents": "ldap_next_entry(${1:link_identifier}, ${2:result_entry_identifier})",
			"kind": "function"
		},
		{
			"trigger": "ldap_next_reference()",
			"contents": "ldap_next_reference(${1:link}, ${2:entry})",
			"kind": "function"
		},
		{
			"trigger": "ldap_parse_reference()",
			"contents": "ldap_parse_reference(${1:link}, ${2:entry}, ${3:referrals})",
			"kind": "function"
		},
		{
			"trigger": "ldap_parse_result()",
			"contents": "ldap_parse_result(${1:link}, ${2:result}, ${3:errcode})",
			"kind": "function"
		},
		{
			"trigger": "ldap_read()",
			"contents": "ldap_read(${1:link_identifier}, ${2:base_dn}, ${3:filter})",
			"kind": "function"
		},
		{
			"trigger": "ldap_rename()",
			"contents": "ldap_rename(${1:link_identifier}, ${2:dn}, ${3:newrdn}, ${4:newparent}, ${5:deleteoldrdn})",
			"kind": "function"
		},
		{
			"trigger": "ldap_sasl_bind()",
			"contents": "ldap_sasl_bind(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "ldap_search()",
			"contents": "ldap_search(${1:link_identifier}, ${2:base_dn}, ${3:filter})",
			"kind": "function"
		},
		{
			"trigger": "ldap_set_option()",
			"contents": "ldap_set_option(${1:link_identifier}, ${2:option}, ${3:newval})",
			"kind": "function"
		},
		{
			"trigger": "ldap_set_rebind_proc()",
			"contents": "ldap_set_rebind_proc(${1:link}, ${2:callback})",
			"kind": "function"
		},
		{
			"trigger": "ldap_sort()",
			"contents": "ldap_sort(${1:link}, ${2:result}, ${3:sortfilter})",
			"kind": "function"
		},
		{
			"trigger": "ldap_start_tls()",
			"contents": "ldap_start_tls(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "ldap_t61_to_8859()",
			"contents": "ldap_t61_to_8859(${1:value})",
			"kind": "function"
		},
		{
			"trigger": "ldap_unbind()",
			"contents": "ldap_unbind(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "levenshtein()",
			"contents": "levenshtein(${1:str1}, ${2:str2})",
			"kind": "function"
		},
		{
			"trigger": "libxml_clear_errors()",
			"contents": "libxml_clear_errors()",
			"kind": "function"
		},
		{
			"trigger": "libxml_disable_entity_loader()",
			"contents": "libxml_disable_entity_loader()",
			"kind": "function"
		},
		{
			"trigger": "libxml_get_errors()",
			"contents": "libxml_get_errors()",
			"kind": "function"
		},
		{
			"trigger": "libxml_get_last_error()",
			"contents": "libxml_get_last_error()",
			"kind": "function"
		},
		{
			"trigger": "libxml_set_streams_context()",
			"contents": "libxml_set_streams_context(${1:streams_context})",
			"kind": "function"
		},
		{
			"trigger": "libxml_use_internal_errors()",
			"contents": "libxml_use_internal_errors()",
			"kind": "function"
		},
		{
			"trigger": "link()",
			"contents": "link(${1:target}, ${2:link})",
			"kind": "function"
		},
		{
			"trigger": "linkinfo()",
			"contents": "linkinfo(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "list()",
			"contents": "list(${1:varname})",
			"kind": "function"
		},
		{
			"trigger": "localeconv()",
			"contents": "localeconv()",
			"kind": "function"
		},
		{
			"trigger": "localtime()",
			"contents": "localtime()",
			"kind": "function"
		},
		{
			"trigger": "log()",
			"contents": "log(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "log10()",
			"contents": "log10(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "log1p()",
			"contents": "log1p(${1:number})",
			"kind": "function"
		},
		{
			"trigger": "long2ip()",
			"contents": "long2ip(${1:proper_address})",
			"kind": "function"
		},
		{
			"trigger": "lstat()",
			"contents": "lstat(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "ltrim()",
			"contents": "ltrim(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "lzf_compress()",
			"contents": "lzf_compress(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "lzf_decompress()",
			"contents": "lzf_decompress(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "lzf_optimized_for()",
			"contents": "lzf_optimized_for()",
			"kind": "function"
		},
		{
			"trigger": "m_checkstatus()",
			"contents": "m_checkstatus(${1:conn}, ${2:identifier})",
			"kind": "function"
		},
		{
			"trigger": "m_completeauthorizations()",
			"contents": "m_completeauthorizations(${1:conn}, ${2:array})",
			"kind": "function"
		},
		{
			"trigger": "m_connect()",
			"contents": "m_connect(${1:conn})",
			"kind": "function"
		},
		{
			"trigger": "m_connectionerror()",
			"contents": "m_connectionerror(${1:conn})",
			"kind": "function"
		},
		{
			"trigger": "m_deletetrans()",
			"contents": "m_deletetrans(${1:conn}, ${2:identifier})",
			"kind": "function"
		},
		{
			"trigger": "m_destroyconn()",
			"contents": "m_destroyconn(${1:conn})",
			"kind": "function"
		},
		{
			"trigger": "m_destroyengine()",
			"contents": "m_destroyengine()",
			"kind": "function"
		},
		{
			"trigger": "m_getcell()",
			"contents": "m_getcell(${1:conn}, ${2:identifier}, ${3:column}, ${4:row})",
			"kind": "function"
		},
		{
			"trigger": "m_getcellbynum()",
			"contents": "m_getcellbynum(${1:conn}, ${2:identifier}, ${3:column}, ${4:row})",
			"kind": "function"
		},
		{
			"trigger": "m_getcommadelimited()",
			"contents": "m_getcommadelimited(${1:conn}, ${2:identifier})",
			"kind": "function"
		},
		{
			"trigger": "m_getheader()",
			"contents": "m_getheader(${1:conn}, ${2:identifier}, ${3:column_num})",
			"kind": "function"
		},
		{
			"trigger": "m_initconn()",
			"contents": "m_initconn()",
			"kind": "function"
		},
		{
			"trigger": "m_initengine()",
			"contents": "m_initengine(${1:location})",
			"kind": "function"
		},
		{
			"trigger": "m_iscommadelimited()",
			"contents": "m_iscommadelimited(${1:conn}, ${2:identifier})",
			"kind": "function"
		},
		{
			"trigger": "m_maxconntimeout()",
			"contents": "m_maxconntimeout(${1:conn}, ${2:secs})",
			"kind": "function"
		},
		{
			"trigger": "m_monitor()",
			"contents": "m_monitor(${1:conn})",
			"kind": "function"
		},
		{
			"trigger": "m_numcolumns()",
			"contents": "m_numcolumns(${1:conn}, ${2:identifier})",
			"kind": "function"
		},
		{
			"trigger": "m_numrows()",
			"contents": "m_numrows(${1:conn}, ${2:identifier})",
			"kind": "function"
		},
		{
			"trigger": "m_parsecommadelimited()",
			"contents": "m_parsecommadelimited(${1:conn}, ${2:identifier})",
			"kind": "function"
		},
		{
			"trigger": "m_responsekeys()",
			"contents": "m_responsekeys(${1:conn}, ${2:identifier})",
			"kind": "function"
		},
		{
			"trigger": "m_responseparam()",
			"contents": "m_responseparam(${1:conn}, ${2:identifier}, ${3:key})",
			"kind": "function"
		},
		{
			"trigger": "m_returnstatus()",
			"contents": "m_returnstatus(${1:conn}, ${2:identifier})",
			"kind": "function"
		},
		{
			"trigger": "m_setblocking()",
			"contents": "m_setblocking(${1:conn}, ${2:tf})",
			"kind": "function"
		},
		{
			"trigger": "m_setdropfile()",
			"contents": "m_setdropfile(${1:conn}, ${2:directory})",
			"kind": "function"
		},
		{
			"trigger": "m_setip()",
			"contents": "m_setip(${1:conn}, ${2:host}, ${3:port})",
			"kind": "function"
		},
		{
			"trigger": "m_setssl()",
			"contents": "m_setssl(${1:conn}, ${2:host}, ${3:port})",
			"kind": "function"
		},
		{
			"trigger": "m_setssl_cafile()",
			"contents": "m_setssl_cafile(${1:conn}, ${2:cafile})",
			"kind": "function"
		},
		{
			"trigger": "m_setssl_files()",
			"contents": "m_setssl_files(${1:conn}, ${2:sslkeyfile}, ${3:sslcertfile})",
			"kind": "function"
		},
		{
			"trigger": "m_settimeout()",
			"contents": "m_settimeout(${1:conn}, ${2:seconds})",
			"kind": "function"
		},
		{
			"trigger": "m_sslcert_gen_hash()",
			"contents": "m_sslcert_gen_hash(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "m_transactionssent()",
			"contents": "m_transactionssent(${1:conn})",
			"kind": "function"
		},
		{
			"trigger": "m_transinqueue()",
			"contents": "m_transinqueue(${1:conn})",
			"kind": "function"
		},
		{
			"trigger": "m_transkeyval()",
			"contents": "m_transkeyval(${1:conn}, ${2:identifier}, ${3:key}, ${4:value})",
			"kind": "function"
		},
		{
			"trigger": "m_transnew()",
			"contents": "m_transnew(${1:conn})",
			"kind": "function"
		},
		{
			"trigger": "m_transsend()",
			"contents": "m_transsend(${1:conn}, ${2:identifier})",
			"kind": "function"
		},
		{
			"trigger": "m_uwait()",
			"contents": "m_uwait(${1:microsecs})",
			"kind": "function"
		},
		{
			"trigger": "m_validateidentifier()",
			"contents": "m_validateidentifier(${1:conn}, ${2:tf})",
			"kind": "function"
		},
		{
			"trigger": "m_verifyconnection()",
			"contents": "m_verifyconnection(${1:conn}, ${2:tf})",
			"kind": "function"
		},
		{
			"trigger": "m_verifysslcert()",
			"contents": "m_verifysslcert(${1:conn}, ${2:tf})",
			"kind": "function"
		},
		{
			"trigger": "magic_quotes_runtime()",
			"contents": "magic_quotes_runtime()",
			"kind": "function"
		},
		{
			"trigger": "mail()",
			"contents": "mail(${1:to}, ${2:subject}, ${3:message})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_determine_best_xfer_encoding()",
			"contents": "mailparse_determine_best_xfer_encoding(${1:fp})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_msg_create()",
			"contents": "mailparse_msg_create()",
			"kind": "function"
		},
		{
			"trigger": "mailparse_msg_extract_part()",
			"contents": "mailparse_msg_extract_part(${1:mimemail}, ${2:msgbody})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_msg_extract_part_file()",
			"contents": "mailparse_msg_extract_part_file(${1:mimemail}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_msg_extract_whole_part_file()",
			"contents": "mailparse_msg_extract_whole_part_file(${1:mimemail}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_msg_free()",
			"contents": "mailparse_msg_free(${1:mimemail})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_msg_get_part()",
			"contents": "mailparse_msg_get_part(${1:mimemail}, ${2:mimesection})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_msg_get_part_data()",
			"contents": "mailparse_msg_get_part_data(${1:mimemail})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_msg_get_structure()",
			"contents": "mailparse_msg_get_structure(${1:mimemail})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_msg_parse()",
			"contents": "mailparse_msg_parse(${1:mimemail}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_msg_parse_file()",
			"contents": "mailparse_msg_parse_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_rfc822_parse_addresses()",
			"contents": "mailparse_rfc822_parse_addresses(${1:addresses})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_stream_encode()",
			"contents": "mailparse_stream_encode(${1:sourcefp}, ${2:destfp}, ${3:encoding})",
			"kind": "function"
		},
		{
			"trigger": "mailparse_uudecode_all()",
			"contents": "mailparse_uudecode_all(${1:fp})",
			"kind": "function"
		},
		{
			"trigger": "main()",
			"contents": "main()",
			"kind": "function"
		},
		{
			"trigger": "max()",
			"contents": "max(${1:values})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_bind_param()",
			"contents": "maxdb_bind_param()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_bind_result()",
			"contents": "maxdb_bind_result()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_client_encoding()",
			"contents": "maxdb_client_encoding()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_connect_errno()",
			"contents": "maxdb_connect_errno()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_connect_error()",
			"contents": "maxdb_connect_error()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_debug()",
			"contents": "maxdb_debug(${1:debug})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_disable_rpl_parse()",
			"contents": "maxdb_disable_rpl_parse(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_dump_debug_info()",
			"contents": "maxdb_dump_debug_info(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_embedded_connect()",
			"contents": "maxdb_embedded_connect()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_enable_reads_from_master()",
			"contents": "maxdb_enable_reads_from_master(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_enable_rpl_parse()",
			"contents": "maxdb_enable_rpl_parse(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_escape_string()",
			"contents": "maxdb_escape_string()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_execute()",
			"contents": "maxdb_execute()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_fetch()",
			"contents": "maxdb_fetch()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_get_client_info()",
			"contents": "maxdb_get_client_info()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_get_client_version()",
			"contents": "maxdb_get_client_version()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_get_metadata()",
			"contents": "maxdb_get_metadata()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_init()",
			"contents": "maxdb_init()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_master_query()",
			"contents": "maxdb_master_query(${1:link}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_param_count()",
			"contents": "maxdb_param_count()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_report()",
			"contents": "maxdb_report(${1:flags})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_rpl_parse_enabled()",
			"contents": "maxdb_rpl_parse_enabled(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_rpl_probe()",
			"contents": "maxdb_rpl_probe(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_send_long_data()",
			"contents": "maxdb_send_long_data()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_server_end()",
			"contents": "maxdb_server_end()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_server_init()",
			"contents": "maxdb_server_init()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_set_opt()",
			"contents": "maxdb_set_opt()",
			"kind": "function"
		},
		{
			"trigger": "maxdb_stmt_sqlstate()",
			"contents": "maxdb_stmt_sqlstate(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "maxdb_thread_safe()",
			"contents": "maxdb_thread_safe()",
			"kind": "function"
		},
		{
			"trigger": "mb_check_encoding()",
			"contents": "mb_check_encoding()",
			"kind": "function"
		},
		{
			"trigger": "mb_convert_case()",
			"contents": "mb_convert_case(${1:str}, ${2:mode = MB_CASE_UPPER})",
			"kind": "function"
		},
		{
			"trigger": "mb_convert_encoding()",
			"contents": "mb_convert_encoding(${1:str}, ${2:to_encoding})",
			"kind": "function"
		},
		{
			"trigger": "mb_convert_kana()",
			"contents": "mb_convert_kana(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "mb_convert_variables()",
			"contents": "mb_convert_variables(${1:to_encoding}, ${2:from_encoding}, ${3:vars})",
			"kind": "function"
		},
		{
			"trigger": "mb_decode_mimeheader()",
			"contents": "mb_decode_mimeheader(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "mb_decode_numericentity()",
			"contents": "mb_decode_numericentity(${1:str}, ${2:convmap}, ${3:encoding})",
			"kind": "function"
		},
		{
			"trigger": "mb_detect_encoding()",
			"contents": "mb_detect_encoding(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "mb_detect_order()",
			"contents": "mb_detect_order()",
			"kind": "function"
		},
		{
			"trigger": "mb_encode_mimeheader()",
			"contents": "mb_encode_mimeheader(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "mb_encode_numericentity()",
			"contents": "mb_encode_numericentity(${1:str}, ${2:convmap}, ${3:encoding})",
			"kind": "function"
		},
		{
			"trigger": "mb_encoding_aliases()",
			"contents": "mb_encoding_aliases(${1:encoding})",
			"kind": "function"
		},
		{
			"trigger": "mb_ereg()",
			"contents": "mb_ereg(${1:pattern}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "mb_ereg_match()",
			"contents": "mb_ereg_match(${1:pattern}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "mb_ereg_replace()",
			"contents": "mb_ereg_replace(${1:pattern}, ${2:replacement}, ${3:string})",
			"kind": "function"
		},
		{
			"trigger": "mb_ereg_search()",
			"contents": "mb_ereg_search()",
			"kind": "function"
		},
		{
			"trigger": "mb_ereg_search_getpos()",
			"contents": "mb_ereg_search_getpos()",
			"kind": "function"
		},
		{
			"trigger": "mb_ereg_search_getregs()",
			"contents": "mb_ereg_search_getregs()",
			"kind": "function"
		},
		{
			"trigger": "mb_ereg_search_init()",
			"contents": "mb_ereg_search_init(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "mb_ereg_search_pos()",
			"contents": "mb_ereg_search_pos()",
			"kind": "function"
		},
		{
			"trigger": "mb_ereg_search_regs()",
			"contents": "mb_ereg_search_regs()",
			"kind": "function"
		},
		{
			"trigger": "mb_ereg_search_setpos()",
			"contents": "mb_ereg_search_setpos(${1:position})",
			"kind": "function"
		},
		{
			"trigger": "mb_eregi()",
			"contents": "mb_eregi(${1:pattern}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "mb_eregi_replace()",
			"contents": "mb_eregi_replace(${1:pattern}, ${2:replace}, ${3:string})",
			"kind": "function"
		},
		{
			"trigger": "mb_get_info()",
			"contents": "mb_get_info()",
			"kind": "function"
		},
		{
			"trigger": "mb_http_input()",
			"contents": "mb_http_input()",
			"kind": "function"
		},
		{
			"trigger": "mb_http_output()",
			"contents": "mb_http_output()",
			"kind": "function"
		},
		{
			"trigger": "mb_internal_encoding()",
			"contents": "mb_internal_encoding()",
			"kind": "function"
		},
		{
			"trigger": "mb_language()",
			"contents": "mb_language()",
			"kind": "function"
		},
		{
			"trigger": "mb_list_encodings()",
			"contents": "mb_list_encodings()",
			"kind": "function"
		},
		{
			"trigger": "mb_output_handler()",
			"contents": "mb_output_handler(${1:contents}, ${2:status})",
			"kind": "function"
		},
		{
			"trigger": "mb_parse_str()",
			"contents": "mb_parse_str(${1:encoded_string})",
			"kind": "function"
		},
		{
			"trigger": "mb_preferred_mime_name()",
			"contents": "mb_preferred_mime_name(${1:encoding})",
			"kind": "function"
		},
		{
			"trigger": "mb_regex_encoding()",
			"contents": "mb_regex_encoding()",
			"kind": "function"
		},
		{
			"trigger": "mb_regex_set_options()",
			"contents": "mb_regex_set_options()",
			"kind": "function"
		},
		{
			"trigger": "mb_send_mail()",
			"contents": "mb_send_mail(${1:to}, ${2:subject}, ${3:message})",
			"kind": "function"
		},
		{
			"trigger": "mb_split()",
			"contents": "mb_split(${1:pattern}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "mb_strcut()",
			"contents": "mb_strcut(${1:str}, ${2:start})",
			"kind": "function"
		},
		{
			"trigger": "mb_strimwidth()",
			"contents": "mb_strimwidth(${1:str}, ${2:start}, ${3:width})",
			"kind": "function"
		},
		{
			"trigger": "mb_stripos()",
			"contents": "mb_stripos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "mb_stristr()",
			"contents": "mb_stristr(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "mb_strlen()",
			"contents": "mb_strlen(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "mb_strpos()",
			"contents": "mb_strpos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "mb_strrchr()",
			"contents": "mb_strrchr(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "mb_strrichr()",
			"contents": "mb_strrichr(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "mb_strripos()",
			"contents": "mb_strripos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "mb_strrpos()",
			"contents": "mb_strrpos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "mb_strstr()",
			"contents": "mb_strstr(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "mb_strtolower()",
			"contents": "mb_strtolower(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "mb_strtoupper()",
			"contents": "mb_strtoupper(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "mb_strwidth()",
			"contents": "mb_strwidth(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "mb_substitute_character()",
			"contents": "mb_substitute_character()",
			"kind": "function"
		},
		{
			"trigger": "mb_substr()",
			"contents": "mb_substr(${1:str}, ${2:start})",
			"kind": "function"
		},
		{
			"trigger": "mb_substr_count()",
			"contents": "mb_substr_count(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_cbc()",
			"contents": "mcrypt_cbc(${1:cipher}, ${2:key}, ${3:data}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_cfb()",
			"contents": "mcrypt_cfb(${1:cipher}, ${2:key}, ${3:data}, ${4:mode}, ${5:iv})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_create_iv()",
			"contents": "mcrypt_create_iv(${1:size})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_decrypt()",
			"contents": "mcrypt_decrypt(${1:cipher}, ${2:key}, ${3:data}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_ecb()",
			"contents": "mcrypt_ecb(${1:cipher}, ${2:key}, ${3:data}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_enc_get_algorithms_name()",
			"contents": "mcrypt_enc_get_algorithms_name(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_enc_get_block_size()",
			"contents": "mcrypt_enc_get_block_size(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_enc_get_iv_size()",
			"contents": "mcrypt_enc_get_iv_size(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_enc_get_key_size()",
			"contents": "mcrypt_enc_get_key_size(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_enc_get_modes_name()",
			"contents": "mcrypt_enc_get_modes_name(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_enc_get_supported_key_sizes()",
			"contents": "mcrypt_enc_get_supported_key_sizes(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_enc_is_block_algorithm()",
			"contents": "mcrypt_enc_is_block_algorithm(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_enc_is_block_algorithm_mode()",
			"contents": "mcrypt_enc_is_block_algorithm_mode(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_enc_is_block_mode()",
			"contents": "mcrypt_enc_is_block_mode(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_enc_self_test()",
			"contents": "mcrypt_enc_self_test(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_encrypt()",
			"contents": "mcrypt_encrypt(${1:cipher}, ${2:key}, ${3:data}, ${4:mode})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_generic()",
			"contents": "mcrypt_generic(${1:td}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_generic_deinit()",
			"contents": "mcrypt_generic_deinit(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_generic_end()",
			"contents": "mcrypt_generic_end(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_generic_init()",
			"contents": "mcrypt_generic_init(${1:td}, ${2:key}, ${3:iv})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_get_block_size()",
			"contents": "mcrypt_get_block_size(${1:cipher})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_get_cipher_name()",
			"contents": "mcrypt_get_cipher_name(${1:cipher})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_get_iv_size()",
			"contents": "mcrypt_get_iv_size(${1:cipher}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_get_key_size()",
			"contents": "mcrypt_get_key_size(${1:cipher})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_list_algorithms()",
			"contents": "mcrypt_list_algorithms()",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_list_modes()",
			"contents": "mcrypt_list_modes()",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_module_close()",
			"contents": "mcrypt_module_close(${1:td})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_module_get_algo_block_size()",
			"contents": "mcrypt_module_get_algo_block_size(${1:algorithm})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_module_get_algo_key_size()",
			"contents": "mcrypt_module_get_algo_key_size(${1:algorithm})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_module_get_supported_key_sizes()",
			"contents": "mcrypt_module_get_supported_key_sizes(${1:algorithm})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_module_is_block_algorithm()",
			"contents": "mcrypt_module_is_block_algorithm(${1:algorithm})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_module_is_block_algorithm_mode()",
			"contents": "mcrypt_module_is_block_algorithm_mode(${1:mode})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_module_is_block_mode()",
			"contents": "mcrypt_module_is_block_mode(${1:mode})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_module_open()",
			"contents": "mcrypt_module_open(${1:algorithm}, ${2:algorithm_directory}, ${3:mode}, ${4:mode_directory})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_module_self_test()",
			"contents": "mcrypt_module_self_test(${1:algorithm})",
			"kind": "function"
		},
		{
			"trigger": "mcrypt_ofb()",
			"contents": "mcrypt_ofb(${1:cipher}, ${2:key}, ${3:data}, ${4:mode}, ${5:iv})",
			"kind": "function"
		},
		{
			"trigger": "md5()",
			"contents": "md5(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "md5_file()",
			"contents": "md5_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "mdecrypt_generic()",
			"contents": "mdecrypt_generic(${1:td}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "memcache_debug()",
			"contents": "memcache_debug(${1:on_off})",
			"kind": "function"
		},
		{
			"trigger": "memory_get_peak_usage()",
			"contents": "memory_get_peak_usage()",
			"kind": "function"
		},
		{
			"trigger": "memory_get_usage()",
			"contents": "memory_get_usage()",
			"kind": "function"
		},
		{
			"trigger": "metaphone()",
			"contents": "metaphone(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "method_exists()",
			"contents": "method_exists(${1:object}, ${2:method_name})",
			"kind": "function"
		},
		{
			"trigger": "mhash()",
			"contents": "mhash(${1:hash}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "mhash_count()",
			"contents": "mhash_count()",
			"kind": "function"
		},
		{
			"trigger": "mhash_get_block_size()",
			"contents": "mhash_get_block_size(${1:hash})",
			"kind": "function"
		},
		{
			"trigger": "mhash_get_hash_name()",
			"contents": "mhash_get_hash_name(${1:hash})",
			"kind": "function"
		},
		{
			"trigger": "mhash_keygen_s2k()",
			"contents": "mhash_keygen_s2k(${1:hash}, ${2:password}, ${3:salt}, ${4:bytes})",
			"kind": "function"
		},
		{
			"trigger": "microtime()",
			"contents": "microtime()",
			"kind": "function"
		},
		{
			"trigger": "mime_content_type()",
			"contents": "mime_content_type(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "min()",
			"contents": "min(${1:values})",
			"kind": "function"
		},
		{
			"trigger": "ming_keypress()",
			"contents": "ming_keypress(${1:char})",
			"kind": "function"
		},
		{
			"trigger": "ming_setcubicthreshold()",
			"contents": "ming_setcubicthreshold(${1:threshold})",
			"kind": "function"
		},
		{
			"trigger": "ming_setscale()",
			"contents": "ming_setscale(${1:scale})",
			"kind": "function"
		},
		{
			"trigger": "ming_setswfcompression()",
			"contents": "ming_setswfcompression(${1:level})",
			"kind": "function"
		},
		{
			"trigger": "ming_useconstants()",
			"contents": "ming_useconstants(${1:use})",
			"kind": "function"
		},
		{
			"trigger": "ming_useswfversion()",
			"contents": "ming_useswfversion(${1:version})",
			"kind": "function"
		},
		{
			"trigger": "mkdir()",
			"contents": "mkdir(${1:pathname})",
			"kind": "function"
		},
		{
			"trigger": "mktime()",
			"contents": "mktime()",
			"kind": "function"
		},
		{
			"trigger": "money_format()",
			"contents": "money_format(${1:format}, ${2:number})",
			"kind": "function"
		},
		{
			"trigger": "move_uploaded_file()",
			"contents": "move_uploaded_file(${1:filename}, ${2:destination})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_back()",
			"contents": "mqseries_back(${1:hconn}, ${2:compCode}, ${3:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_begin()",
			"contents": "mqseries_begin(${1:hconn}, ${2:beginOptions}, ${3:compCode}, ${4:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_close()",
			"contents": "mqseries_close(${1:hconn}, ${2:hobj}, ${3:options}, ${4:compCode}, ${5:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_cmit()",
			"contents": "mqseries_cmit(${1:hconn}, ${2:compCode}, ${3:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_conn()",
			"contents": "mqseries_conn(${1:qManagerName}, ${2:hconn}, ${3:compCode}, ${4:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_connx()",
			"contents": "mqseries_connx(${1:qManagerName}, ${2:connOptions}, ${3:hconn}, ${4:compCode}, ${5:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_disc()",
			"contents": "mqseries_disc(${1:hconn}, ${2:compCode}, ${3:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_get()",
			"contents": "mqseries_get(${1:hConn}, ${2:hObj}, ${3:md}, ${4:gmo}, ${5:bufferLength}, ${6:msg}, ${7:data_length}, ${8:compCode}, ${9:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_inq()",
			"contents": "mqseries_inq(${1:hconn}, ${2:hobj}, ${3:selectorCount}, ${4:selectors}, ${5:intAttrCount}, ${6:intAttr}, ${7:charAttrLength}, ${8:charAttr}, ${9:compCode}, ${10:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_open()",
			"contents": "mqseries_open(${1:hconn}, ${2:objDesc}, ${3:option}, ${4:hobj}, ${5:compCode}, ${6:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_put()",
			"contents": "mqseries_put(${1:hConn}, ${2:hObj}, ${3:md}, ${4:pmo}, ${5:message}, ${6:compCode}, ${7:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_put1()",
			"contents": "mqseries_put1(${1:hconn}, ${2:objDesc}, ${3:msgDesc}, ${4:pmo}, ${5:buffer}, ${6:compCode}, ${7:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_set()",
			"contents": "mqseries_set(${1:hconn}, ${2:hobj}, ${3:selectorcount}, ${4:selectors}, ${5:intattrcount}, ${6:intattrs}, ${7:charattrlength}, ${8:charattrs}, ${9:compCode}, ${10:reason})",
			"kind": "function"
		},
		{
			"trigger": "mqseries_strerror()",
			"contents": "mqseries_strerror(${1:reason})",
			"kind": "function"
		},
		{
			"trigger": "msession_connect()",
			"contents": "msession_connect(${1:host}, ${2:port})",
			"kind": "function"
		},
		{
			"trigger": "msession_count()",
			"contents": "msession_count()",
			"kind": "function"
		},
		{
			"trigger": "msession_create()",
			"contents": "msession_create(${1:session})",
			"kind": "function"
		},
		{
			"trigger": "msession_destroy()",
			"contents": "msession_destroy(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "msession_disconnect()",
			"contents": "msession_disconnect()",
			"kind": "function"
		},
		{
			"trigger": "msession_find()",
			"contents": "msession_find(${1:name}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "msession_get()",
			"contents": "msession_get(${1:session}, ${2:name}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "msession_get_array()",
			"contents": "msession_get_array(${1:session})",
			"kind": "function"
		},
		{
			"trigger": "msession_get_data()",
			"contents": "msession_get_data(${1:session})",
			"kind": "function"
		},
		{
			"trigger": "msession_inc()",
			"contents": "msession_inc(${1:session}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "msession_list()",
			"contents": "msession_list()",
			"kind": "function"
		},
		{
			"trigger": "msession_listvar()",
			"contents": "msession_listvar(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "msession_lock()",
			"contents": "msession_lock(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "msession_plugin()",
			"contents": "msession_plugin(${1:session}, ${2:val})",
			"kind": "function"
		},
		{
			"trigger": "msession_randstr()",
			"contents": "msession_randstr(${1:param})",
			"kind": "function"
		},
		{
			"trigger": "msession_set()",
			"contents": "msession_set(${1:session}, ${2:name}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "msession_set_array()",
			"contents": "msession_set_array(${1:session}, ${2:tuples})",
			"kind": "function"
		},
		{
			"trigger": "msession_set_data()",
			"contents": "msession_set_data(${1:session}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "msession_timeout()",
			"contents": "msession_timeout(${1:session})",
			"kind": "function"
		},
		{
			"trigger": "msession_uniq()",
			"contents": "msession_uniq(${1:param})",
			"kind": "function"
		},
		{
			"trigger": "msession_unlock()",
			"contents": "msession_unlock(${1:session}, ${2:key})",
			"kind": "function"
		},
		{
			"trigger": "msg_get_queue()",
			"contents": "msg_get_queue(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "msg_queue_exists()",
			"contents": "msg_queue_exists(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "msg_receive()",
			"contents": "msg_receive(${1:queue}, ${2:desiredmsgtype}, ${3:msgtype}, ${4:maxsize}, ${5:message})",
			"kind": "function"
		},
		{
			"trigger": "msg_remove_queue()",
			"contents": "msg_remove_queue(${1:queue})",
			"kind": "function"
		},
		{
			"trigger": "msg_send()",
			"contents": "msg_send(${1:queue}, ${2:msgtype}, ${3:message})",
			"kind": "function"
		},
		{
			"trigger": "msg_set_queue()",
			"contents": "msg_set_queue(${1:queue}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "msg_stat_queue()",
			"contents": "msg_stat_queue(${1:queue})",
			"kind": "function"
		},
		{
			"trigger": "msql()",
			"contents": "msql()",
			"kind": "function"
		},
		{
			"trigger": "msql_affected_rows()",
			"contents": "msql_affected_rows(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "msql_close()",
			"contents": "msql_close()",
			"kind": "function"
		},
		{
			"trigger": "msql_connect()",
			"contents": "msql_connect()",
			"kind": "function"
		},
		{
			"trigger": "msql_create_db()",
			"contents": "msql_create_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "msql_createdb()",
			"contents": "msql_createdb()",
			"kind": "function"
		},
		{
			"trigger": "msql_data_seek()",
			"contents": "msql_data_seek(${1:result}, ${2:row_number})",
			"kind": "function"
		},
		{
			"trigger": "msql_db_query()",
			"contents": "msql_db_query(${1:database}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "msql_dbname()",
			"contents": "msql_dbname()",
			"kind": "function"
		},
		{
			"trigger": "msql_drop_db()",
			"contents": "msql_drop_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "msql_error()",
			"contents": "msql_error()",
			"kind": "function"
		},
		{
			"trigger": "msql_fetch_array()",
			"contents": "msql_fetch_array(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "msql_fetch_field()",
			"contents": "msql_fetch_field(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "msql_fetch_object()",
			"contents": "msql_fetch_object(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "msql_fetch_row()",
			"contents": "msql_fetch_row(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "msql_field_flags()",
			"contents": "msql_field_flags(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "msql_field_len()",
			"contents": "msql_field_len(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "msql_field_name()",
			"contents": "msql_field_name(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "msql_field_seek()",
			"contents": "msql_field_seek(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "msql_field_table()",
			"contents": "msql_field_table(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "msql_field_type()",
			"contents": "msql_field_type(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "msql_fieldflags()",
			"contents": "msql_fieldflags()",
			"kind": "function"
		},
		{
			"trigger": "msql_fieldlen()",
			"contents": "msql_fieldlen()",
			"kind": "function"
		},
		{
			"trigger": "msql_fieldname()",
			"contents": "msql_fieldname()",
			"kind": "function"
		},
		{
			"trigger": "msql_fieldtable()",
			"contents": "msql_fieldtable()",
			"kind": "function"
		},
		{
			"trigger": "msql_fieldtype()",
			"contents": "msql_fieldtype()",
			"kind": "function"
		},
		{
			"trigger": "msql_free_result()",
			"contents": "msql_free_result(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "msql_list_dbs()",
			"contents": "msql_list_dbs()",
			"kind": "function"
		},
		{
			"trigger": "msql_list_fields()",
			"contents": "msql_list_fields(${1:database}, ${2:tablename})",
			"kind": "function"
		},
		{
			"trigger": "msql_list_tables()",
			"contents": "msql_list_tables(${1:database})",
			"kind": "function"
		},
		{
			"trigger": "msql_num_fields()",
			"contents": "msql_num_fields(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "msql_num_rows()",
			"contents": "msql_num_rows(${1:query_identifier})",
			"kind": "function"
		},
		{
			"trigger": "msql_numfields()",
			"contents": "msql_numfields()",
			"kind": "function"
		},
		{
			"trigger": "msql_numrows()",
			"contents": "msql_numrows()",
			"kind": "function"
		},
		{
			"trigger": "msql_pconnect()",
			"contents": "msql_pconnect()",
			"kind": "function"
		},
		{
			"trigger": "msql_query()",
			"contents": "msql_query(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "msql_regcase()",
			"contents": "msql_regcase()",
			"kind": "function"
		},
		{
			"trigger": "msql_result()",
			"contents": "msql_result(${1:result}, ${2:row})",
			"kind": "function"
		},
		{
			"trigger": "msql_select_db()",
			"contents": "msql_select_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "msql_tablename()",
			"contents": "msql_tablename()",
			"kind": "function"
		},
		{
			"trigger": "mssql_bind()",
			"contents": "mssql_bind(${1:stmt}, ${2:param_name}, ${3:var}, ${4:type})",
			"kind": "function"
		},
		{
			"trigger": "mssql_close()",
			"contents": "mssql_close()",
			"kind": "function"
		},
		{
			"trigger": "mssql_connect()",
			"contents": "mssql_connect()",
			"kind": "function"
		},
		{
			"trigger": "mssql_data_seek()",
			"contents": "mssql_data_seek(${1:result_identifier}, ${2:row_number})",
			"kind": "function"
		},
		{
			"trigger": "mssql_execute()",
			"contents": "mssql_execute(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "mssql_fetch_array()",
			"contents": "mssql_fetch_array(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_fetch_assoc()",
			"contents": "mssql_fetch_assoc(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "mssql_fetch_batch()",
			"contents": "mssql_fetch_batch(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_fetch_field()",
			"contents": "mssql_fetch_field(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_fetch_object()",
			"contents": "mssql_fetch_object(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_fetch_row()",
			"contents": "mssql_fetch_row(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_field_length()",
			"contents": "mssql_field_length(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_field_name()",
			"contents": "mssql_field_name(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_field_seek()",
			"contents": "mssql_field_seek(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "mssql_field_type()",
			"contents": "mssql_field_type(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_free_result()",
			"contents": "mssql_free_result(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_free_statement()",
			"contents": "mssql_free_statement(${1:stmt})",
			"kind": "function"
		},
		{
			"trigger": "mssql_get_last_message()",
			"contents": "mssql_get_last_message()",
			"kind": "function"
		},
		{
			"trigger": "mssql_guid_string()",
			"contents": "mssql_guid_string(${1:binary})",
			"kind": "function"
		},
		{
			"trigger": "mssql_init()",
			"contents": "mssql_init(${1:sp_name})",
			"kind": "function"
		},
		{
			"trigger": "mssql_min_error_severity()",
			"contents": "mssql_min_error_severity(${1:severity})",
			"kind": "function"
		},
		{
			"trigger": "mssql_min_message_severity()",
			"contents": "mssql_min_message_severity(${1:severity})",
			"kind": "function"
		},
		{
			"trigger": "mssql_next_result()",
			"contents": "mssql_next_result(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "mssql_num_fields()",
			"contents": "mssql_num_fields(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_num_rows()",
			"contents": "mssql_num_rows(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mssql_pconnect()",
			"contents": "mssql_pconnect()",
			"kind": "function"
		},
		{
			"trigger": "mssql_query()",
			"contents": "mssql_query(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "mssql_result()",
			"contents": "mssql_result(${1:result}, ${2:row}, ${3:field})",
			"kind": "function"
		},
		{
			"trigger": "mssql_rows_affected()",
			"contents": "mssql_rows_affected(${1:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "mssql_select_db()",
			"contents": "mssql_select_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "mt_getrandmax()",
			"contents": "mt_getrandmax()",
			"kind": "function"
		},
		{
			"trigger": "mt_rand()",
			"contents": "mt_rand()",
			"kind": "function"
		},
		{
			"trigger": "mt_srand()",
			"contents": "mt_srand()",
			"kind": "function"
		},
		{
			"trigger": "mysql_affected_rows()",
			"contents": "mysql_affected_rows()",
			"kind": "function"
		},
		{
			"trigger": "mysql_client_encoding()",
			"contents": "mysql_client_encoding()",
			"kind": "function"
		},
		{
			"trigger": "mysql_close()",
			"contents": "mysql_close()",
			"kind": "function"
		},
		{
			"trigger": "mysql_connect()",
			"contents": "mysql_connect()",
			"kind": "function"
		},
		{
			"trigger": "mysql_create_db()",
			"contents": "mysql_create_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "mysql_data_seek()",
			"contents": "mysql_data_seek(${1:result}, ${2:row_number})",
			"kind": "function"
		},
		{
			"trigger": "mysql_db_name()",
			"contents": "mysql_db_name(${1:result}, ${2:row})",
			"kind": "function"
		},
		{
			"trigger": "mysql_db_query()",
			"contents": "mysql_db_query(${1:database}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "mysql_drop_db()",
			"contents": "mysql_drop_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "mysql_errno()",
			"contents": "mysql_errno()",
			"kind": "function"
		},
		{
			"trigger": "mysql_error()",
			"contents": "mysql_error()",
			"kind": "function"
		},
		{
			"trigger": "mysql_escape_string()",
			"contents": "mysql_escape_string(${1:unescaped_string})",
			"kind": "function"
		},
		{
			"trigger": "mysql_fetch_array()",
			"contents": "mysql_fetch_array(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mysql_fetch_assoc()",
			"contents": "mysql_fetch_assoc(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mysql_fetch_field()",
			"contents": "mysql_fetch_field(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mysql_fetch_lengths()",
			"contents": "mysql_fetch_lengths(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mysql_fetch_object()",
			"contents": "mysql_fetch_object(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mysql_fetch_row()",
			"contents": "mysql_fetch_row(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mysql_field_flags()",
			"contents": "mysql_field_flags(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "mysql_field_len()",
			"contents": "mysql_field_len(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "mysql_field_name()",
			"contents": "mysql_field_name(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "mysql_field_seek()",
			"contents": "mysql_field_seek(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "mysql_field_table()",
			"contents": "mysql_field_table(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "mysql_field_type()",
			"contents": "mysql_field_type(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "mysql_free_result()",
			"contents": "mysql_free_result(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mysql_get_client_info()",
			"contents": "mysql_get_client_info()",
			"kind": "function"
		},
		{
			"trigger": "mysql_get_host_info()",
			"contents": "mysql_get_host_info()",
			"kind": "function"
		},
		{
			"trigger": "mysql_get_proto_info()",
			"contents": "mysql_get_proto_info()",
			"kind": "function"
		},
		{
			"trigger": "mysql_get_server_info()",
			"contents": "mysql_get_server_info()",
			"kind": "function"
		},
		{
			"trigger": "mysql_info()",
			"contents": "mysql_info()",
			"kind": "function"
		},
		{
			"trigger": "mysql_insert_id()",
			"contents": "mysql_insert_id()",
			"kind": "function"
		},
		{
			"trigger": "mysql_list_dbs()",
			"contents": "mysql_list_dbs()",
			"kind": "function"
		},
		{
			"trigger": "mysql_list_fields()",
			"contents": "mysql_list_fields(${1:database_name}, ${2:table_name})",
			"kind": "function"
		},
		{
			"trigger": "mysql_list_processes()",
			"contents": "mysql_list_processes()",
			"kind": "function"
		},
		{
			"trigger": "mysql_list_tables()",
			"contents": "mysql_list_tables(${1:database})",
			"kind": "function"
		},
		{
			"trigger": "mysql_num_fields()",
			"contents": "mysql_num_fields(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mysql_num_rows()",
			"contents": "mysql_num_rows(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "mysql_pconnect()",
			"contents": "mysql_pconnect()",
			"kind": "function"
		},
		{
			"trigger": "mysql_ping()",
			"contents": "mysql_ping()",
			"kind": "function"
		},
		{
			"trigger": "mysql_query()",
			"contents": "mysql_query(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "mysql_real_escape_string()",
			"contents": "mysql_real_escape_string(${1:unescaped_string})",
			"kind": "function"
		},
		{
			"trigger": "mysql_result()",
			"contents": "mysql_result(${1:result}, ${2:row})",
			"kind": "function"
		},
		{
			"trigger": "mysql_select_db()",
			"contents": "mysql_select_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "mysql_set_charset()",
			"contents": "mysql_set_charset(${1:charset})",
			"kind": "function"
		},
		{
			"trigger": "mysql_stat()",
			"contents": "mysql_stat()",
			"kind": "function"
		},
		{
			"trigger": "mysql_tablename()",
			"contents": "mysql_tablename(${1:result}, ${2:i})",
			"kind": "function"
		},
		{
			"trigger": "mysql_thread_id()",
			"contents": "mysql_thread_id()",
			"kind": "function"
		},
		{
			"trigger": "mysql_unbuffered_query()",
			"contents": "mysql_unbuffered_query(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "mysqli_bind_param()",
			"contents": "mysqli_bind_param()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_bind_result()",
			"contents": "mysqli_bind_result()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_client_encoding()",
			"contents": "mysqli_client_encoding()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_connect()",
			"contents": "mysqli_connect()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_disable_rpl_parse()",
			"contents": "mysqli_disable_rpl_parse(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "mysqli_enable_reads_from_master()",
			"contents": "mysqli_enable_reads_from_master(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "mysqli_enable_rpl_parse()",
			"contents": "mysqli_enable_rpl_parse(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "mysqli_escape_string()",
			"contents": "mysqli_escape_string()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_execute()",
			"contents": "mysqli_execute()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_fetch()",
			"contents": "mysqli_fetch()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_get_metadata()",
			"contents": "mysqli_get_metadata()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_master_query()",
			"contents": "mysqli_master_query(${1:link}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "mysqli_param_count()",
			"contents": "mysqli_param_count()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_report()",
			"contents": "mysqli_report(${1:flags})",
			"kind": "function"
		},
		{
			"trigger": "mysqli_rpl_parse_enabled()",
			"contents": "mysqli_rpl_parse_enabled(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "mysqli_rpl_probe()",
			"contents": "mysqli_rpl_probe(${1:link})",
			"kind": "function"
		},
		{
			"trigger": "mysqli_send_long_data()",
			"contents": "mysqli_send_long_data()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_set_opt()",
			"contents": "mysqli_set_opt()",
			"kind": "function"
		},
		{
			"trigger": "mysqli_slave_query()",
			"contents": "mysqli_slave_query(${1:link}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "mysqlnd_qc_change_handler()",
			"contents": "mysqlnd_qc_change_handler(${1:handler})",
			"kind": "function"
		},
		{
			"trigger": "mysqlnd_qc_clear_cache()",
			"contents": "mysqlnd_qc_clear_cache()",
			"kind": "function"
		},
		{
			"trigger": "mysqlnd_qc_get_cache_info()",
			"contents": "mysqlnd_qc_get_cache_info()",
			"kind": "function"
		},
		{
			"trigger": "mysqlnd_qc_get_core_stats()",
			"contents": "mysqlnd_qc_get_core_stats()",
			"kind": "function"
		},
		{
			"trigger": "mysqlnd_qc_get_handler()",
			"contents": "mysqlnd_qc_get_handler()",
			"kind": "function"
		},
		{
			"trigger": "mysqlnd_qc_get_query_trace_log()",
			"contents": "mysqlnd_qc_get_query_trace_log()",
			"kind": "function"
		},
		{
			"trigger": "mysqlnd_qc_set_user_handlers()",
			"contents": "mysqlnd_qc_set_user_handlers(${1:get_hash}, ${2:find_query_in_cache}, ${3:return_to_cache}, ${4:add_query_to_cache_if_not_exists}, ${5:query_is_select}, ${6:update_query_run_time_stats}, ${7:get_stats}, ${8:clear_cache})",
			"kind": "function"
		},
		{
			"trigger": "natcasesort()",
			"contents": "natcasesort(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "natsort()",
			"contents": "natsort(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_addch()",
			"contents": "ncurses_addch(${1:ch})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_addchnstr()",
			"contents": "ncurses_addchnstr(${1:s}, ${2:n})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_addchstr()",
			"contents": "ncurses_addchstr(${1:s})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_addnstr()",
			"contents": "ncurses_addnstr(${1:s}, ${2:n})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_addstr()",
			"contents": "ncurses_addstr(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_assume_default_colors()",
			"contents": "ncurses_assume_default_colors(${1:fg}, ${2:bg})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_attroff()",
			"contents": "ncurses_attroff(${1:attributes})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_attron()",
			"contents": "ncurses_attron(${1:attributes})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_attrset()",
			"contents": "ncurses_attrset(${1:attributes})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_baudrate()",
			"contents": "ncurses_baudrate()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_beep()",
			"contents": "ncurses_beep()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_bkgd()",
			"contents": "ncurses_bkgd(${1:attrchar})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_bkgdset()",
			"contents": "ncurses_bkgdset(${1:attrchar})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_border()",
			"contents": "ncurses_border(${1:left}, ${2:right}, ${3:top}, ${4:bottom}, ${5:tl_corner}, ${6:tr_corner}, ${7:bl_corner}, ${8:br_corner})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_bottom_panel()",
			"contents": "ncurses_bottom_panel(${1:panel})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_can_change_color()",
			"contents": "ncurses_can_change_color()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_cbreak()",
			"contents": "ncurses_cbreak()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_clear()",
			"contents": "ncurses_clear()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_clrtobot()",
			"contents": "ncurses_clrtobot()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_clrtoeol()",
			"contents": "ncurses_clrtoeol()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_color_content()",
			"contents": "ncurses_color_content(${1:color}, ${2:r}, ${3:g}, ${4:b})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_color_set()",
			"contents": "ncurses_color_set(${1:pair})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_curs_set()",
			"contents": "ncurses_curs_set(${1:visibility})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_def_prog_mode()",
			"contents": "ncurses_def_prog_mode()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_def_shell_mode()",
			"contents": "ncurses_def_shell_mode()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_define_key()",
			"contents": "ncurses_define_key(${1:definition}, ${2:keycode})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_del_panel()",
			"contents": "ncurses_del_panel(${1:panel})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_delay_output()",
			"contents": "ncurses_delay_output(${1:milliseconds})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_delch()",
			"contents": "ncurses_delch()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_deleteln()",
			"contents": "ncurses_deleteln()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_delwin()",
			"contents": "ncurses_delwin(${1:window})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_doupdate()",
			"contents": "ncurses_doupdate()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_echo()",
			"contents": "ncurses_echo()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_echochar()",
			"contents": "ncurses_echochar(${1:character})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_end()",
			"contents": "ncurses_end()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_erase()",
			"contents": "ncurses_erase()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_erasechar()",
			"contents": "ncurses_erasechar()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_filter()",
			"contents": "ncurses_filter()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_flash()",
			"contents": "ncurses_flash()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_flushinp()",
			"contents": "ncurses_flushinp()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_getch()",
			"contents": "ncurses_getch()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_getmaxyx()",
			"contents": "ncurses_getmaxyx(${1:window}, ${2:y}, ${3:x})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_getmouse()",
			"contents": "ncurses_getmouse(${1:mevent})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_getyx()",
			"contents": "ncurses_getyx(${1:window}, ${2:y}, ${3:x})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_halfdelay()",
			"contents": "ncurses_halfdelay(${1:tenth})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_has_colors()",
			"contents": "ncurses_has_colors()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_has_ic()",
			"contents": "ncurses_has_ic()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_has_il()",
			"contents": "ncurses_has_il()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_has_key()",
			"contents": "ncurses_has_key(${1:keycode})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_hide_panel()",
			"contents": "ncurses_hide_panel(${1:panel})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_hline()",
			"contents": "ncurses_hline(${1:charattr}, ${2:n})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_inch()",
			"contents": "ncurses_inch()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_init()",
			"contents": "ncurses_init()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_init_color()",
			"contents": "ncurses_init_color(${1:color}, ${2:r}, ${3:g}, ${4:b})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_init_pair()",
			"contents": "ncurses_init_pair(${1:pair}, ${2:fg}, ${3:bg})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_insch()",
			"contents": "ncurses_insch(${1:character})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_insdelln()",
			"contents": "ncurses_insdelln(${1:count})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_insertln()",
			"contents": "ncurses_insertln()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_insstr()",
			"contents": "ncurses_insstr(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_instr()",
			"contents": "ncurses_instr(${1:buffer})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_isendwin()",
			"contents": "ncurses_isendwin()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_keyok()",
			"contents": "ncurses_keyok(${1:keycode}, ${2:enable})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_keypad()",
			"contents": "ncurses_keypad(${1:window}, ${2:bf})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_killchar()",
			"contents": "ncurses_killchar()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_longname()",
			"contents": "ncurses_longname()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_meta()",
			"contents": "ncurses_meta(${1:window}, ${2:8bit})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mouse_trafo()",
			"contents": "ncurses_mouse_trafo(${1:y}, ${2:x}, ${3:toscreen})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mouseinterval()",
			"contents": "ncurses_mouseinterval(${1:milliseconds})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mousemask()",
			"contents": "ncurses_mousemask(${1:newmask}, ${2:oldmask})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_move()",
			"contents": "ncurses_move(${1:y}, ${2:x})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_move_panel()",
			"contents": "ncurses_move_panel(${1:panel}, ${2:startx}, ${3:starty})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvaddch()",
			"contents": "ncurses_mvaddch(${1:y}, ${2:x}, ${3:c})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvaddchnstr()",
			"contents": "ncurses_mvaddchnstr(${1:y}, ${2:x}, ${3:s}, ${4:n})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvaddchstr()",
			"contents": "ncurses_mvaddchstr(${1:y}, ${2:x}, ${3:s})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvaddnstr()",
			"contents": "ncurses_mvaddnstr(${1:y}, ${2:x}, ${3:s}, ${4:n})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvaddstr()",
			"contents": "ncurses_mvaddstr(${1:y}, ${2:x}, ${3:s})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvcur()",
			"contents": "ncurses_mvcur(${1:old_y}, ${2:old_x}, ${3:new_y}, ${4:new_x})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvdelch()",
			"contents": "ncurses_mvdelch(${1:y}, ${2:x})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvgetch()",
			"contents": "ncurses_mvgetch(${1:y}, ${2:x})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvhline()",
			"contents": "ncurses_mvhline(${1:y}, ${2:x}, ${3:attrchar}, ${4:n})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvinch()",
			"contents": "ncurses_mvinch(${1:y}, ${2:x})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvvline()",
			"contents": "ncurses_mvvline(${1:y}, ${2:x}, ${3:attrchar}, ${4:n})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_mvwaddstr()",
			"contents": "ncurses_mvwaddstr(${1:window}, ${2:y}, ${3:x}, ${4:text})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_napms()",
			"contents": "ncurses_napms(${1:milliseconds})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_new_panel()",
			"contents": "ncurses_new_panel(${1:window})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_newpad()",
			"contents": "ncurses_newpad(${1:rows}, ${2:cols})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_newwin()",
			"contents": "ncurses_newwin(${1:rows}, ${2:cols}, ${3:y}, ${4:x})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_nl()",
			"contents": "ncurses_nl()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_nocbreak()",
			"contents": "ncurses_nocbreak()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_noecho()",
			"contents": "ncurses_noecho()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_nonl()",
			"contents": "ncurses_nonl()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_noqiflush()",
			"contents": "ncurses_noqiflush()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_noraw()",
			"contents": "ncurses_noraw()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_pair_content()",
			"contents": "ncurses_pair_content(${1:pair}, ${2:f}, ${3:b})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_panel_above()",
			"contents": "ncurses_panel_above(${1:panel})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_panel_below()",
			"contents": "ncurses_panel_below(${1:panel})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_panel_window()",
			"contents": "ncurses_panel_window(${1:panel})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_pnoutrefresh()",
			"contents": "ncurses_pnoutrefresh(${1:pad}, ${2:pminrow}, ${3:pmincol}, ${4:sminrow}, ${5:smincol}, ${6:smaxrow}, ${7:smaxcol})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_prefresh()",
			"contents": "ncurses_prefresh(${1:pad}, ${2:pminrow}, ${3:pmincol}, ${4:sminrow}, ${5:smincol}, ${6:smaxrow}, ${7:smaxcol})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_putp()",
			"contents": "ncurses_putp(${1:text})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_qiflush()",
			"contents": "ncurses_qiflush()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_raw()",
			"contents": "ncurses_raw()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_refresh()",
			"contents": "ncurses_refresh(${1:ch})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_replace_panel()",
			"contents": "ncurses_replace_panel(${1:panel}, ${2:window})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_reset_prog_mode()",
			"contents": "ncurses_reset_prog_mode()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_reset_shell_mode()",
			"contents": "ncurses_reset_shell_mode()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_resetty()",
			"contents": "ncurses_resetty()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_savetty()",
			"contents": "ncurses_savetty()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_scr_dump()",
			"contents": "ncurses_scr_dump(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_scr_init()",
			"contents": "ncurses_scr_init(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_scr_restore()",
			"contents": "ncurses_scr_restore(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_scr_set()",
			"contents": "ncurses_scr_set(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_scrl()",
			"contents": "ncurses_scrl(${1:count})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_show_panel()",
			"contents": "ncurses_show_panel(${1:panel})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_attr()",
			"contents": "ncurses_slk_attr()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_attroff()",
			"contents": "ncurses_slk_attroff(${1:intarg})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_attron()",
			"contents": "ncurses_slk_attron(${1:intarg})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_attrset()",
			"contents": "ncurses_slk_attrset(${1:intarg})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_clear()",
			"contents": "ncurses_slk_clear()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_color()",
			"contents": "ncurses_slk_color(${1:intarg})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_init()",
			"contents": "ncurses_slk_init(${1:format})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_noutrefresh()",
			"contents": "ncurses_slk_noutrefresh()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_refresh()",
			"contents": "ncurses_slk_refresh()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_restore()",
			"contents": "ncurses_slk_restore()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_set()",
			"contents": "ncurses_slk_set(${1:labelnr}, ${2:label}, ${3:format})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_slk_touch()",
			"contents": "ncurses_slk_touch()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_standend()",
			"contents": "ncurses_standend()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_standout()",
			"contents": "ncurses_standout()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_start_color()",
			"contents": "ncurses_start_color()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_termattrs()",
			"contents": "ncurses_termattrs()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_termname()",
			"contents": "ncurses_termname()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_timeout()",
			"contents": "ncurses_timeout(${1:millisec})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_top_panel()",
			"contents": "ncurses_top_panel(${1:panel})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_typeahead()",
			"contents": "ncurses_typeahead(${1:fd})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_ungetch()",
			"contents": "ncurses_ungetch(${1:keycode})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_ungetmouse()",
			"contents": "ncurses_ungetmouse(${1:mevent})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_update_panels()",
			"contents": "ncurses_update_panels()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_use_default_colors()",
			"contents": "ncurses_use_default_colors()",
			"kind": "function"
		},
		{
			"trigger": "ncurses_use_env()",
			"contents": "ncurses_use_env(${1:flag})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_use_extended_names()",
			"contents": "ncurses_use_extended_names(${1:flag})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_vidattr()",
			"contents": "ncurses_vidattr(${1:intarg})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_vline()",
			"contents": "ncurses_vline(${1:charattr}, ${2:n})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_waddch()",
			"contents": "ncurses_waddch(${1:window}, ${2:ch})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_waddstr()",
			"contents": "ncurses_waddstr(${1:window}, ${2:str})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wattroff()",
			"contents": "ncurses_wattroff(${1:window}, ${2:attrs})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wattron()",
			"contents": "ncurses_wattron(${1:window}, ${2:attrs})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wattrset()",
			"contents": "ncurses_wattrset(${1:window}, ${2:attrs})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wborder()",
			"contents": "ncurses_wborder(${1:window}, ${2:left}, ${3:right}, ${4:top}, ${5:bottom}, ${6:tl_corner}, ${7:tr_corner}, ${8:bl_corner}, ${9:br_corner})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wclear()",
			"contents": "ncurses_wclear(${1:window})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wcolor_set()",
			"contents": "ncurses_wcolor_set(${1:window}, ${2:color_pair})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_werase()",
			"contents": "ncurses_werase(${1:window})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wgetch()",
			"contents": "ncurses_wgetch(${1:window})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_whline()",
			"contents": "ncurses_whline(${1:window}, ${2:charattr}, ${3:n})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wmouse_trafo()",
			"contents": "ncurses_wmouse_trafo(${1:window}, ${2:y}, ${3:x}, ${4:toscreen})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wmove()",
			"contents": "ncurses_wmove(${1:window}, ${2:y}, ${3:x})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wnoutrefresh()",
			"contents": "ncurses_wnoutrefresh(${1:window})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wrefresh()",
			"contents": "ncurses_wrefresh(${1:window})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wstandend()",
			"contents": "ncurses_wstandend(${1:window})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wstandout()",
			"contents": "ncurses_wstandout(${1:window})",
			"kind": "function"
		},
		{
			"trigger": "ncurses_wvline()",
			"contents": "ncurses_wvline(${1:window}, ${2:charattr}, ${3:n})",
			"kind": "function"
		},
		{
			"trigger": "newt_bell()",
			"contents": "newt_bell()",
			"kind": "function"
		},
		{
			"trigger": "newt_button()",
			"contents": "newt_button(${1:left}, ${2:top}, ${3:text})",
			"kind": "function"
		},
		{
			"trigger": "newt_button_bar()",
			"contents": "newt_button_bar(${1:buttons})",
			"kind": "function"
		},
		{
			"trigger": "newt_centered_window()",
			"contents": "newt_centered_window(${1:width}, ${2:height})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox()",
			"contents": "newt_checkbox(${1:left}, ${2:top}, ${3:text}, ${4:def_value})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_get_value()",
			"contents": "newt_checkbox_get_value(${1:checkbox})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_set_flags()",
			"contents": "newt_checkbox_set_flags(${1:checkbox}, ${2:flags}, ${3:sense})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_set_value()",
			"contents": "newt_checkbox_set_value(${1:checkbox}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree()",
			"contents": "newt_checkbox_tree(${1:left}, ${2:top}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_add_item()",
			"contents": "newt_checkbox_tree_add_item(${1:checkboxtree}, ${2:text}, ${3:data}, ${4:flags}, ${5:index})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_find_item()",
			"contents": "newt_checkbox_tree_find_item(${1:checkboxtree}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_get_current()",
			"contents": "newt_checkbox_tree_get_current(${1:checkboxtree})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_get_entry_value()",
			"contents": "newt_checkbox_tree_get_entry_value(${1:checkboxtree}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_get_multi_selection()",
			"contents": "newt_checkbox_tree_get_multi_selection(${1:checkboxtree}, ${2:seqnum})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_get_selection()",
			"contents": "newt_checkbox_tree_get_selection(${1:checkboxtree})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_multi()",
			"contents": "newt_checkbox_tree_multi(${1:left}, ${2:top}, ${3:height}, ${4:seq})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_set_current()",
			"contents": "newt_checkbox_tree_set_current(${1:checkboxtree}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_set_entry()",
			"contents": "newt_checkbox_tree_set_entry(${1:checkboxtree}, ${2:data}, ${3:text})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_set_entry_value()",
			"contents": "newt_checkbox_tree_set_entry_value(${1:checkboxtree}, ${2:data}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "newt_checkbox_tree_set_width()",
			"contents": "newt_checkbox_tree_set_width(${1:checkbox_tree}, ${2:width})",
			"kind": "function"
		},
		{
			"trigger": "newt_clear_key_buffer()",
			"contents": "newt_clear_key_buffer()",
			"kind": "function"
		},
		{
			"trigger": "newt_cls()",
			"contents": "newt_cls()",
			"kind": "function"
		},
		{
			"trigger": "newt_compact_button()",
			"contents": "newt_compact_button(${1:left}, ${2:top}, ${3:text})",
			"kind": "function"
		},
		{
			"trigger": "newt_component_add_callback()",
			"contents": "newt_component_add_callback(${1:component}, ${2:func_name}, ${3:data})",
			"kind": "function"
		},
		{
			"trigger": "newt_component_takes_focus()",
			"contents": "newt_component_takes_focus(${1:component}, ${2:takes_focus})",
			"kind": "function"
		},
		{
			"trigger": "newt_create_grid()",
			"contents": "newt_create_grid(${1:cols}, ${2:rows})",
			"kind": "function"
		},
		{
			"trigger": "newt_cursor_off()",
			"contents": "newt_cursor_off()",
			"kind": "function"
		},
		{
			"trigger": "newt_cursor_on()",
			"contents": "newt_cursor_on()",
			"kind": "function"
		},
		{
			"trigger": "newt_delay()",
			"contents": "newt_delay(${1:microseconds})",
			"kind": "function"
		},
		{
			"trigger": "newt_draw_form()",
			"contents": "newt_draw_form(${1:form})",
			"kind": "function"
		},
		{
			"trigger": "newt_draw_root_text()",
			"contents": "newt_draw_root_text(${1:left}, ${2:top}, ${3:text})",
			"kind": "function"
		},
		{
			"trigger": "newt_entry()",
			"contents": "newt_entry(${1:left}, ${2:top}, ${3:width})",
			"kind": "function"
		},
		{
			"trigger": "newt_entry_get_value()",
			"contents": "newt_entry_get_value(${1:entry})",
			"kind": "function"
		},
		{
			"trigger": "newt_entry_set()",
			"contents": "newt_entry_set(${1:entry}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "newt_entry_set_filter()",
			"contents": "newt_entry_set_filter(${1:entry}, ${2:filter}, ${3:data})",
			"kind": "function"
		},
		{
			"trigger": "newt_entry_set_flags()",
			"contents": "newt_entry_set_flags(${1:entry}, ${2:flags}, ${3:sense})",
			"kind": "function"
		},
		{
			"trigger": "newt_finished()",
			"contents": "newt_finished()",
			"kind": "function"
		},
		{
			"trigger": "newt_form()",
			"contents": "newt_form()",
			"kind": "function"
		},
		{
			"trigger": "newt_form_add_component()",
			"contents": "newt_form_add_component(${1:form}, ${2:component})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_add_components()",
			"contents": "newt_form_add_components(${1:form}, ${2:components})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_add_hot_key()",
			"contents": "newt_form_add_hot_key(${1:form}, ${2:key})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_destroy()",
			"contents": "newt_form_destroy(${1:form})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_get_current()",
			"contents": "newt_form_get_current(${1:form})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_run()",
			"contents": "newt_form_run(${1:form}, ${2:exit_struct})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_set_background()",
			"contents": "newt_form_set_background(${1:from}, ${2:background})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_set_height()",
			"contents": "newt_form_set_height(${1:form}, ${2:height})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_set_size()",
			"contents": "newt_form_set_size(${1:form})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_set_timer()",
			"contents": "newt_form_set_timer(${1:form}, ${2:milliseconds})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_set_width()",
			"contents": "newt_form_set_width(${1:form}, ${2:width})",
			"kind": "function"
		},
		{
			"trigger": "newt_form_watch_fd()",
			"contents": "newt_form_watch_fd(${1:form}, ${2:stream})",
			"kind": "function"
		},
		{
			"trigger": "newt_get_screen_size()",
			"contents": "newt_get_screen_size(${1:cols}, ${2:rows})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_add_components_to_form()",
			"contents": "newt_grid_add_components_to_form(${1:grid}, ${2:form}, ${3:recurse})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_basic_window()",
			"contents": "newt_grid_basic_window(${1:text}, ${2:middle}, ${3:buttons})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_free()",
			"contents": "newt_grid_free(${1:grid}, ${2:recurse})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_get_size()",
			"contents": "newt_grid_get_size(${1:grid}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_h_close_stacked()",
			"contents": "newt_grid_h_close_stacked(${1:element1_type}, ${2:element1})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_h_stacked()",
			"contents": "newt_grid_h_stacked(${1:element1_type}, ${2:element1})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_place()",
			"contents": "newt_grid_place(${1:grid}, ${2:left}, ${3:top})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_set_field()",
			"contents": "newt_grid_set_field(${1:grid}, ${2:col}, ${3:row}, ${4:type}, ${5:val}, ${6:pad_left}, ${7:pad_top}, ${8:pad_right}, ${9:pad_bottom}, ${10:anchor})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_simple_window()",
			"contents": "newt_grid_simple_window(${1:text}, ${2:middle}, ${3:buttons})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_v_close_stacked()",
			"contents": "newt_grid_v_close_stacked(${1:element1_type}, ${2:element1})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_v_stacked()",
			"contents": "newt_grid_v_stacked(${1:element1_type}, ${2:element1})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_wrapped_window()",
			"contents": "newt_grid_wrapped_window(${1:grid}, ${2:title})",
			"kind": "function"
		},
		{
			"trigger": "newt_grid_wrapped_window_at()",
			"contents": "newt_grid_wrapped_window_at(${1:grid}, ${2:title}, ${3:left}, ${4:top})",
			"kind": "function"
		},
		{
			"trigger": "newt_init()",
			"contents": "newt_init()",
			"kind": "function"
		},
		{
			"trigger": "newt_label()",
			"contents": "newt_label(${1:left}, ${2:top}, ${3:text})",
			"kind": "function"
		},
		{
			"trigger": "newt_label_set_text()",
			"contents": "newt_label_set_text(${1:label}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox()",
			"contents": "newt_listbox(${1:left}, ${2:top}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_append_entry()",
			"contents": "newt_listbox_append_entry(${1:listbox}, ${2:text}, ${3:data})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_clear()",
			"contents": "newt_listbox_clear(${1:listobx})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_clear_selection()",
			"contents": "newt_listbox_clear_selection(${1:listbox})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_delete_entry()",
			"contents": "newt_listbox_delete_entry(${1:listbox}, ${2:key})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_get_current()",
			"contents": "newt_listbox_get_current(${1:listbox})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_get_selection()",
			"contents": "newt_listbox_get_selection(${1:listbox})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_insert_entry()",
			"contents": "newt_listbox_insert_entry(${1:listbox}, ${2:text}, ${3:data}, ${4:key})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_item_count()",
			"contents": "newt_listbox_item_count(${1:listbox})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_select_item()",
			"contents": "newt_listbox_select_item(${1:listbox}, ${2:key}, ${3:sense})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_set_current()",
			"contents": "newt_listbox_set_current(${1:listbox}, ${2:num})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_set_current_by_key()",
			"contents": "newt_listbox_set_current_by_key(${1:listbox}, ${2:key})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_set_data()",
			"contents": "newt_listbox_set_data(${1:listbox}, ${2:num}, ${3:data})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_set_entry()",
			"contents": "newt_listbox_set_entry(${1:listbox}, ${2:num}, ${3:text})",
			"kind": "function"
		},
		{
			"trigger": "newt_listbox_set_width()",
			"contents": "newt_listbox_set_width(${1:listbox}, ${2:width})",
			"kind": "function"
		},
		{
			"trigger": "newt_listitem()",
			"contents": "newt_listitem(${1:left}, ${2:top}, ${3:text}, ${4:is_default}, ${5:prev_item}, ${6:data})",
			"kind": "function"
		},
		{
			"trigger": "newt_listitem_get_data()",
			"contents": "newt_listitem_get_data(${1:item})",
			"kind": "function"
		},
		{
			"trigger": "newt_listitem_set()",
			"contents": "newt_listitem_set(${1:item}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "newt_open_window()",
			"contents": "newt_open_window(${1:left}, ${2:top}, ${3:width}, ${4:height})",
			"kind": "function"
		},
		{
			"trigger": "newt_pop_help_line()",
			"contents": "newt_pop_help_line()",
			"kind": "function"
		},
		{
			"trigger": "newt_pop_window()",
			"contents": "newt_pop_window()",
			"kind": "function"
		},
		{
			"trigger": "newt_push_help_line()",
			"contents": "newt_push_help_line()",
			"kind": "function"
		},
		{
			"trigger": "newt_radio_get_current()",
			"contents": "newt_radio_get_current(${1:set_member})",
			"kind": "function"
		},
		{
			"trigger": "newt_radiobutton()",
			"contents": "newt_radiobutton(${1:left}, ${2:top}, ${3:text}, ${4:is_default})",
			"kind": "function"
		},
		{
			"trigger": "newt_redraw_help_line()",
			"contents": "newt_redraw_help_line()",
			"kind": "function"
		},
		{
			"trigger": "newt_reflow_text()",
			"contents": "newt_reflow_text(${1:text}, ${2:width}, ${3:flex_down}, ${4:flex_up}, ${5:actual_width}, ${6:actual_height})",
			"kind": "function"
		},
		{
			"trigger": "newt_refresh()",
			"contents": "newt_refresh()",
			"kind": "function"
		},
		{
			"trigger": "newt_resize_screen()",
			"contents": "newt_resize_screen()",
			"kind": "function"
		},
		{
			"trigger": "newt_resume()",
			"contents": "newt_resume()",
			"kind": "function"
		},
		{
			"trigger": "newt_run_form()",
			"contents": "newt_run_form(${1:form})",
			"kind": "function"
		},
		{
			"trigger": "newt_scale()",
			"contents": "newt_scale(${1:left}, ${2:top}, ${3:width}, ${4:full_value})",
			"kind": "function"
		},
		{
			"trigger": "newt_scale_set()",
			"contents": "newt_scale_set(${1:scale}, ${2:amount})",
			"kind": "function"
		},
		{
			"trigger": "newt_scrollbar_set()",
			"contents": "newt_scrollbar_set(${1:scrollbar}, ${2:where}, ${3:total})",
			"kind": "function"
		},
		{
			"trigger": "newt_set_help_callback()",
			"contents": "newt_set_help_callback(${1:function})",
			"kind": "function"
		},
		{
			"trigger": "newt_set_suspend_callback()",
			"contents": "newt_set_suspend_callback(${1:function}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "newt_suspend()",
			"contents": "newt_suspend()",
			"kind": "function"
		},
		{
			"trigger": "newt_textbox()",
			"contents": "newt_textbox(${1:left}, ${2:top}, ${3:width}, ${4:height})",
			"kind": "function"
		},
		{
			"trigger": "newt_textbox_get_num_lines()",
			"contents": "newt_textbox_get_num_lines(${1:textbox})",
			"kind": "function"
		},
		{
			"trigger": "newt_textbox_reflowed()",
			"contents": "newt_textbox_reflowed(${1:left}, ${2:top}, ${3:*text}, ${4:width}, ${5:flex_down}, ${6:flex_up})",
			"kind": "function"
		},
		{
			"trigger": "newt_textbox_set_height()",
			"contents": "newt_textbox_set_height(${1:textbox}, ${2:height})",
			"kind": "function"
		},
		{
			"trigger": "newt_textbox_set_text()",
			"contents": "newt_textbox_set_text(${1:textbox}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "newt_vertical_scrollbar()",
			"contents": "newt_vertical_scrollbar(${1:left}, ${2:top}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "newt_wait_for_key()",
			"contents": "newt_wait_for_key()",
			"kind": "function"
		},
		{
			"trigger": "newt_win_choice()",
			"contents": "newt_win_choice(${1:title}, ${2:button1_text}, ${3:button2_text}, ${4:format})",
			"kind": "function"
		},
		{
			"trigger": "newt_win_entries()",
			"contents": "newt_win_entries(${1:title}, ${2:text}, ${3:suggested_width}, ${4:flex_down}, ${5:flex_up}, ${6:data_width}, ${7:items}, ${8:button1})",
			"kind": "function"
		},
		{
			"trigger": "newt_win_menu()",
			"contents": "newt_win_menu(${1:title}, ${2:text}, ${3:suggestedWidth}, ${4:flexDown}, ${5:flexUp}, ${6:maxListHeight}, ${7:items}, ${8:listItem})",
			"kind": "function"
		},
		{
			"trigger": "newt_win_message()",
			"contents": "newt_win_message(${1:title}, ${2:button_text}, ${3:format})",
			"kind": "function"
		},
		{
			"trigger": "newt_win_messagev()",
			"contents": "newt_win_messagev(${1:title}, ${2:button_text}, ${3:format}, ${4:args})",
			"kind": "function"
		},
		{
			"trigger": "newt_win_ternary()",
			"contents": "newt_win_ternary(${1:title}, ${2:button1_text}, ${3:button2_text}, ${4:button3_text}, ${5:format})",
			"kind": "function"
		},
		{
			"trigger": "next()",
			"contents": "next(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "ngettext()",
			"contents": "ngettext(${1:msgid1}, ${2:msgid2}, ${3:n})",
			"kind": "function"
		},
		{
			"trigger": "nl2br()",
			"contents": "nl2br(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "nl_langinfo()",
			"contents": "nl_langinfo(${1:item})",
			"kind": "function"
		},
		{
			"trigger": "notes_body()",
			"contents": "notes_body(${1:server}, ${2:mailbox}, ${3:msg_number})",
			"kind": "function"
		},
		{
			"trigger": "notes_copy_db()",
			"contents": "notes_copy_db(${1:from_database_name}, ${2:to_database_name})",
			"kind": "function"
		},
		{
			"trigger": "notes_create_db()",
			"contents": "notes_create_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "notes_create_note()",
			"contents": "notes_create_note(${1:database_name}, ${2:form_name})",
			"kind": "function"
		},
		{
			"trigger": "notes_drop_db()",
			"contents": "notes_drop_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "notes_find_note()",
			"contents": "notes_find_note(${1:database_name}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "notes_header_info()",
			"contents": "notes_header_info(${1:server}, ${2:mailbox}, ${3:msg_number})",
			"kind": "function"
		},
		{
			"trigger": "notes_list_msgs()",
			"contents": "notes_list_msgs(${1:db})",
			"kind": "function"
		},
		{
			"trigger": "notes_mark_read()",
			"contents": "notes_mark_read(${1:database_name}, ${2:user_name}, ${3:note_id})",
			"kind": "function"
		},
		{
			"trigger": "notes_mark_unread()",
			"contents": "notes_mark_unread(${1:database_name}, ${2:user_name}, ${3:note_id})",
			"kind": "function"
		},
		{
			"trigger": "notes_nav_create()",
			"contents": "notes_nav_create(${1:database_name}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "notes_search()",
			"contents": "notes_search(${1:database_name}, ${2:keywords})",
			"kind": "function"
		},
		{
			"trigger": "notes_unread()",
			"contents": "notes_unread(${1:database_name}, ${2:user_name})",
			"kind": "function"
		},
		{
			"trigger": "notes_version()",
			"contents": "notes_version(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "nsapi_request_headers()",
			"contents": "nsapi_request_headers()",
			"kind": "function"
		},
		{
			"trigger": "nsapi_response_headers()",
			"contents": "nsapi_response_headers()",
			"kind": "function"
		},
		{
			"trigger": "nsapi_virtual()",
			"contents": "nsapi_virtual(${1:uri})",
			"kind": "function"
		},
		{
			"trigger": "nthmac()",
			"contents": "nthmac(${1:clent}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "number_format()",
			"contents": "number_format(${1:number})",
			"kind": "function"
		},
		{
			"trigger": "oauth_get_sbs()",
			"contents": "oauth_get_sbs(${1:http_method}, ${2:uri})",
			"kind": "function"
		},
		{
			"trigger": "oauth_urlencode()",
			"contents": "oauth_urlencode(${1:uri})",
			"kind": "function"
		},
		{
			"trigger": "ob_clean()",
			"contents": "ob_clean()",
			"kind": "function"
		},
		{
			"trigger": "ob_deflatehandler()",
			"contents": "ob_deflatehandler(${1:data}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "ob_end_clean()",
			"contents": "ob_end_clean()",
			"kind": "function"
		},
		{
			"trigger": "ob_end_flush()",
			"contents": "ob_end_flush()",
			"kind": "function"
		},
		{
			"trigger": "ob_etaghandler()",
			"contents": "ob_etaghandler(${1:data}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "ob_flush()",
			"contents": "ob_flush()",
			"kind": "function"
		},
		{
			"trigger": "ob_get_clean()",
			"contents": "ob_get_clean()",
			"kind": "function"
		},
		{
			"trigger": "ob_get_contents()",
			"contents": "ob_get_contents()",
			"kind": "function"
		},
		{
			"trigger": "ob_get_flush()",
			"contents": "ob_get_flush()",
			"kind": "function"
		},
		{
			"trigger": "ob_get_length()",
			"contents": "ob_get_length()",
			"kind": "function"
		},
		{
			"trigger": "ob_get_level()",
			"contents": "ob_get_level()",
			"kind": "function"
		},
		{
			"trigger": "ob_get_status()",
			"contents": "ob_get_status()",
			"kind": "function"
		},
		{
			"trigger": "ob_gzhandler()",
			"contents": "ob_gzhandler(${1:buffer}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "ob_iconv_handler()",
			"contents": "ob_iconv_handler(${1:contents}, ${2:status})",
			"kind": "function"
		},
		{
			"trigger": "ob_implicit_flush()",
			"contents": "ob_implicit_flush()",
			"kind": "function"
		},
		{
			"trigger": "ob_inflatehandler()",
			"contents": "ob_inflatehandler(${1:data}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "ob_list_handlers()",
			"contents": "ob_list_handlers()",
			"kind": "function"
		},
		{
			"trigger": "ob_start()",
			"contents": "ob_start()",
			"kind": "function"
		},
		{
			"trigger": "ob_tidyhandler()",
			"contents": "ob_tidyhandler(${1:input})",
			"kind": "function"
		},
		{
			"trigger": "oci_bind_array_by_name()",
			"contents": "oci_bind_array_by_name(${1:statement}, ${2:name}, ${3:var_array}, ${4:max_table_length})",
			"kind": "function"
		},
		{
			"trigger": "oci_bind_by_name()",
			"contents": "oci_bind_by_name(${1:statement}, ${2:bv_name}, ${3:variable})",
			"kind": "function"
		},
		{
			"trigger": "oci_cancel()",
			"contents": "oci_cancel(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "oci_close()",
			"contents": "oci_close(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "oci_commit()",
			"contents": "oci_commit(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "oci_connect()",
			"contents": "oci_connect(${1:username}, ${2:password})",
			"kind": "function"
		},
		{
			"trigger": "oci_define_by_name()",
			"contents": "oci_define_by_name(${1:statement}, ${2:column_name}, ${3:variable})",
			"kind": "function"
		},
		{
			"trigger": "oci_error()",
			"contents": "oci_error()",
			"kind": "function"
		},
		{
			"trigger": "oci_execute()",
			"contents": "oci_execute(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "oci_fetch()",
			"contents": "oci_fetch(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "oci_fetch_all()",
			"contents": "oci_fetch_all(${1:statement}, ${2:output})",
			"kind": "function"
		},
		{
			"trigger": "oci_fetch_array()",
			"contents": "oci_fetch_array(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "oci_fetch_assoc()",
			"contents": "oci_fetch_assoc(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "oci_fetch_object()",
			"contents": "oci_fetch_object(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "oci_fetch_row()",
			"contents": "oci_fetch_row(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "oci_field_is_null()",
			"contents": "oci_field_is_null(${1:statement}, ${2:field})",
			"kind": "function"
		},
		{
			"trigger": "oci_field_name()",
			"contents": "oci_field_name(${1:statement}, ${2:field})",
			"kind": "function"
		},
		{
			"trigger": "oci_field_precision()",
			"contents": "oci_field_precision(${1:statement}, ${2:field})",
			"kind": "function"
		},
		{
			"trigger": "oci_field_scale()",
			"contents": "oci_field_scale(${1:statement}, ${2:field})",
			"kind": "function"
		},
		{
			"trigger": "oci_field_size()",
			"contents": "oci_field_size(${1:statement}, ${2:field})",
			"kind": "function"
		},
		{
			"trigger": "oci_field_type()",
			"contents": "oci_field_type(${1:statement}, ${2:field})",
			"kind": "function"
		},
		{
			"trigger": "oci_field_type_raw()",
			"contents": "oci_field_type_raw(${1:statement}, ${2:field})",
			"kind": "function"
		},
		{
			"trigger": "oci_free_statement()",
			"contents": "oci_free_statement(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "oci_internal_debug()",
			"contents": "oci_internal_debug(${1:onoff})",
			"kind": "function"
		},
		{
			"trigger": "oci_lob_copy()",
			"contents": "oci_lob_copy(${1:lob_to}, ${2:lob_from})",
			"kind": "function"
		},
		{
			"trigger": "oci_lob_is_equal()",
			"contents": "oci_lob_is_equal(${1:lob1}, ${2:lob2})",
			"kind": "function"
		},
		{
			"trigger": "oci_new_collection()",
			"contents": "oci_new_collection(${1:connection}, ${2:tdo})",
			"kind": "function"
		},
		{
			"trigger": "oci_new_connect()",
			"contents": "oci_new_connect(${1:username}, ${2:password})",
			"kind": "function"
		},
		{
			"trigger": "oci_new_cursor()",
			"contents": "oci_new_cursor(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "oci_new_descriptor()",
			"contents": "oci_new_descriptor(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "oci_num_fields()",
			"contents": "oci_num_fields(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "oci_num_rows()",
			"contents": "oci_num_rows(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "oci_parse()",
			"contents": "oci_parse(${1:connection}, ${2:sql_text})",
			"kind": "function"
		},
		{
			"trigger": "oci_password_change()",
			"contents": "oci_password_change(${1:connection}, ${2:username}, ${3:old_password}, ${4:new_password})",
			"kind": "function"
		},
		{
			"trigger": "oci_pconnect()",
			"contents": "oci_pconnect(${1:username}, ${2:password})",
			"kind": "function"
		},
		{
			"trigger": "oci_result()",
			"contents": "oci_result(${1:statement}, ${2:field})",
			"kind": "function"
		},
		{
			"trigger": "oci_rollback()",
			"contents": "oci_rollback(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "oci_server_version()",
			"contents": "oci_server_version(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "oci_set_action()",
			"contents": "oci_set_action(${1:connection}, ${2:action_name})",
			"kind": "function"
		},
		{
			"trigger": "oci_set_client_identifier()",
			"contents": "oci_set_client_identifier(${1:connection}, ${2:client_identifier})",
			"kind": "function"
		},
		{
			"trigger": "oci_set_client_info()",
			"contents": "oci_set_client_info(${1:connection}, ${2:client_info})",
			"kind": "function"
		},
		{
			"trigger": "oci_set_edition()",
			"contents": "oci_set_edition(${1:edition})",
			"kind": "function"
		},
		{
			"trigger": "oci_set_module_name()",
			"contents": "oci_set_module_name(${1:connection}, ${2:module_name})",
			"kind": "function"
		},
		{
			"trigger": "oci_set_prefetch()",
			"contents": "oci_set_prefetch(${1:statement}, ${2:rows})",
			"kind": "function"
		},
		{
			"trigger": "oci_statement_type()",
			"contents": "oci_statement_type(${1:statement})",
			"kind": "function"
		},
		{
			"trigger": "ocibindbyname()",
			"contents": "ocibindbyname()",
			"kind": "function"
		},
		{
			"trigger": "ocicancel()",
			"contents": "ocicancel()",
			"kind": "function"
		},
		{
			"trigger": "ocicloselob()",
			"contents": "ocicloselob()",
			"kind": "function"
		},
		{
			"trigger": "ocicollappend()",
			"contents": "ocicollappend()",
			"kind": "function"
		},
		{
			"trigger": "ocicollassign()",
			"contents": "ocicollassign()",
			"kind": "function"
		},
		{
			"trigger": "ocicollassignelem()",
			"contents": "ocicollassignelem()",
			"kind": "function"
		},
		{
			"trigger": "ocicollgetelem()",
			"contents": "ocicollgetelem()",
			"kind": "function"
		},
		{
			"trigger": "ocicollmax()",
			"contents": "ocicollmax()",
			"kind": "function"
		},
		{
			"trigger": "ocicollsize()",
			"contents": "ocicollsize()",
			"kind": "function"
		},
		{
			"trigger": "ocicolltrim()",
			"contents": "ocicolltrim()",
			"kind": "function"
		},
		{
			"trigger": "ocicolumnisnull()",
			"contents": "ocicolumnisnull()",
			"kind": "function"
		},
		{
			"trigger": "ocicolumnname()",
			"contents": "ocicolumnname()",
			"kind": "function"
		},
		{
			"trigger": "ocicolumnprecision()",
			"contents": "ocicolumnprecision()",
			"kind": "function"
		},
		{
			"trigger": "ocicolumnscale()",
			"contents": "ocicolumnscale()",
			"kind": "function"
		},
		{
			"trigger": "ocicolumnsize()",
			"contents": "ocicolumnsize()",
			"kind": "function"
		},
		{
			"trigger": "ocicolumntype()",
			"contents": "ocicolumntype()",
			"kind": "function"
		},
		{
			"trigger": "ocicolumntyperaw()",
			"contents": "ocicolumntyperaw()",
			"kind": "function"
		},
		{
			"trigger": "ocicommit()",
			"contents": "ocicommit()",
			"kind": "function"
		},
		{
			"trigger": "ocidefinebyname()",
			"contents": "ocidefinebyname()",
			"kind": "function"
		},
		{
			"trigger": "ocierror()",
			"contents": "ocierror()",
			"kind": "function"
		},
		{
			"trigger": "ociexecute()",
			"contents": "ociexecute()",
			"kind": "function"
		},
		{
			"trigger": "ocifetch()",
			"contents": "ocifetch()",
			"kind": "function"
		},
		{
			"trigger": "ocifetchinto()",
			"contents": "ocifetchinto(${1:statement}, ${2:result})",
			"kind": "function"
		},
		{
			"trigger": "ocifetchstatement()",
			"contents": "ocifetchstatement()",
			"kind": "function"
		},
		{
			"trigger": "ocifreecollection()",
			"contents": "ocifreecollection()",
			"kind": "function"
		},
		{
			"trigger": "ocifreecursor()",
			"contents": "ocifreecursor()",
			"kind": "function"
		},
		{
			"trigger": "ocifreedesc()",
			"contents": "ocifreedesc()",
			"kind": "function"
		},
		{
			"trigger": "ocifreestatement()",
			"contents": "ocifreestatement()",
			"kind": "function"
		},
		{
			"trigger": "ociinternaldebug()",
			"contents": "ociinternaldebug()",
			"kind": "function"
		},
		{
			"trigger": "ociloadlob()",
			"contents": "ociloadlob()",
			"kind": "function"
		},
		{
			"trigger": "ocilogoff()",
			"contents": "ocilogoff()",
			"kind": "function"
		},
		{
			"trigger": "ocilogon()",
			"contents": "ocilogon()",
			"kind": "function"
		},
		{
			"trigger": "ocinewcollection()",
			"contents": "ocinewcollection()",
			"kind": "function"
		},
		{
			"trigger": "ocinewcursor()",
			"contents": "ocinewcursor()",
			"kind": "function"
		},
		{
			"trigger": "ocinewdescriptor()",
			"contents": "ocinewdescriptor()",
			"kind": "function"
		},
		{
			"trigger": "ocinlogon()",
			"contents": "ocinlogon()",
			"kind": "function"
		},
		{
			"trigger": "ocinumcols()",
			"contents": "ocinumcols()",
			"kind": "function"
		},
		{
			"trigger": "ociparse()",
			"contents": "ociparse()",
			"kind": "function"
		},
		{
			"trigger": "ociplogon()",
			"contents": "ociplogon()",
			"kind": "function"
		},
		{
			"trigger": "ociresult()",
			"contents": "ociresult()",
			"kind": "function"
		},
		{
			"trigger": "ocirollback()",
			"contents": "ocirollback()",
			"kind": "function"
		},
		{
			"trigger": "ocirowcount()",
			"contents": "ocirowcount()",
			"kind": "function"
		},
		{
			"trigger": "ocisavelob()",
			"contents": "ocisavelob()",
			"kind": "function"
		},
		{
			"trigger": "ocisavelobfile()",
			"contents": "ocisavelobfile()",
			"kind": "function"
		},
		{
			"trigger": "ociserverversion()",
			"contents": "ociserverversion()",
			"kind": "function"
		},
		{
			"trigger": "ocisetprefetch()",
			"contents": "ocisetprefetch()",
			"kind": "function"
		},
		{
			"trigger": "ocistatementtype()",
			"contents": "ocistatementtype()",
			"kind": "function"
		},
		{
			"trigger": "ociwritelobtofile()",
			"contents": "ociwritelobtofile()",
			"kind": "function"
		},
		{
			"trigger": "ociwritetemporarylob()",
			"contents": "ociwritetemporarylob()",
			"kind": "function"
		},
		{
			"trigger": "octdec()",
			"contents": "octdec(${1:octal_string})",
			"kind": "function"
		},
		{
			"trigger": "odbc_autocommit()",
			"contents": "odbc_autocommit(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_binmode()",
			"contents": "odbc_binmode(${1:result_id}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "odbc_close()",
			"contents": "odbc_close(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_close_all()",
			"contents": "odbc_close_all()",
			"kind": "function"
		},
		{
			"trigger": "odbc_columnprivileges()",
			"contents": "odbc_columnprivileges(${1:connection_id}, ${2:qualifier}, ${3:owner}, ${4:table_name}, ${5:column_name})",
			"kind": "function"
		},
		{
			"trigger": "odbc_columns()",
			"contents": "odbc_columns(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_commit()",
			"contents": "odbc_commit(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_connect()",
			"contents": "odbc_connect(${1:dsn}, ${2:user}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "odbc_cursor()",
			"contents": "odbc_cursor(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_data_source()",
			"contents": "odbc_data_source(${1:connection_id}, ${2:fetch_type})",
			"kind": "function"
		},
		{
			"trigger": "odbc_do()",
			"contents": "odbc_do()",
			"kind": "function"
		},
		{
			"trigger": "odbc_error()",
			"contents": "odbc_error()",
			"kind": "function"
		},
		{
			"trigger": "odbc_errormsg()",
			"contents": "odbc_errormsg()",
			"kind": "function"
		},
		{
			"trigger": "odbc_exec()",
			"contents": "odbc_exec(${1:connection_id}, ${2:query_string})",
			"kind": "function"
		},
		{
			"trigger": "odbc_execute()",
			"contents": "odbc_execute(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_fetch_array()",
			"contents": "odbc_fetch_array(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "odbc_fetch_into()",
			"contents": "odbc_fetch_into(${1:result_id}, ${2:result_array})",
			"kind": "function"
		},
		{
			"trigger": "odbc_fetch_object()",
			"contents": "odbc_fetch_object(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "odbc_fetch_row()",
			"contents": "odbc_fetch_row(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_field_len()",
			"contents": "odbc_field_len(${1:result_id}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "odbc_field_name()",
			"contents": "odbc_field_name(${1:result_id}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "odbc_field_num()",
			"contents": "odbc_field_num(${1:result_id}, ${2:field_name})",
			"kind": "function"
		},
		{
			"trigger": "odbc_field_precision()",
			"contents": "odbc_field_precision()",
			"kind": "function"
		},
		{
			"trigger": "odbc_field_scale()",
			"contents": "odbc_field_scale(${1:result_id}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "odbc_field_type()",
			"contents": "odbc_field_type(${1:result_id}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "odbc_foreignkeys()",
			"contents": "odbc_foreignkeys(${1:connection_id}, ${2:pk_qualifier}, ${3:pk_owner}, ${4:pk_table}, ${5:fk_qualifier}, ${6:fk_owner}, ${7:fk_table})",
			"kind": "function"
		},
		{
			"trigger": "odbc_free_result()",
			"contents": "odbc_free_result(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_gettypeinfo()",
			"contents": "odbc_gettypeinfo(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_longreadlen()",
			"contents": "odbc_longreadlen(${1:result_id}, ${2:length})",
			"kind": "function"
		},
		{
			"trigger": "odbc_next_result()",
			"contents": "odbc_next_result(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_num_fields()",
			"contents": "odbc_num_fields(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_num_rows()",
			"contents": "odbc_num_rows(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_pconnect()",
			"contents": "odbc_pconnect(${1:dsn}, ${2:user}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "odbc_prepare()",
			"contents": "odbc_prepare(${1:connection_id}, ${2:query_string})",
			"kind": "function"
		},
		{
			"trigger": "odbc_primarykeys()",
			"contents": "odbc_primarykeys(${1:connection_id}, ${2:qualifier}, ${3:owner}, ${4:table})",
			"kind": "function"
		},
		{
			"trigger": "odbc_procedurecolumns()",
			"contents": "odbc_procedurecolumns(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_procedures()",
			"contents": "odbc_procedures(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_result()",
			"contents": "odbc_result(${1:result_id}, ${2:field})",
			"kind": "function"
		},
		{
			"trigger": "odbc_result_all()",
			"contents": "odbc_result_all(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_rollback()",
			"contents": "odbc_rollback(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "odbc_setoption()",
			"contents": "odbc_setoption(${1:id}, ${2:function}, ${3:option}, ${4:param})",
			"kind": "function"
		},
		{
			"trigger": "odbc_specialcolumns()",
			"contents": "odbc_specialcolumns(${1:connection_id}, ${2:type}, ${3:qualifier}, ${4:owner}, ${5:table}, ${6:scope}, ${7:nullable})",
			"kind": "function"
		},
		{
			"trigger": "odbc_statistics()",
			"contents": "odbc_statistics(${1:connection_id}, ${2:qualifier}, ${3:owner}, ${4:table_name}, ${5:unique}, ${6:accuracy})",
			"kind": "function"
		},
		{
			"trigger": "odbc_tableprivileges()",
			"contents": "odbc_tableprivileges(${1:connection_id}, ${2:qualifier}, ${3:owner}, ${4:name})",
			"kind": "function"
		},
		{
			"trigger": "odbc_tables()",
			"contents": "odbc_tables(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "openal_buffer_create()",
			"contents": "openal_buffer_create()",
			"kind": "function"
		},
		{
			"trigger": "openal_buffer_data()",
			"contents": "openal_buffer_data(${1:buffer}, ${2:format}, ${3:data}, ${4:freq})",
			"kind": "function"
		},
		{
			"trigger": "openal_buffer_destroy()",
			"contents": "openal_buffer_destroy(${1:buffer})",
			"kind": "function"
		},
		{
			"trigger": "openal_buffer_get()",
			"contents": "openal_buffer_get(${1:buffer}, ${2:property})",
			"kind": "function"
		},
		{
			"trigger": "openal_buffer_loadwav()",
			"contents": "openal_buffer_loadwav(${1:buffer}, ${2:wavfile})",
			"kind": "function"
		},
		{
			"trigger": "openal_context_create()",
			"contents": "openal_context_create(${1:device})",
			"kind": "function"
		},
		{
			"trigger": "openal_context_current()",
			"contents": "openal_context_current(${1:context})",
			"kind": "function"
		},
		{
			"trigger": "openal_context_destroy()",
			"contents": "openal_context_destroy(${1:context})",
			"kind": "function"
		},
		{
			"trigger": "openal_context_process()",
			"contents": "openal_context_process(${1:context})",
			"kind": "function"
		},
		{
			"trigger": "openal_context_suspend()",
			"contents": "openal_context_suspend(${1:context})",
			"kind": "function"
		},
		{
			"trigger": "openal_device_close()",
			"contents": "openal_device_close(${1:device})",
			"kind": "function"
		},
		{
			"trigger": "openal_device_open()",
			"contents": "openal_device_open()",
			"kind": "function"
		},
		{
			"trigger": "openal_listener_get()",
			"contents": "openal_listener_get(${1:property})",
			"kind": "function"
		},
		{
			"trigger": "openal_listener_set()",
			"contents": "openal_listener_set(${1:property}, ${2:setting})",
			"kind": "function"
		},
		{
			"trigger": "openal_source_create()",
			"contents": "openal_source_create()",
			"kind": "function"
		},
		{
			"trigger": "openal_source_destroy()",
			"contents": "openal_source_destroy(${1:source})",
			"kind": "function"
		},
		{
			"trigger": "openal_source_get()",
			"contents": "openal_source_get(${1:source}, ${2:property})",
			"kind": "function"
		},
		{
			"trigger": "openal_source_pause()",
			"contents": "openal_source_pause(${1:source})",
			"kind": "function"
		},
		{
			"trigger": "openal_source_play()",
			"contents": "openal_source_play(${1:source})",
			"kind": "function"
		},
		{
			"trigger": "openal_source_rewind()",
			"contents": "openal_source_rewind(${1:source})",
			"kind": "function"
		},
		{
			"trigger": "openal_source_set()",
			"contents": "openal_source_set(${1:source}, ${2:property}, ${3:setting})",
			"kind": "function"
		},
		{
			"trigger": "openal_source_stop()",
			"contents": "openal_source_stop(${1:source})",
			"kind": "function"
		},
		{
			"trigger": "openal_stream()",
			"contents": "openal_stream(${1:source}, ${2:format}, ${3:rate})",
			"kind": "function"
		},
		{
			"trigger": "opendir()",
			"contents": "opendir(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "openlog()",
			"contents": "openlog(${1:ident}, ${2:option}, ${3:facility})",
			"kind": "function"
		},
		{
			"trigger": "openssl_csr_export()",
			"contents": "openssl_csr_export(${1:csr}, ${2:out})",
			"kind": "function"
		},
		{
			"trigger": "openssl_csr_export_to_file()",
			"contents": "openssl_csr_export_to_file(${1:csr}, ${2:outfilename})",
			"kind": "function"
		},
		{
			"trigger": "openssl_csr_get_public_key()",
			"contents": "openssl_csr_get_public_key(${1:csr})",
			"kind": "function"
		},
		{
			"trigger": "openssl_csr_get_subject()",
			"contents": "openssl_csr_get_subject(${1:csr})",
			"kind": "function"
		},
		{
			"trigger": "openssl_csr_new()",
			"contents": "openssl_csr_new(${1:dn}, ${2:privkey})",
			"kind": "function"
		},
		{
			"trigger": "openssl_csr_sign()",
			"contents": "openssl_csr_sign(${1:csr}, ${2:cacert}, ${3:priv_key}, ${4:days})",
			"kind": "function"
		},
		{
			"trigger": "openssl_decrypt()",
			"contents": "openssl_decrypt(${1:data}, ${2:method}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "openssl_dh_compute_key()",
			"contents": "openssl_dh_compute_key(${1:pub_key}, ${2:dh_key})",
			"kind": "function"
		},
		{
			"trigger": "openssl_digest()",
			"contents": "openssl_digest(${1:data}, ${2:method})",
			"kind": "function"
		},
		{
			"trigger": "openssl_encrypt()",
			"contents": "openssl_encrypt(${1:data}, ${2:method}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "openssl_error_string()",
			"contents": "openssl_error_string()",
			"kind": "function"
		},
		{
			"trigger": "openssl_free_key()",
			"contents": "openssl_free_key(${1:key_identifier})",
			"kind": "function"
		},
		{
			"trigger": "openssl_get_cipher_methods()",
			"contents": "openssl_get_cipher_methods()",
			"kind": "function"
		},
		{
			"trigger": "openssl_get_md_methods()",
			"contents": "openssl_get_md_methods()",
			"kind": "function"
		},
		{
			"trigger": "openssl_get_privatekey()",
			"contents": "openssl_get_privatekey()",
			"kind": "function"
		},
		{
			"trigger": "openssl_get_publickey()",
			"contents": "openssl_get_publickey()",
			"kind": "function"
		},
		{
			"trigger": "openssl_open()",
			"contents": "openssl_open(${1:sealed_data}, ${2:open_data}, ${3:env_key}, ${4:priv_key_id})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkcs12_export()",
			"contents": "openssl_pkcs12_export(${1:x509}, ${2:out}, ${3:priv_key}, ${4:pass})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkcs12_export_to_file()",
			"contents": "openssl_pkcs12_export_to_file(${1:x509}, ${2:filename}, ${3:priv_key}, ${4:pass})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkcs12_read()",
			"contents": "openssl_pkcs12_read(${1:pkcs12}, ${2:certs}, ${3:pass})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkcs7_decrypt()",
			"contents": "openssl_pkcs7_decrypt(${1:infilename}, ${2:outfilename}, ${3:recipcert})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkcs7_encrypt()",
			"contents": "openssl_pkcs7_encrypt(${1:infile}, ${2:outfile}, ${3:recipcerts}, ${4:headers})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkcs7_sign()",
			"contents": "openssl_pkcs7_sign(${1:infilename}, ${2:outfilename}, ${3:signcert}, ${4:privkey}, ${5:headers})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkcs7_verify()",
			"contents": "openssl_pkcs7_verify(${1:filename}, ${2:flags})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkey_export()",
			"contents": "openssl_pkey_export(${1:key}, ${2:out})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkey_export_to_file()",
			"contents": "openssl_pkey_export_to_file(${1:key}, ${2:outfilename})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkey_free()",
			"contents": "openssl_pkey_free(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkey_get_details()",
			"contents": "openssl_pkey_get_details(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkey_get_private()",
			"contents": "openssl_pkey_get_private(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkey_get_public()",
			"contents": "openssl_pkey_get_public(${1:certificate})",
			"kind": "function"
		},
		{
			"trigger": "openssl_pkey_new()",
			"contents": "openssl_pkey_new()",
			"kind": "function"
		},
		{
			"trigger": "openssl_private_decrypt()",
			"contents": "openssl_private_decrypt(${1:data}, ${2:decrypted}, ${3:key})",
			"kind": "function"
		},
		{
			"trigger": "openssl_private_encrypt()",
			"contents": "openssl_private_encrypt(${1:data}, ${2:crypted}, ${3:key})",
			"kind": "function"
		},
		{
			"trigger": "openssl_public_decrypt()",
			"contents": "openssl_public_decrypt(${1:data}, ${2:decrypted}, ${3:key})",
			"kind": "function"
		},
		{
			"trigger": "openssl_public_encrypt()",
			"contents": "openssl_public_encrypt(${1:data}, ${2:crypted}, ${3:key})",
			"kind": "function"
		},
		{
			"trigger": "openssl_random_pseudo_bytes()",
			"contents": "openssl_random_pseudo_bytes(${1:length})",
			"kind": "function"
		},
		{
			"trigger": "openssl_seal()",
			"contents": "openssl_seal(${1:data}, ${2:sealed_data}, ${3:env_keys}, ${4:pub_key_ids})",
			"kind": "function"
		},
		{
			"trigger": "openssl_sign()",
			"contents": "openssl_sign(${1:data}, ${2:signature}, ${3:priv_key_id})",
			"kind": "function"
		},
		{
			"trigger": "openssl_verify()",
			"contents": "openssl_verify(${1:data}, ${2:signature}, ${3:pub_key_id})",
			"kind": "function"
		},
		{
			"trigger": "openssl_x509_check_private_key()",
			"contents": "openssl_x509_check_private_key(${1:cert}, ${2:key})",
			"kind": "function"
		},
		{
			"trigger": "openssl_x509_checkpurpose()",
			"contents": "openssl_x509_checkpurpose(${1:x509cert}, ${2:purpose})",
			"kind": "function"
		},
		{
			"trigger": "openssl_x509_export()",
			"contents": "openssl_x509_export(${1:x509}, ${2:output})",
			"kind": "function"
		},
		{
			"trigger": "openssl_x509_export_to_file()",
			"contents": "openssl_x509_export_to_file(${1:x509}, ${2:outfilename})",
			"kind": "function"
		},
		{
			"trigger": "openssl_x509_free()",
			"contents": "openssl_x509_free(${1:x509cert})",
			"kind": "function"
		},
		{
			"trigger": "openssl_x509_parse()",
			"contents": "openssl_x509_parse(${1:x509cert})",
			"kind": "function"
		},
		{
			"trigger": "openssl_x509_read()",
			"contents": "openssl_x509_read(${1:x509certdata})",
			"kind": "function"
		},
		{
			"trigger": "ord()",
			"contents": "ord(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "output_add_rewrite_var()",
			"contents": "output_add_rewrite_var(${1:name}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "output_reset_rewrite_vars()",
			"contents": "output_reset_rewrite_vars()",
			"kind": "function"
		},
		{
			"trigger": "overload()",
			"contents": "overload(${1:class_name})",
			"kind": "function"
		},
		{
			"trigger": "override_function()",
			"contents": "override_function(${1:function_name}, ${2:function_args}, ${3:function_code})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_close()",
			"contents": "ovrimos_close(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_commit()",
			"contents": "ovrimos_commit(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_connect()",
			"contents": "ovrimos_connect(${1:host}, ${2:dborport}, ${3:user}, ${4:password})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_cursor()",
			"contents": "ovrimos_cursor(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_exec()",
			"contents": "ovrimos_exec(${1:connection_id}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_execute()",
			"contents": "ovrimos_execute(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_fetch_into()",
			"contents": "ovrimos_fetch_into(${1:result_id}, ${2:result_array})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_fetch_row()",
			"contents": "ovrimos_fetch_row(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_field_len()",
			"contents": "ovrimos_field_len(${1:result_id}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_field_name()",
			"contents": "ovrimos_field_name(${1:result_id}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_field_num()",
			"contents": "ovrimos_field_num(${1:result_id}, ${2:field_name})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_field_type()",
			"contents": "ovrimos_field_type(${1:result_id}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_free_result()",
			"contents": "ovrimos_free_result(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_longreadlen()",
			"contents": "ovrimos_longreadlen(${1:result_id}, ${2:length})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_num_fields()",
			"contents": "ovrimos_num_fields(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_num_rows()",
			"contents": "ovrimos_num_rows(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_prepare()",
			"contents": "ovrimos_prepare(${1:connection_id}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_result()",
			"contents": "ovrimos_result(${1:result_id}, ${2:field})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_result_all()",
			"contents": "ovrimos_result_all(${1:result_id})",
			"kind": "function"
		},
		{
			"trigger": "ovrimos_rollback()",
			"contents": "ovrimos_rollback(${1:connection_id})",
			"kind": "function"
		},
		{
			"trigger": "pack()",
			"contents": "pack(${1:format})",
			"kind": "function"
		},
		{
			"trigger": "parse_ini_file()",
			"contents": "parse_ini_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "parse_ini_string()",
			"contents": "parse_ini_string(${1:ini})",
			"kind": "function"
		},
		{
			"trigger": "parse_str()",
			"contents": "parse_str(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "parse_url()",
			"contents": "parse_url(${1:url})",
			"kind": "function"
		},
		{
			"trigger": "parsekit_compile_file()",
			"contents": "parsekit_compile_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "parsekit_compile_string()",
			"contents": "parsekit_compile_string(${1:phpcode})",
			"kind": "function"
		},
		{
			"trigger": "parsekit_func_arginfo()",
			"contents": "parsekit_func_arginfo(${1:function})",
			"kind": "function"
		},
		{
			"trigger": "passthru()",
			"contents": "passthru(${1:command})",
			"kind": "function"
		},
		{
			"trigger": "pathinfo()",
			"contents": "pathinfo(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "pclose()",
			"contents": "pclose(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_alarm()",
			"contents": "pcntl_alarm(${1:seconds})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_exec()",
			"contents": "pcntl_exec(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_fork()",
			"contents": "pcntl_fork()",
			"kind": "function"
		},
		{
			"trigger": "pcntl_getpriority()",
			"contents": "pcntl_getpriority()",
			"kind": "function"
		},
		{
			"trigger": "pcntl_setpriority()",
			"contents": "pcntl_setpriority(${1:priority})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_signal()",
			"contents": "pcntl_signal(${1:signo}, ${2:handler})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_signal_dispatch()",
			"contents": "pcntl_signal_dispatch()",
			"kind": "function"
		},
		{
			"trigger": "pcntl_sigprocmask()",
			"contents": "pcntl_sigprocmask(${1:how}, ${2:set})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_sigtimedwait()",
			"contents": "pcntl_sigtimedwait(${1:set})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_sigwaitinfo()",
			"contents": "pcntl_sigwaitinfo(${1:set})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_wait()",
			"contents": "pcntl_wait(${1:status})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_waitpid()",
			"contents": "pcntl_waitpid(${1:pid}, ${2:status})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_wexitstatus()",
			"contents": "pcntl_wexitstatus(${1:status})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_wifexited()",
			"contents": "pcntl_wifexited(${1:status})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_wifsignaled()",
			"contents": "pcntl_wifsignaled(${1:status})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_wifstopped()",
			"contents": "pcntl_wifstopped(${1:status})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_wstopsig()",
			"contents": "pcntl_wstopsig(${1:status})",
			"kind": "function"
		},
		{
			"trigger": "pcntl_wtermsig()",
			"contents": "pcntl_wtermsig(${1:status})",
			"kind": "function"
		},
		{
			"trigger": "PDF_activate_item()",
			"contents": "PDF_activate_item(${1:pdfdoc}, ${2:id})",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_annotation()",
			"contents": "PDF_add_annotation()",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_bookmark()",
			"contents": "PDF_add_bookmark()",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_launchlink()",
			"contents": "PDF_add_launchlink(${1:pdfdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:filename})",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_locallink()",
			"contents": "PDF_add_locallink(${1:pdfdoc}, ${2:lowerleftx}, ${3:lowerlefty}, ${4:upperrightx}, ${5:upperrighty}, ${6:page}, ${7:dest})",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_nameddest()",
			"contents": "PDF_add_nameddest(${1:pdfdoc}, ${2:name}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_note()",
			"contents": "PDF_add_note(${1:pdfdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:contents}, ${7:title}, ${8:icon}, ${9:open})",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_outline()",
			"contents": "PDF_add_outline()",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_pdflink()",
			"contents": "PDF_add_pdflink(${1:pdfdoc}, ${2:bottom_left_x}, ${3:bottom_left_y}, ${4:up_right_x}, ${5:up_right_y}, ${6:filename}, ${7:page}, ${8:dest})",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_table_cell()",
			"contents": "PDF_add_table_cell(${1:pdfdoc}, ${2:table}, ${3:column}, ${4:row}, ${5:text}, ${6:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_textflow()",
			"contents": "PDF_add_textflow(${1:pdfdoc}, ${2:textflow}, ${3:text}, ${4:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_thumbnail()",
			"contents": "PDF_add_thumbnail(${1:pdfdoc}, ${2:image})",
			"kind": "function"
		},
		{
			"trigger": "PDF_add_weblink()",
			"contents": "PDF_add_weblink(${1:pdfdoc}, ${2:lowerleftx}, ${3:lowerlefty}, ${4:upperrightx}, ${5:upperrighty}, ${6:url})",
			"kind": "function"
		},
		{
			"trigger": "PDF_arc()",
			"contents": "PDF_arc(${1:p}, ${2:x}, ${3:y}, ${4:r}, ${5:alpha}, ${6:beta})",
			"kind": "function"
		},
		{
			"trigger": "PDF_arcn()",
			"contents": "PDF_arcn(${1:p}, ${2:x}, ${3:y}, ${4:r}, ${5:alpha}, ${6:beta})",
			"kind": "function"
		},
		{
			"trigger": "PDF_attach_file()",
			"contents": "PDF_attach_file(${1:pdfdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:filename}, ${7:description}, ${8:author}, ${9:mimetype}, ${10:icon})",
			"kind": "function"
		},
		{
			"trigger": "PDF_begin_document()",
			"contents": "PDF_begin_document(${1:pdfdoc}, ${2:filename}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_begin_font()",
			"contents": "PDF_begin_font(${1:pdfdoc}, ${2:filename}, ${3:a}, ${4:b}, ${5:c}, ${6:d}, ${7:e}, ${8:f}, ${9:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_begin_glyph()",
			"contents": "PDF_begin_glyph(${1:pdfdoc}, ${2:glyphname}, ${3:wx}, ${4:llx}, ${5:lly}, ${6:urx}, ${7:ury})",
			"kind": "function"
		},
		{
			"trigger": "PDF_begin_item()",
			"contents": "PDF_begin_item(${1:pdfdoc}, ${2:tag}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_begin_layer()",
			"contents": "PDF_begin_layer(${1:pdfdoc}, ${2:layer})",
			"kind": "function"
		},
		{
			"trigger": "PDF_begin_page()",
			"contents": "PDF_begin_page(${1:pdfdoc}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "PDF_begin_page_ext()",
			"contents": "PDF_begin_page_ext(${1:pdfdoc}, ${2:width}, ${3:height}, ${4:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_begin_pattern()",
			"contents": "PDF_begin_pattern(${1:pdfdoc}, ${2:width}, ${3:height}, ${4:xstep}, ${5:ystep}, ${6:painttype})",
			"kind": "function"
		},
		{
			"trigger": "PDF_begin_template()",
			"contents": "PDF_begin_template(${1:pdfdoc}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "PDF_begin_template_ext()",
			"contents": "PDF_begin_template_ext(${1:pdfdoc}, ${2:width}, ${3:height}, ${4:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_circle()",
			"contents": "PDF_circle(${1:pdfdoc}, ${2:x}, ${3:y}, ${4:r})",
			"kind": "function"
		},
		{
			"trigger": "PDF_clip()",
			"contents": "PDF_clip(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_close()",
			"contents": "PDF_close(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_close_image()",
			"contents": "PDF_close_image(${1:p}, ${2:image})",
			"kind": "function"
		},
		{
			"trigger": "PDF_close_pdi()",
			"contents": "PDF_close_pdi(${1:p}, ${2:doc})",
			"kind": "function"
		},
		{
			"trigger": "PDF_close_pdi_page()",
			"contents": "PDF_close_pdi_page(${1:p}, ${2:page})",
			"kind": "function"
		},
		{
			"trigger": "PDF_closepath()",
			"contents": "PDF_closepath(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_closepath_fill_stroke()",
			"contents": "PDF_closepath_fill_stroke(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_closepath_stroke()",
			"contents": "PDF_closepath_stroke(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_concat()",
			"contents": "PDF_concat(${1:p}, ${2:a}, ${3:b}, ${4:c}, ${5:d}, ${6:e}, ${7:f})",
			"kind": "function"
		},
		{
			"trigger": "PDF_continue_text()",
			"contents": "PDF_continue_text(${1:p}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "PDF_create_3dview()",
			"contents": "PDF_create_3dview(${1:pdfdoc}, ${2:username}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_create_action()",
			"contents": "PDF_create_action(${1:pdfdoc}, ${2:type}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_create_annotation()",
			"contents": "PDF_create_annotation(${1:pdfdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:type}, ${7:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_create_bookmark()",
			"contents": "PDF_create_bookmark(${1:pdfdoc}, ${2:text}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_create_field()",
			"contents": "PDF_create_field(${1:pdfdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:name}, ${7:type}, ${8:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_create_fieldgroup()",
			"contents": "PDF_create_fieldgroup(${1:pdfdoc}, ${2:name}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_create_gstate()",
			"contents": "PDF_create_gstate(${1:pdfdoc}, ${2:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_create_pvf()",
			"contents": "PDF_create_pvf(${1:pdfdoc}, ${2:filename}, ${3:data}, ${4:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_create_textflow()",
			"contents": "PDF_create_textflow(${1:pdfdoc}, ${2:text}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_curveto()",
			"contents": "PDF_curveto(${1:p}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:x3}, ${7:y3})",
			"kind": "function"
		},
		{
			"trigger": "PDF_define_layer()",
			"contents": "PDF_define_layer(${1:pdfdoc}, ${2:name}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_delete()",
			"contents": "PDF_delete(${1:pdfdoc})",
			"kind": "function"
		},
		{
			"trigger": "PDF_delete_pvf()",
			"contents": "PDF_delete_pvf(${1:pdfdoc}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "PDF_delete_table()",
			"contents": "PDF_delete_table(${1:pdfdoc}, ${2:table}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_delete_textflow()",
			"contents": "PDF_delete_textflow(${1:pdfdoc}, ${2:textflow})",
			"kind": "function"
		},
		{
			"trigger": "PDF_encoding_set_char()",
			"contents": "PDF_encoding_set_char(${1:pdfdoc}, ${2:encoding}, ${3:slot}, ${4:glyphname}, ${5:uv})",
			"kind": "function"
		},
		{
			"trigger": "PDF_end_document()",
			"contents": "PDF_end_document(${1:pdfdoc}, ${2:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_end_font()",
			"contents": "PDF_end_font(${1:pdfdoc})",
			"kind": "function"
		},
		{
			"trigger": "PDF_end_glyph()",
			"contents": "PDF_end_glyph(${1:pdfdoc})",
			"kind": "function"
		},
		{
			"trigger": "PDF_end_item()",
			"contents": "PDF_end_item(${1:pdfdoc}, ${2:id})",
			"kind": "function"
		},
		{
			"trigger": "PDF_end_layer()",
			"contents": "PDF_end_layer(${1:pdfdoc})",
			"kind": "function"
		},
		{
			"trigger": "PDF_end_page()",
			"contents": "PDF_end_page(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_end_page_ext()",
			"contents": "PDF_end_page_ext(${1:pdfdoc}, ${2:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_end_pattern()",
			"contents": "PDF_end_pattern(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_end_template()",
			"contents": "PDF_end_template(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_endpath()",
			"contents": "PDF_endpath(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_fill()",
			"contents": "PDF_fill(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_fill_imageblock()",
			"contents": "PDF_fill_imageblock(${1:pdfdoc}, ${2:page}, ${3:blockname}, ${4:image}, ${5:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_fill_pdfblock()",
			"contents": "PDF_fill_pdfblock(${1:pdfdoc}, ${2:page}, ${3:blockname}, ${4:contents}, ${5:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_fill_stroke()",
			"contents": "PDF_fill_stroke(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_fill_textblock()",
			"contents": "PDF_fill_textblock(${1:pdfdoc}, ${2:page}, ${3:blockname}, ${4:text}, ${5:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_findfont()",
			"contents": "PDF_findfont(${1:p}, ${2:fontname}, ${3:encoding}, ${4:embed})",
			"kind": "function"
		},
		{
			"trigger": "PDF_fit_image()",
			"contents": "PDF_fit_image(${1:pdfdoc}, ${2:image}, ${3:x}, ${4:y}, ${5:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_fit_pdi_page()",
			"contents": "PDF_fit_pdi_page(${1:pdfdoc}, ${2:page}, ${3:x}, ${4:y}, ${5:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_fit_table()",
			"contents": "PDF_fit_table(${1:pdfdoc}, ${2:table}, ${3:llx}, ${4:lly}, ${5:urx}, ${6:ury}, ${7:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_fit_textflow()",
			"contents": "PDF_fit_textflow(${1:pdfdoc}, ${2:textflow}, ${3:llx}, ${4:lly}, ${5:urx}, ${6:ury}, ${7:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_fit_textline()",
			"contents": "PDF_fit_textline(${1:pdfdoc}, ${2:text}, ${3:x}, ${4:y}, ${5:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_apiname()",
			"contents": "PDF_get_apiname(${1:pdfdoc})",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_buffer()",
			"contents": "PDF_get_buffer(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_errmsg()",
			"contents": "PDF_get_errmsg(${1:pdfdoc})",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_errnum()",
			"contents": "PDF_get_errnum(${1:pdfdoc})",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_font()",
			"contents": "PDF_get_font()",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_fontname()",
			"contents": "PDF_get_fontname()",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_fontsize()",
			"contents": "PDF_get_fontsize()",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_image_height()",
			"contents": "PDF_get_image_height()",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_image_width()",
			"contents": "PDF_get_image_width()",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_majorversion()",
			"contents": "PDF_get_majorversion()",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_minorversion()",
			"contents": "PDF_get_minorversion()",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_parameter()",
			"contents": "PDF_get_parameter(${1:p}, ${2:key}, ${3:modifier})",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_pdi_parameter()",
			"contents": "PDF_get_pdi_parameter(${1:p}, ${2:key}, ${3:doc}, ${4:page}, ${5:reserved})",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_pdi_value()",
			"contents": "PDF_get_pdi_value(${1:p}, ${2:key}, ${3:doc}, ${4:page}, ${5:reserved})",
			"kind": "function"
		},
		{
			"trigger": "PDF_get_value()",
			"contents": "PDF_get_value(${1:p}, ${2:key}, ${3:modifier})",
			"kind": "function"
		},
		{
			"trigger": "PDF_info_font()",
			"contents": "PDF_info_font(${1:pdfdoc}, ${2:font}, ${3:keyword}, ${4:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_info_matchbox()",
			"contents": "PDF_info_matchbox(${1:pdfdoc}, ${2:boxname}, ${3:num}, ${4:keyword})",
			"kind": "function"
		},
		{
			"trigger": "PDF_info_table()",
			"contents": "PDF_info_table(${1:pdfdoc}, ${2:table}, ${3:keyword})",
			"kind": "function"
		},
		{
			"trigger": "PDF_info_textflow()",
			"contents": "PDF_info_textflow(${1:pdfdoc}, ${2:textflow}, ${3:keyword})",
			"kind": "function"
		},
		{
			"trigger": "PDF_info_textline()",
			"contents": "PDF_info_textline(${1:pdfdoc}, ${2:text}, ${3:keyword}, ${4:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_initgraphics()",
			"contents": "PDF_initgraphics(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_lineto()",
			"contents": "PDF_lineto(${1:p}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "PDF_load_3ddata()",
			"contents": "PDF_load_3ddata(${1:pdfdoc}, ${2:filename}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_load_font()",
			"contents": "PDF_load_font(${1:pdfdoc}, ${2:fontname}, ${3:encoding}, ${4:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_load_iccprofile()",
			"contents": "PDF_load_iccprofile(${1:pdfdoc}, ${2:profilename}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_load_image()",
			"contents": "PDF_load_image(${1:pdfdoc}, ${2:imagetype}, ${3:filename}, ${4:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_makespotcolor()",
			"contents": "PDF_makespotcolor(${1:p}, ${2:spotname})",
			"kind": "function"
		},
		{
			"trigger": "PDF_moveto()",
			"contents": "PDF_moveto(${1:p}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "PDF_new()",
			"contents": "PDF_new()",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_ccitt()",
			"contents": "PDF_open_ccitt(${1:pdfdoc}, ${2:filename}, ${3:width}, ${4:height}, ${5:BitReverse}, ${6:k}, ${7:Blackls1})",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_file()",
			"contents": "PDF_open_file(${1:p}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_gif()",
			"contents": "PDF_open_gif()",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_image()",
			"contents": "PDF_open_image(${1:p}, ${2:imagetype}, ${3:source}, ${4:data}, ${5:length}, ${6:width}, ${7:height}, ${8:components}, ${9:bpc}, ${10:params})",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_image_file()",
			"contents": "PDF_open_image_file(${1:p}, ${2:imagetype}, ${3:filename}, ${4:stringparam}, ${5:intparam})",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_jpeg()",
			"contents": "PDF_open_jpeg()",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_memory_image()",
			"contents": "PDF_open_memory_image(${1:p}, ${2:image})",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_pdi()",
			"contents": "PDF_open_pdi(${1:pdfdoc}, ${2:filename}, ${3:optlist}, ${4:len})",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_pdi_document()",
			"contents": "PDF_open_pdi_document(${1:p}, ${2:filename}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_pdi_page()",
			"contents": "PDF_open_pdi_page(${1:p}, ${2:doc}, ${3:pagenumber}, ${4:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_open_tiff()",
			"contents": "PDF_open_tiff()",
			"kind": "function"
		},
		{
			"trigger": "PDF_pcos_get_number()",
			"contents": "PDF_pcos_get_number(${1:p}, ${2:doc}, ${3:path})",
			"kind": "function"
		},
		{
			"trigger": "PDF_pcos_get_stream()",
			"contents": "PDF_pcos_get_stream(${1:p}, ${2:doc}, ${3:optlist}, ${4:path})",
			"kind": "function"
		},
		{
			"trigger": "PDF_pcos_get_string()",
			"contents": "PDF_pcos_get_string(${1:p}, ${2:doc}, ${3:path})",
			"kind": "function"
		},
		{
			"trigger": "PDF_place_image()",
			"contents": "PDF_place_image(${1:pdfdoc}, ${2:image}, ${3:x}, ${4:y}, ${5:scale})",
			"kind": "function"
		},
		{
			"trigger": "PDF_place_pdi_page()",
			"contents": "PDF_place_pdi_page(${1:pdfdoc}, ${2:page}, ${3:x}, ${4:y}, ${5:sx}, ${6:sy})",
			"kind": "function"
		},
		{
			"trigger": "PDF_process_pdi()",
			"contents": "PDF_process_pdi(${1:pdfdoc}, ${2:doc}, ${3:page}, ${4:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_rect()",
			"contents": "PDF_rect(${1:p}, ${2:x}, ${3:y}, ${4:width}, ${5:height})",
			"kind": "function"
		},
		{
			"trigger": "PDF_restore()",
			"contents": "PDF_restore(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_resume_page()",
			"contents": "PDF_resume_page(${1:pdfdoc}, ${2:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_rotate()",
			"contents": "PDF_rotate(${1:p}, ${2:phi})",
			"kind": "function"
		},
		{
			"trigger": "PDF_save()",
			"contents": "PDF_save(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_scale()",
			"contents": "PDF_scale(${1:p}, ${2:sx}, ${3:sy})",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_border_color()",
			"contents": "PDF_set_border_color(${1:p}, ${2:red}, ${3:green}, ${4:blue})",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_border_dash()",
			"contents": "PDF_set_border_dash(${1:pdfdoc}, ${2:black}, ${3:white})",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_border_style()",
			"contents": "PDF_set_border_style(${1:pdfdoc}, ${2:style}, ${3:width})",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_char_spacing()",
			"contents": "PDF_set_char_spacing()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_duration()",
			"contents": "PDF_set_duration()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_gstate()",
			"contents": "PDF_set_gstate(${1:pdfdoc}, ${2:gstate})",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_horiz_scaling()",
			"contents": "PDF_set_horiz_scaling()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_info()",
			"contents": "PDF_set_info(${1:p}, ${2:key}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_info_author()",
			"contents": "PDF_set_info_author()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_info_creator()",
			"contents": "PDF_set_info_creator()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_info_keywords()",
			"contents": "PDF_set_info_keywords()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_info_subject()",
			"contents": "PDF_set_info_subject()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_info_title()",
			"contents": "PDF_set_info_title()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_layer_dependency()",
			"contents": "PDF_set_layer_dependency(${1:pdfdoc}, ${2:type}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_leading()",
			"contents": "PDF_set_leading()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_parameter()",
			"contents": "PDF_set_parameter(${1:p}, ${2:key}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_text_matrix()",
			"contents": "PDF_set_text_matrix()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_text_pos()",
			"contents": "PDF_set_text_pos(${1:p}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_text_rendering()",
			"contents": "PDF_set_text_rendering()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_text_rise()",
			"contents": "PDF_set_text_rise()",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_value()",
			"contents": "PDF_set_value(${1:p}, ${2:key}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "PDF_set_word_spacing()",
			"contents": "PDF_set_word_spacing()",
			"kind": "function"
		},
		{
			"trigger": "PDF_setcolor()",
			"contents": "PDF_setcolor(${1:p}, ${2:fstype}, ${3:colorspace}, ${4:c1}, ${5:c2}, ${6:c3}, ${7:c4})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setdash()",
			"contents": "PDF_setdash(${1:pdfdoc}, ${2:b}, ${3:w})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setdashpattern()",
			"contents": "PDF_setdashpattern(${1:pdfdoc}, ${2:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setflat()",
			"contents": "PDF_setflat(${1:pdfdoc}, ${2:flatness})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setfont()",
			"contents": "PDF_setfont(${1:pdfdoc}, ${2:font}, ${3:fontsize})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setgray()",
			"contents": "PDF_setgray(${1:p}, ${2:g})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setgray_fill()",
			"contents": "PDF_setgray_fill(${1:p}, ${2:g})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setgray_stroke()",
			"contents": "PDF_setgray_stroke(${1:p}, ${2:g})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setlinecap()",
			"contents": "PDF_setlinecap(${1:p}, ${2:linecap})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setlinejoin()",
			"contents": "PDF_setlinejoin(${1:p}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setlinewidth()",
			"contents": "PDF_setlinewidth(${1:p}, ${2:width})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setmatrix()",
			"contents": "PDF_setmatrix(${1:p}, ${2:a}, ${3:b}, ${4:c}, ${5:d}, ${6:e}, ${7:f})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setmiterlimit()",
			"contents": "PDF_setmiterlimit(${1:pdfdoc}, ${2:miter})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setpolydash()",
			"contents": "PDF_setpolydash()",
			"kind": "function"
		},
		{
			"trigger": "PDF_setrgbcolor()",
			"contents": "PDF_setrgbcolor(${1:p}, ${2:red}, ${3:green}, ${4:blue})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setrgbcolor_fill()",
			"contents": "PDF_setrgbcolor_fill(${1:p}, ${2:red}, ${3:green}, ${4:blue})",
			"kind": "function"
		},
		{
			"trigger": "PDF_setrgbcolor_stroke()",
			"contents": "PDF_setrgbcolor_stroke(${1:p}, ${2:red}, ${3:green}, ${4:blue})",
			"kind": "function"
		},
		{
			"trigger": "PDF_shading()",
			"contents": "PDF_shading(${1:pdfdoc}, ${2:shtype}, ${3:x0}, ${4:y0}, ${5:x1}, ${6:y1}, ${7:c1}, ${8:c2}, ${9:c3}, ${10:c4}, ${11:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_shading_pattern()",
			"contents": "PDF_shading_pattern(${1:pdfdoc}, ${2:shading}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_shfill()",
			"contents": "PDF_shfill(${1:pdfdoc}, ${2:shading})",
			"kind": "function"
		},
		{
			"trigger": "PDF_show()",
			"contents": "PDF_show(${1:pdfdoc}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "PDF_show_boxed()",
			"contents": "PDF_show_boxed(${1:p}, ${2:text}, ${3:left}, ${4:top}, ${5:width}, ${6:height}, ${7:mode}, ${8:feature})",
			"kind": "function"
		},
		{
			"trigger": "PDF_show_xy()",
			"contents": "PDF_show_xy(${1:p}, ${2:text}, ${3:x}, ${4:y})",
			"kind": "function"
		},
		{
			"trigger": "PDF_skew()",
			"contents": "PDF_skew(${1:p}, ${2:alpha}, ${3:beta})",
			"kind": "function"
		},
		{
			"trigger": "PDF_stringwidth()",
			"contents": "PDF_stringwidth(${1:p}, ${2:text}, ${3:font}, ${4:fontsize})",
			"kind": "function"
		},
		{
			"trigger": "PDF_stroke()",
			"contents": "PDF_stroke(${1:p})",
			"kind": "function"
		},
		{
			"trigger": "PDF_suspend_page()",
			"contents": "PDF_suspend_page(${1:pdfdoc}, ${2:optlist})",
			"kind": "function"
		},
		{
			"trigger": "PDF_translate()",
			"contents": "PDF_translate(${1:p}, ${2:tx}, ${3:ty})",
			"kind": "function"
		},
		{
			"trigger": "PDF_utf16_to_utf8()",
			"contents": "PDF_utf16_to_utf8(${1:pdfdoc}, ${2:utf16string})",
			"kind": "function"
		},
		{
			"trigger": "PDF_utf32_to_utf16()",
			"contents": "PDF_utf32_to_utf16(${1:pdfdoc}, ${2:utf32string}, ${3:ordering})",
			"kind": "function"
		},
		{
			"trigger": "PDF_utf8_to_utf16()",
			"contents": "PDF_utf8_to_utf16(${1:pdfdoc}, ${2:utf8string}, ${3:ordering})",
			"kind": "function"
		},
		{
			"trigger": "pfsockopen()",
			"contents": "pfsockopen(${1:hostname})",
			"kind": "function"
		},
		{
			"trigger": "pg_affected_rows()",
			"contents": "pg_affected_rows(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_cancel_query()",
			"contents": "pg_cancel_query(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "pg_client_encoding()",
			"contents": "pg_client_encoding()",
			"kind": "function"
		},
		{
			"trigger": "pg_close()",
			"contents": "pg_close()",
			"kind": "function"
		},
		{
			"trigger": "pg_connect()",
			"contents": "pg_connect(${1:connection_string})",
			"kind": "function"
		},
		{
			"trigger": "pg_connection_busy()",
			"contents": "pg_connection_busy(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "pg_connection_reset()",
			"contents": "pg_connection_reset(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "pg_connection_status()",
			"contents": "pg_connection_status(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "pg_convert()",
			"contents": "pg_convert(${1:connection}, ${2:table_name}, ${3:assoc_array})",
			"kind": "function"
		},
		{
			"trigger": "pg_copy_from()",
			"contents": "pg_copy_from(${1:connection}, ${2:table_name}, ${3:rows})",
			"kind": "function"
		},
		{
			"trigger": "pg_copy_to()",
			"contents": "pg_copy_to(${1:connection}, ${2:table_name})",
			"kind": "function"
		},
		{
			"trigger": "pg_dbname()",
			"contents": "pg_dbname()",
			"kind": "function"
		},
		{
			"trigger": "pg_delete()",
			"contents": "pg_delete(${1:connection}, ${2:table_name}, ${3:assoc_array})",
			"kind": "function"
		},
		{
			"trigger": "pg_end_copy()",
			"contents": "pg_end_copy()",
			"kind": "function"
		},
		{
			"trigger": "pg_escape_bytea()",
			"contents": "pg_escape_bytea()",
			"kind": "function"
		},
		{
			"trigger": "pg_escape_string()",
			"contents": "pg_escape_string()",
			"kind": "function"
		},
		{
			"trigger": "pg_execute()",
			"contents": "pg_execute()",
			"kind": "function"
		},
		{
			"trigger": "pg_fetch_all()",
			"contents": "pg_fetch_all(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_fetch_all_columns()",
			"contents": "pg_fetch_all_columns(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_fetch_array()",
			"contents": "pg_fetch_array(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_fetch_assoc()",
			"contents": "pg_fetch_assoc(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_fetch_object()",
			"contents": "pg_fetch_object(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_fetch_result()",
			"contents": "pg_fetch_result(${1:result}, ${2:row}, ${3:field})",
			"kind": "function"
		},
		{
			"trigger": "pg_fetch_row()",
			"contents": "pg_fetch_row(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_field_is_null()",
			"contents": "pg_field_is_null(${1:result}, ${2:row}, ${3:field})",
			"kind": "function"
		},
		{
			"trigger": "pg_field_name()",
			"contents": "pg_field_name(${1:result}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "pg_field_num()",
			"contents": "pg_field_num(${1:result}, ${2:field_name})",
			"kind": "function"
		},
		{
			"trigger": "pg_field_prtlen()",
			"contents": "pg_field_prtlen(${1:result}, ${2:row_number}, ${3:field_name_or_number})",
			"kind": "function"
		},
		{
			"trigger": "pg_field_size()",
			"contents": "pg_field_size(${1:result}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "pg_field_table()",
			"contents": "pg_field_table(${1:result}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "pg_field_type()",
			"contents": "pg_field_type(${1:result}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "pg_field_type_oid()",
			"contents": "pg_field_type_oid(${1:result}, ${2:field_number})",
			"kind": "function"
		},
		{
			"trigger": "pg_free_result()",
			"contents": "pg_free_result(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_get_notify()",
			"contents": "pg_get_notify(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "pg_get_pid()",
			"contents": "pg_get_pid(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "pg_get_result()",
			"contents": "pg_get_result()",
			"kind": "function"
		},
		{
			"trigger": "pg_host()",
			"contents": "pg_host()",
			"kind": "function"
		},
		{
			"trigger": "pg_insert()",
			"contents": "pg_insert(${1:connection}, ${2:table_name}, ${3:assoc_array})",
			"kind": "function"
		},
		{
			"trigger": "pg_last_error()",
			"contents": "pg_last_error()",
			"kind": "function"
		},
		{
			"trigger": "pg_last_notice()",
			"contents": "pg_last_notice(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "pg_last_oid()",
			"contents": "pg_last_oid(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_close()",
			"contents": "pg_lo_close(${1:large_object})",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_create()",
			"contents": "pg_lo_create()",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_export()",
			"contents": "pg_lo_export()",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_import()",
			"contents": "pg_lo_import()",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_open()",
			"contents": "pg_lo_open(${1:connection}, ${2:oid}, ${3:mode})",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_read()",
			"contents": "pg_lo_read(${1:large_object})",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_read_all()",
			"contents": "pg_lo_read_all(${1:large_object})",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_seek()",
			"contents": "pg_lo_seek(${1:large_object}, ${2:offset})",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_tell()",
			"contents": "pg_lo_tell(${1:large_object})",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_unlink()",
			"contents": "pg_lo_unlink(${1:connection}, ${2:oid})",
			"kind": "function"
		},
		{
			"trigger": "pg_lo_write()",
			"contents": "pg_lo_write(${1:large_object}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "pg_meta_data()",
			"contents": "pg_meta_data(${1:connection}, ${2:table_name})",
			"kind": "function"
		},
		{
			"trigger": "pg_num_fields()",
			"contents": "pg_num_fields(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_num_rows()",
			"contents": "pg_num_rows(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_options()",
			"contents": "pg_options()",
			"kind": "function"
		},
		{
			"trigger": "pg_parameter_status()",
			"contents": "pg_parameter_status()",
			"kind": "function"
		},
		{
			"trigger": "pg_pconnect()",
			"contents": "pg_pconnect(${1:connection_string})",
			"kind": "function"
		},
		{
			"trigger": "pg_ping()",
			"contents": "pg_ping()",
			"kind": "function"
		},
		{
			"trigger": "pg_port()",
			"contents": "pg_port()",
			"kind": "function"
		},
		{
			"trigger": "pg_prepare()",
			"contents": "pg_prepare()",
			"kind": "function"
		},
		{
			"trigger": "pg_put_line()",
			"contents": "pg_put_line()",
			"kind": "function"
		},
		{
			"trigger": "pg_query()",
			"contents": "pg_query()",
			"kind": "function"
		},
		{
			"trigger": "pg_query_params()",
			"contents": "pg_query_params()",
			"kind": "function"
		},
		{
			"trigger": "pg_result_error()",
			"contents": "pg_result_error(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_result_error_field()",
			"contents": "pg_result_error_field(${1:result}, ${2:fieldcode})",
			"kind": "function"
		},
		{
			"trigger": "pg_result_seek()",
			"contents": "pg_result_seek(${1:result}, ${2:offset})",
			"kind": "function"
		},
		{
			"trigger": "pg_result_status()",
			"contents": "pg_result_status(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "pg_select()",
			"contents": "pg_select(${1:connection}, ${2:table_name}, ${3:assoc_array})",
			"kind": "function"
		},
		{
			"trigger": "pg_send_execute()",
			"contents": "pg_send_execute(${1:connection}, ${2:stmtname}, ${3:params})",
			"kind": "function"
		},
		{
			"trigger": "pg_send_prepare()",
			"contents": "pg_send_prepare(${1:connection}, ${2:stmtname}, ${3:query})",
			"kind": "function"
		},
		{
			"trigger": "pg_send_query()",
			"contents": "pg_send_query(${1:connection}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "pg_send_query_params()",
			"contents": "pg_send_query_params(${1:connection}, ${2:query}, ${3:params})",
			"kind": "function"
		},
		{
			"trigger": "pg_set_client_encoding()",
			"contents": "pg_set_client_encoding()",
			"kind": "function"
		},
		{
			"trigger": "pg_set_error_verbosity()",
			"contents": "pg_set_error_verbosity()",
			"kind": "function"
		},
		{
			"trigger": "pg_trace()",
			"contents": "pg_trace(${1:pathname})",
			"kind": "function"
		},
		{
			"trigger": "pg_transaction_status()",
			"contents": "pg_transaction_status(${1:connection})",
			"kind": "function"
		},
		{
			"trigger": "pg_tty()",
			"contents": "pg_tty()",
			"kind": "function"
		},
		{
			"trigger": "pg_unescape_bytea()",
			"contents": "pg_unescape_bytea(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "pg_untrace()",
			"contents": "pg_untrace()",
			"kind": "function"
		},
		{
			"trigger": "pg_update()",
			"contents": "pg_update(${1:connection}, ${2:table_name}, ${3:data}, ${4:condition})",
			"kind": "function"
		},
		{
			"trigger": "pg_version()",
			"contents": "pg_version()",
			"kind": "function"
		},
		{
			"trigger": "php_check_syntax()",
			"contents": "php_check_syntax(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "php_ini_loaded_file()",
			"contents": "php_ini_loaded_file()",
			"kind": "function"
		},
		{
			"trigger": "php_ini_scanned_files()",
			"contents": "php_ini_scanned_files()",
			"kind": "function"
		},
		{
			"trigger": "php_logo_guid()",
			"contents": "php_logo_guid()",
			"kind": "function"
		},
		{
			"trigger": "php_sapi_name()",
			"contents": "php_sapi_name()",
			"kind": "function"
		},
		{
			"trigger": "php_strip_whitespace()",
			"contents": "php_strip_whitespace(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "php_uname()",
			"contents": "php_uname()",
			"kind": "function"
		},
		{
			"trigger": "phpcredits()",
			"contents": "phpcredits()",
			"kind": "function"
		},
		{
			"trigger": "phpinfo()",
			"contents": "phpinfo()",
			"kind": "function"
		},
		{
			"trigger": "phpversion()",
			"contents": "phpversion()",
			"kind": "function"
		},
		{
			"trigger": "pi()",
			"contents": "pi()",
			"kind": "function"
		},
		{
			"trigger": "png2wbmp()",
			"contents": "png2wbmp(${1:pngname}, ${2:wbmpname}, ${3:dest_height}, ${4:dest_width}, ${5:threshold})",
			"kind": "function"
		},
		{
			"trigger": "popen()",
			"contents": "popen(${1:command}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "pos()",
			"contents": "pos()",
			"kind": "function"
		},
		{
			"trigger": "posix_access()",
			"contents": "posix_access(${1:file})",
			"kind": "function"
		},
		{
			"trigger": "posix_ctermid()",
			"contents": "posix_ctermid()",
			"kind": "function"
		},
		{
			"trigger": "posix_errno()",
			"contents": "posix_errno()",
			"kind": "function"
		},
		{
			"trigger": "posix_get_last_error()",
			"contents": "posix_get_last_error()",
			"kind": "function"
		},
		{
			"trigger": "posix_getcwd()",
			"contents": "posix_getcwd()",
			"kind": "function"
		},
		{
			"trigger": "posix_getegid()",
			"contents": "posix_getegid()",
			"kind": "function"
		},
		{
			"trigger": "posix_geteuid()",
			"contents": "posix_geteuid()",
			"kind": "function"
		},
		{
			"trigger": "posix_getgid()",
			"contents": "posix_getgid()",
			"kind": "function"
		},
		{
			"trigger": "posix_getgrgid()",
			"contents": "posix_getgrgid(${1:gid})",
			"kind": "function"
		},
		{
			"trigger": "posix_getgrnam()",
			"contents": "posix_getgrnam(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "posix_getgroups()",
			"contents": "posix_getgroups()",
			"kind": "function"
		},
		{
			"trigger": "posix_getlogin()",
			"contents": "posix_getlogin()",
			"kind": "function"
		},
		{
			"trigger": "posix_getpgid()",
			"contents": "posix_getpgid(${1:pid})",
			"kind": "function"
		},
		{
			"trigger": "posix_getpgrp()",
			"contents": "posix_getpgrp()",
			"kind": "function"
		},
		{
			"trigger": "posix_getpid()",
			"contents": "posix_getpid()",
			"kind": "function"
		},
		{
			"trigger": "posix_getppid()",
			"contents": "posix_getppid()",
			"kind": "function"
		},
		{
			"trigger": "posix_getpwnam()",
			"contents": "posix_getpwnam(${1:username})",
			"kind": "function"
		},
		{
			"trigger": "posix_getpwuid()",
			"contents": "posix_getpwuid(${1:uid})",
			"kind": "function"
		},
		{
			"trigger": "posix_getrlimit()",
			"contents": "posix_getrlimit()",
			"kind": "function"
		},
		{
			"trigger": "posix_getsid()",
			"contents": "posix_getsid(${1:pid})",
			"kind": "function"
		},
		{
			"trigger": "posix_getuid()",
			"contents": "posix_getuid()",
			"kind": "function"
		},
		{
			"trigger": "posix_initgroups()",
			"contents": "posix_initgroups(${1:name}, ${2:base_group_id})",
			"kind": "function"
		},
		{
			"trigger": "posix_isatty()",
			"contents": "posix_isatty(${1:fd})",
			"kind": "function"
		},
		{
			"trigger": "posix_kill()",
			"contents": "posix_kill(${1:pid}, ${2:sig})",
			"kind": "function"
		},
		{
			"trigger": "posix_mkfifo()",
			"contents": "posix_mkfifo(${1:pathname}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "posix_mknod()",
			"contents": "posix_mknod(${1:pathname}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "posix_setegid()",
			"contents": "posix_setegid(${1:gid})",
			"kind": "function"
		},
		{
			"trigger": "posix_seteuid()",
			"contents": "posix_seteuid(${1:uid})",
			"kind": "function"
		},
		{
			"trigger": "posix_setgid()",
			"contents": "posix_setgid(${1:gid})",
			"kind": "function"
		},
		{
			"trigger": "posix_setpgid()",
			"contents": "posix_setpgid(${1:pid}, ${2:pgid})",
			"kind": "function"
		},
		{
			"trigger": "posix_setsid()",
			"contents": "posix_setsid()",
			"kind": "function"
		},
		{
			"trigger": "posix_setuid()",
			"contents": "posix_setuid(${1:uid})",
			"kind": "function"
		},
		{
			"trigger": "posix_strerror()",
			"contents": "posix_strerror(${1:errno})",
			"kind": "function"
		},
		{
			"trigger": "posix_times()",
			"contents": "posix_times()",
			"kind": "function"
		},
		{
			"trigger": "posix_ttyname()",
			"contents": "posix_ttyname(${1:fd})",
			"kind": "function"
		},
		{
			"trigger": "posix_uname()",
			"contents": "posix_uname()",
			"kind": "function"
		},
		{
			"trigger": "pow()",
			"contents": "pow(${1:base}, ${2:exp})",
			"kind": "function"
		},
		{
			"trigger": "preg_filter()",
			"contents": "preg_filter(${1:pattern}, ${2:replacement}, ${3:subject})",
			"kind": "function"
		},
		{
			"trigger": "preg_grep()",
			"contents": "preg_grep(${1:pattern}, ${2:input})",
			"kind": "function"
		},
		{
			"trigger": "preg_last_error()",
			"contents": "preg_last_error()",
			"kind": "function"
		},
		{
			"trigger": "preg_match()",
			"contents": "preg_match(${1:pattern}, ${2:subject})",
			"kind": "function"
		},
		{
			"trigger": "preg_match_all()",
			"contents": "preg_match_all(${1:pattern}, ${2:subject}, ${3:matches})",
			"kind": "function"
		},
		{
			"trigger": "preg_quote()",
			"contents": "preg_quote(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "preg_replace()",
			"contents": "preg_replace(${1:pattern}, ${2:replacement}, ${3:subject})",
			"kind": "function"
		},
		{
			"trigger": "preg_replace_callback()",
			"contents": "preg_replace_callback(${1:pattern}, ${2:callback}, ${3:subject})",
			"kind": "function"
		},
		{
			"trigger": "preg_replace_callback_array()",
			"contents": "preg_replace_callback_array(${1:patterns_and_callbacks}, ${2:subject})",
			"kind": "function"
		},
		{
			"trigger": "preg_split()",
			"contents": "preg_split(${1:pattern}, ${2:subject})",
			"kind": "function"
		},
		{
			"trigger": "prev()",
			"contents": "prev(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "print()",
			"contents": "print(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "print_r()",
			"contents": "print_r(${1:expression})",
			"kind": "function"
		},
		{
			"trigger": "printer_abort()",
			"contents": "printer_abort(${1:printer_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_close()",
			"contents": "printer_close(${1:printer_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_create_brush()",
			"contents": "printer_create_brush(${1:style}, ${2:color})",
			"kind": "function"
		},
		{
			"trigger": "printer_create_dc()",
			"contents": "printer_create_dc(${1:printer_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_create_font()",
			"contents": "printer_create_font(${1:face}, ${2:height}, ${3:width}, ${4:font_weight}, ${5:italic}, ${6:underline}, ${7:strikeout}, ${8:orientation})",
			"kind": "function"
		},
		{
			"trigger": "printer_create_pen()",
			"contents": "printer_create_pen(${1:style}, ${2:width}, ${3:color})",
			"kind": "function"
		},
		{
			"trigger": "printer_delete_brush()",
			"contents": "printer_delete_brush(${1:brush_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_delete_dc()",
			"contents": "printer_delete_dc(${1:printer_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_delete_font()",
			"contents": "printer_delete_font(${1:font_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_delete_pen()",
			"contents": "printer_delete_pen(${1:pen_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_draw_bmp()",
			"contents": "printer_draw_bmp(${1:printer_handle}, ${2:filename}, ${3:x}, ${4:y})",
			"kind": "function"
		},
		{
			"trigger": "printer_draw_chord()",
			"contents": "printer_draw_chord(${1:printer_handle}, ${2:rec_x}, ${3:rec_y}, ${4:rec_x1}, ${5:rec_y1}, ${6:rad_x}, ${7:rad_y}, ${8:rad_x1}, ${9:rad_y1})",
			"kind": "function"
		},
		{
			"trigger": "printer_draw_elipse()",
			"contents": "printer_draw_elipse(${1:printer_handle}, ${2:ul_x}, ${3:ul_y}, ${4:lr_x}, ${5:lr_y})",
			"kind": "function"
		},
		{
			"trigger": "printer_draw_line()",
			"contents": "printer_draw_line(${1:printer_handle}, ${2:from_x}, ${3:from_y}, ${4:to_x}, ${5:to_y})",
			"kind": "function"
		},
		{
			"trigger": "printer_draw_pie()",
			"contents": "printer_draw_pie(${1:printer_handle}, ${2:rec_x}, ${3:rec_y}, ${4:rec_x1}, ${5:rec_y1}, ${6:rad1_x}, ${7:rad1_y}, ${8:rad2_x}, ${9:rad2_y})",
			"kind": "function"
		},
		{
			"trigger": "printer_draw_rectangle()",
			"contents": "printer_draw_rectangle(${1:printer_handle}, ${2:ul_x}, ${3:ul_y}, ${4:lr_x}, ${5:lr_y})",
			"kind": "function"
		},
		{
			"trigger": "printer_draw_roundrect()",
			"contents": "printer_draw_roundrect(${1:printer_handle}, ${2:ul_x}, ${3:ul_y}, ${4:lr_x}, ${5:lr_y}, ${6:width}, ${7:height})",
			"kind": "function"
		},
		{
			"trigger": "printer_draw_text()",
			"contents": "printer_draw_text(${1:printer_handle}, ${2:text}, ${3:x}, ${4:y})",
			"kind": "function"
		},
		{
			"trigger": "printer_end_doc()",
			"contents": "printer_end_doc(${1:printer_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_end_page()",
			"contents": "printer_end_page(${1:printer_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_get_option()",
			"contents": "printer_get_option(${1:printer_handle}, ${2:option})",
			"kind": "function"
		},
		{
			"trigger": "printer_list()",
			"contents": "printer_list(${1:enumtype})",
			"kind": "function"
		},
		{
			"trigger": "printer_logical_fontheight()",
			"contents": "printer_logical_fontheight(${1:printer_handle}, ${2:height})",
			"kind": "function"
		},
		{
			"trigger": "printer_open()",
			"contents": "printer_open()",
			"kind": "function"
		},
		{
			"trigger": "printer_select_brush()",
			"contents": "printer_select_brush(${1:printer_handle}, ${2:brush_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_select_font()",
			"contents": "printer_select_font(${1:printer_handle}, ${2:font_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_select_pen()",
			"contents": "printer_select_pen(${1:printer_handle}, ${2:pen_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_set_option()",
			"contents": "printer_set_option(${1:printer_handle}, ${2:option}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "printer_start_doc()",
			"contents": "printer_start_doc(${1:printer_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_start_page()",
			"contents": "printer_start_page(${1:printer_handle})",
			"kind": "function"
		},
		{
			"trigger": "printer_write()",
			"contents": "printer_write(${1:printer_handle}, ${2:content})",
			"kind": "function"
		},
		{
			"trigger": "printf()",
			"contents": "printf(${1:format})",
			"kind": "function"
		},
		{
			"trigger": "proc_close()",
			"contents": "proc_close(${1:process})",
			"kind": "function"
		},
		{
			"trigger": "proc_get_status()",
			"contents": "proc_get_status(${1:process})",
			"kind": "function"
		},
		{
			"trigger": "proc_nice()",
			"contents": "proc_nice(${1:increment})",
			"kind": "function"
		},
		{
			"trigger": "proc_open()",
			"contents": "proc_open(${1:cmd}, ${2:descriptorspec}, ${3:pipes})",
			"kind": "function"
		},
		{
			"trigger": "proc_terminate()",
			"contents": "proc_terminate(${1:process})",
			"kind": "function"
		},
		{
			"trigger": "property_exists()",
			"contents": "property_exists(${1:class}, ${2:property})",
			"kind": "function"
		},
		{
			"trigger": "ps_add_bookmark()",
			"contents": "ps_add_bookmark(${1:psdoc}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "ps_add_launchlink()",
			"contents": "ps_add_launchlink(${1:psdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:filename})",
			"kind": "function"
		},
		{
			"trigger": "ps_add_locallink()",
			"contents": "ps_add_locallink(${1:psdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:page}, ${7:dest})",
			"kind": "function"
		},
		{
			"trigger": "ps_add_note()",
			"contents": "ps_add_note(${1:psdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:contents}, ${7:title}, ${8:icon}, ${9:open})",
			"kind": "function"
		},
		{
			"trigger": "ps_add_pdflink()",
			"contents": "ps_add_pdflink(${1:psdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:filename}, ${7:page}, ${8:dest})",
			"kind": "function"
		},
		{
			"trigger": "ps_add_weblink()",
			"contents": "ps_add_weblink(${1:psdoc}, ${2:llx}, ${3:lly}, ${4:urx}, ${5:ury}, ${6:url})",
			"kind": "function"
		},
		{
			"trigger": "ps_arc()",
			"contents": "ps_arc(${1:psdoc}, ${2:x}, ${3:y}, ${4:radius}, ${5:alpha}, ${6:beta})",
			"kind": "function"
		},
		{
			"trigger": "ps_arcn()",
			"contents": "ps_arcn(${1:psdoc}, ${2:x}, ${3:y}, ${4:radius}, ${5:alpha}, ${6:beta})",
			"kind": "function"
		},
		{
			"trigger": "ps_begin_page()",
			"contents": "ps_begin_page(${1:psdoc}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "ps_begin_pattern()",
			"contents": "ps_begin_pattern(${1:psdoc}, ${2:width}, ${3:height}, ${4:xstep}, ${5:ystep}, ${6:painttype})",
			"kind": "function"
		},
		{
			"trigger": "ps_begin_template()",
			"contents": "ps_begin_template(${1:psdoc}, ${2:width}, ${3:height})",
			"kind": "function"
		},
		{
			"trigger": "ps_circle()",
			"contents": "ps_circle(${1:psdoc}, ${2:x}, ${3:y}, ${4:radius})",
			"kind": "function"
		},
		{
			"trigger": "ps_clip()",
			"contents": "ps_clip(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_close()",
			"contents": "ps_close(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_close_image()",
			"contents": "ps_close_image(${1:psdoc}, ${2:imageid})",
			"kind": "function"
		},
		{
			"trigger": "ps_closepath()",
			"contents": "ps_closepath(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_closepath_stroke()",
			"contents": "ps_closepath_stroke(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_continue_text()",
			"contents": "ps_continue_text(${1:psdoc}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "ps_curveto()",
			"contents": "ps_curveto(${1:psdoc}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:x3}, ${7:y3})",
			"kind": "function"
		},
		{
			"trigger": "ps_delete()",
			"contents": "ps_delete(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_end_page()",
			"contents": "ps_end_page(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_end_pattern()",
			"contents": "ps_end_pattern(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_end_template()",
			"contents": "ps_end_template(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_fill()",
			"contents": "ps_fill(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_fill_stroke()",
			"contents": "ps_fill_stroke(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_findfont()",
			"contents": "ps_findfont(${1:psdoc}, ${2:fontname}, ${3:encoding})",
			"kind": "function"
		},
		{
			"trigger": "ps_get_buffer()",
			"contents": "ps_get_buffer(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_get_parameter()",
			"contents": "ps_get_parameter(${1:psdoc}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "ps_get_value()",
			"contents": "ps_get_value(${1:psdoc}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "ps_hyphenate()",
			"contents": "ps_hyphenate(${1:psdoc}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "ps_include_file()",
			"contents": "ps_include_file(${1:psdoc}, ${2:file})",
			"kind": "function"
		},
		{
			"trigger": "ps_lineto()",
			"contents": "ps_lineto(${1:psdoc}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "ps_makespotcolor()",
			"contents": "ps_makespotcolor(${1:psdoc}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "ps_moveto()",
			"contents": "ps_moveto(${1:psdoc}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "ps_new()",
			"contents": "ps_new()",
			"kind": "function"
		},
		{
			"trigger": "ps_open_file()",
			"contents": "ps_open_file(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_open_image()",
			"contents": "ps_open_image(${1:psdoc}, ${2:type}, ${3:source}, ${4:data}, ${5:lenght}, ${6:width}, ${7:height}, ${8:components}, ${9:bpc}, ${10:params})",
			"kind": "function"
		},
		{
			"trigger": "ps_open_image_file()",
			"contents": "ps_open_image_file(${1:psdoc}, ${2:type}, ${3:filename})",
			"kind": "function"
		},
		{
			"trigger": "ps_open_memory_image()",
			"contents": "ps_open_memory_image(${1:psdoc}, ${2:gd})",
			"kind": "function"
		},
		{
			"trigger": "ps_place_image()",
			"contents": "ps_place_image(${1:psdoc}, ${2:imageid}, ${3:x}, ${4:y}, ${5:scale})",
			"kind": "function"
		},
		{
			"trigger": "ps_rect()",
			"contents": "ps_rect(${1:psdoc}, ${2:x}, ${3:y}, ${4:width}, ${5:height})",
			"kind": "function"
		},
		{
			"trigger": "ps_restore()",
			"contents": "ps_restore(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_rotate()",
			"contents": "ps_rotate(${1:psdoc}, ${2:rot})",
			"kind": "function"
		},
		{
			"trigger": "ps_save()",
			"contents": "ps_save(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_scale()",
			"contents": "ps_scale(${1:psdoc}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "ps_set_border_color()",
			"contents": "ps_set_border_color(${1:psdoc}, ${2:red}, ${3:green}, ${4:blue})",
			"kind": "function"
		},
		{
			"trigger": "ps_set_border_dash()",
			"contents": "ps_set_border_dash(${1:psdoc}, ${2:black}, ${3:white})",
			"kind": "function"
		},
		{
			"trigger": "ps_set_border_style()",
			"contents": "ps_set_border_style(${1:psdoc}, ${2:style}, ${3:width})",
			"kind": "function"
		},
		{
			"trigger": "ps_set_info()",
			"contents": "ps_set_info(${1:p}, ${2:key}, ${3:val})",
			"kind": "function"
		},
		{
			"trigger": "ps_set_parameter()",
			"contents": "ps_set_parameter(${1:psdoc}, ${2:name}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "ps_set_text_pos()",
			"contents": "ps_set_text_pos(${1:psdoc}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "ps_set_value()",
			"contents": "ps_set_value(${1:psdoc}, ${2:name}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "ps_setcolor()",
			"contents": "ps_setcolor(${1:psdoc}, ${2:type}, ${3:colorspace}, ${4:c1}, ${5:c2}, ${6:c3}, ${7:c4})",
			"kind": "function"
		},
		{
			"trigger": "ps_setdash()",
			"contents": "ps_setdash(${1:psdoc}, ${2:on}, ${3:off})",
			"kind": "function"
		},
		{
			"trigger": "ps_setflat()",
			"contents": "ps_setflat(${1:psdoc}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "ps_setfont()",
			"contents": "ps_setfont(${1:psdoc}, ${2:fontid}, ${3:size})",
			"kind": "function"
		},
		{
			"trigger": "ps_setgray()",
			"contents": "ps_setgray(${1:psdoc}, ${2:gray})",
			"kind": "function"
		},
		{
			"trigger": "ps_setlinecap()",
			"contents": "ps_setlinecap(${1:psdoc}, ${2:type})",
			"kind": "function"
		},
		{
			"trigger": "ps_setlinejoin()",
			"contents": "ps_setlinejoin(${1:psdoc}, ${2:type})",
			"kind": "function"
		},
		{
			"trigger": "ps_setlinewidth()",
			"contents": "ps_setlinewidth(${1:psdoc}, ${2:width})",
			"kind": "function"
		},
		{
			"trigger": "ps_setmiterlimit()",
			"contents": "ps_setmiterlimit(${1:psdoc}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "ps_setoverprintmode()",
			"contents": "ps_setoverprintmode(${1:psdoc}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "ps_setpolydash()",
			"contents": "ps_setpolydash(${1:psdoc}, ${2:arr})",
			"kind": "function"
		},
		{
			"trigger": "ps_shading()",
			"contents": "ps_shading(${1:psdoc}, ${2:type}, ${3:x0}, ${4:y0}, ${5:x1}, ${6:y1}, ${7:c1}, ${8:c2}, ${9:c3}, ${10:c4}, ${11:optlist})",
			"kind": "function"
		},
		{
			"trigger": "ps_shading_pattern()",
			"contents": "ps_shading_pattern(${1:psdoc}, ${2:shadingid}, ${3:optlist})",
			"kind": "function"
		},
		{
			"trigger": "ps_shfill()",
			"contents": "ps_shfill(${1:psdoc}, ${2:shadingid})",
			"kind": "function"
		},
		{
			"trigger": "ps_show()",
			"contents": "ps_show(${1:psdoc}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "ps_show2()",
			"contents": "ps_show2(${1:psdoc}, ${2:text}, ${3:len})",
			"kind": "function"
		},
		{
			"trigger": "ps_show_boxed()",
			"contents": "ps_show_boxed(${1:psdoc}, ${2:text}, ${3:left}, ${4:bottom}, ${5:width}, ${6:height}, ${7:hmode})",
			"kind": "function"
		},
		{
			"trigger": "ps_show_xy()",
			"contents": "ps_show_xy(${1:psdoc}, ${2:text}, ${3:x}, ${4:y})",
			"kind": "function"
		},
		{
			"trigger": "ps_show_xy2()",
			"contents": "ps_show_xy2(${1:psdoc}, ${2:text}, ${3:len}, ${4:xcoor}, ${5:ycoor})",
			"kind": "function"
		},
		{
			"trigger": "ps_string_geometry()",
			"contents": "ps_string_geometry(${1:psdoc}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "ps_stringwidth()",
			"contents": "ps_stringwidth(${1:psdoc}, ${2:text})",
			"kind": "function"
		},
		{
			"trigger": "ps_stroke()",
			"contents": "ps_stroke(${1:psdoc})",
			"kind": "function"
		},
		{
			"trigger": "ps_symbol()",
			"contents": "ps_symbol(${1:psdoc}, ${2:ord})",
			"kind": "function"
		},
		{
			"trigger": "ps_symbol_name()",
			"contents": "ps_symbol_name(${1:psdoc}, ${2:ord})",
			"kind": "function"
		},
		{
			"trigger": "ps_symbol_width()",
			"contents": "ps_symbol_width(${1:psdoc}, ${2:ord})",
			"kind": "function"
		},
		{
			"trigger": "ps_translate()",
			"contents": "ps_translate(${1:psdoc}, ${2:x}, ${3:y})",
			"kind": "function"
		},
		{
			"trigger": "pspell_add_to_personal()",
			"contents": "pspell_add_to_personal(${1:dictionary_link}, ${2:word})",
			"kind": "function"
		},
		{
			"trigger": "pspell_add_to_session()",
			"contents": "pspell_add_to_session(${1:dictionary_link}, ${2:word})",
			"kind": "function"
		},
		{
			"trigger": "pspell_check()",
			"contents": "pspell_check(${1:dictionary_link}, ${2:word})",
			"kind": "function"
		},
		{
			"trigger": "pspell_clear_session()",
			"contents": "pspell_clear_session(${1:dictionary_link})",
			"kind": "function"
		},
		{
			"trigger": "pspell_config_create()",
			"contents": "pspell_config_create(${1:language})",
			"kind": "function"
		},
		{
			"trigger": "pspell_config_data_dir()",
			"contents": "pspell_config_data_dir(${1:conf}, ${2:directory})",
			"kind": "function"
		},
		{
			"trigger": "pspell_config_dict_dir()",
			"contents": "pspell_config_dict_dir(${1:conf}, ${2:directory})",
			"kind": "function"
		},
		{
			"trigger": "pspell_config_ignore()",
			"contents": "pspell_config_ignore(${1:dictionary_link}, ${2:n})",
			"kind": "function"
		},
		{
			"trigger": "pspell_config_mode()",
			"contents": "pspell_config_mode(${1:dictionary_link}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "pspell_config_personal()",
			"contents": "pspell_config_personal(${1:dictionary_link}, ${2:file})",
			"kind": "function"
		},
		{
			"trigger": "pspell_config_repl()",
			"contents": "pspell_config_repl(${1:dictionary_link}, ${2:file})",
			"kind": "function"
		},
		{
			"trigger": "pspell_config_runtogether()",
			"contents": "pspell_config_runtogether(${1:dictionary_link}, ${2:flag})",
			"kind": "function"
		},
		{
			"trigger": "pspell_config_save_repl()",
			"contents": "pspell_config_save_repl(${1:dictionary_link}, ${2:flag})",
			"kind": "function"
		},
		{
			"trigger": "pspell_new()",
			"contents": "pspell_new(${1:language})",
			"kind": "function"
		},
		{
			"trigger": "pspell_new_config()",
			"contents": "pspell_new_config(${1:config})",
			"kind": "function"
		},
		{
			"trigger": "pspell_new_personal()",
			"contents": "pspell_new_personal(${1:personal}, ${2:language})",
			"kind": "function"
		},
		{
			"trigger": "pspell_save_wordlist()",
			"contents": "pspell_save_wordlist(${1:dictionary_link})",
			"kind": "function"
		},
		{
			"trigger": "pspell_store_replacement()",
			"contents": "pspell_store_replacement(${1:dictionary_link}, ${2:misspelled}, ${3:correct})",
			"kind": "function"
		},
		{
			"trigger": "pspell_suggest()",
			"contents": "pspell_suggest(${1:dictionary_link}, ${2:word})",
			"kind": "function"
		},
		{
			"trigger": "putenv()",
			"contents": "putenv(${1:setting})",
			"kind": "function"
		},
		{
			"trigger": "px_close()",
			"contents": "px_close(${1:pxdoc})",
			"kind": "function"
		},
		{
			"trigger": "px_create_fp()",
			"contents": "px_create_fp(${1:pxdoc}, ${2:file}, ${3:fielddesc})",
			"kind": "function"
		},
		{
			"trigger": "px_date2string()",
			"contents": "px_date2string(${1:pxdoc}, ${2:value}, ${3:format})",
			"kind": "function"
		},
		{
			"trigger": "px_delete()",
			"contents": "px_delete(${1:pxdoc})",
			"kind": "function"
		},
		{
			"trigger": "px_delete_record()",
			"contents": "px_delete_record(${1:pxdoc}, ${2:num})",
			"kind": "function"
		},
		{
			"trigger": "px_get_field()",
			"contents": "px_get_field(${1:pxdoc}, ${2:fieldno})",
			"kind": "function"
		},
		{
			"trigger": "px_get_info()",
			"contents": "px_get_info(${1:pxdoc})",
			"kind": "function"
		},
		{
			"trigger": "px_get_parameter()",
			"contents": "px_get_parameter(${1:pxdoc}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "px_get_record()",
			"contents": "px_get_record(${1:pxdoc}, ${2:num})",
			"kind": "function"
		},
		{
			"trigger": "px_get_schema()",
			"contents": "px_get_schema(${1:pxdoc})",
			"kind": "function"
		},
		{
			"trigger": "px_get_value()",
			"contents": "px_get_value(${1:pxdoc}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "px_insert_record()",
			"contents": "px_insert_record(${1:pxdoc}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "px_new()",
			"contents": "px_new()",
			"kind": "function"
		},
		{
			"trigger": "px_numfields()",
			"contents": "px_numfields(${1:pxdoc})",
			"kind": "function"
		},
		{
			"trigger": "px_numrecords()",
			"contents": "px_numrecords(${1:pxdoc})",
			"kind": "function"
		},
		{
			"trigger": "px_open_fp()",
			"contents": "px_open_fp(${1:pxdoc}, ${2:file})",
			"kind": "function"
		},
		{
			"trigger": "px_put_record()",
			"contents": "px_put_record(${1:pxdoc}, ${2:record})",
			"kind": "function"
		},
		{
			"trigger": "px_retrieve_record()",
			"contents": "px_retrieve_record(${1:pxdoc}, ${2:num})",
			"kind": "function"
		},
		{
			"trigger": "px_set_blob_file()",
			"contents": "px_set_blob_file(${1:pxdoc}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "px_set_parameter()",
			"contents": "px_set_parameter(${1:pxdoc}, ${2:name}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "px_set_tablename()",
			"contents": "px_set_tablename(${1:pxdoc}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "px_set_targetencoding()",
			"contents": "px_set_targetencoding(${1:pxdoc}, ${2:encoding})",
			"kind": "function"
		},
		{
			"trigger": "px_set_value()",
			"contents": "px_set_value(${1:pxdoc}, ${2:name}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "px_timestamp2string()",
			"contents": "px_timestamp2string(${1:pxdoc}, ${2:value}, ${3:format})",
			"kind": "function"
		},
		{
			"trigger": "px_update_record()",
			"contents": "px_update_record(${1:pxdoc}, ${2:data}, ${3:num})",
			"kind": "function"
		},
		{
			"trigger": "qdom_error()",
			"contents": "qdom_error()",
			"kind": "function"
		},
		{
			"trigger": "qdom_tree()",
			"contents": "qdom_tree(${1:doc})",
			"kind": "function"
		},
		{
			"trigger": "quoted_printable_decode()",
			"contents": "quoted_printable_decode(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "quoted_printable_encode()",
			"contents": "quoted_printable_encode(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "quotemeta()",
			"contents": "quotemeta(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "rad2deg()",
			"contents": "rad2deg(${1:number})",
			"kind": "function"
		},
		{
			"trigger": "radius_acct_open()",
			"contents": "radius_acct_open()",
			"kind": "function"
		},
		{
			"trigger": "radius_add_server()",
			"contents": "radius_add_server(${1:radius_handle}, ${2:hostname}, ${3:port}, ${4:secret}, ${5:timeout}, ${6:max_tries})",
			"kind": "function"
		},
		{
			"trigger": "radius_auth_open()",
			"contents": "radius_auth_open()",
			"kind": "function"
		},
		{
			"trigger": "radius_close()",
			"contents": "radius_close(${1:radius_handle})",
			"kind": "function"
		},
		{
			"trigger": "radius_config()",
			"contents": "radius_config(${1:radius_handle}, ${2:file})",
			"kind": "function"
		},
		{
			"trigger": "radius_create_request()",
			"contents": "radius_create_request(${1:radius_handle}, ${2:type})",
			"kind": "function"
		},
		{
			"trigger": "radius_cvt_addr()",
			"contents": "radius_cvt_addr(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "radius_cvt_int()",
			"contents": "radius_cvt_int(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "radius_cvt_string()",
			"contents": "radius_cvt_string(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "radius_demangle()",
			"contents": "radius_demangle(${1:radius_handle}, ${2:mangled})",
			"kind": "function"
		},
		{
			"trigger": "radius_demangle_mppe_key()",
			"contents": "radius_demangle_mppe_key(${1:radius_handle}, ${2:mangled})",
			"kind": "function"
		},
		{
			"trigger": "radius_get_attr()",
			"contents": "radius_get_attr(${1:radius_handle})",
			"kind": "function"
		},
		{
			"trigger": "radius_get_vendor_attr()",
			"contents": "radius_get_vendor_attr(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "radius_put_addr()",
			"contents": "radius_put_addr(${1:radius_handle}, ${2:type}, ${3:addr})",
			"kind": "function"
		},
		{
			"trigger": "radius_put_attr()",
			"contents": "radius_put_attr(${1:radius_handle}, ${2:type}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "radius_put_int()",
			"contents": "radius_put_int(${1:radius_handle}, ${2:type}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "radius_put_string()",
			"contents": "radius_put_string(${1:radius_handle}, ${2:type}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "radius_put_vendor_addr()",
			"contents": "radius_put_vendor_addr(${1:radius_handle}, ${2:vendor}, ${3:type}, ${4:addr})",
			"kind": "function"
		},
		{
			"trigger": "radius_put_vendor_attr()",
			"contents": "radius_put_vendor_attr(${1:radius_handle}, ${2:vendor}, ${3:type}, ${4:value})",
			"kind": "function"
		},
		{
			"trigger": "radius_put_vendor_int()",
			"contents": "radius_put_vendor_int(${1:radius_handle}, ${2:vendor}, ${3:type}, ${4:value})",
			"kind": "function"
		},
		{
			"trigger": "radius_put_vendor_string()",
			"contents": "radius_put_vendor_string(${1:radius_handle}, ${2:vendor}, ${3:type}, ${4:value})",
			"kind": "function"
		},
		{
			"trigger": "radius_request_authenticator()",
			"contents": "radius_request_authenticator(${1:radius_handle})",
			"kind": "function"
		},
		{
			"trigger": "radius_send_request()",
			"contents": "radius_send_request(${1:radius_handle})",
			"kind": "function"
		},
		{
			"trigger": "radius_server_secret()",
			"contents": "radius_server_secret(${1:radius_handle})",
			"kind": "function"
		},
		{
			"trigger": "radius_strerror()",
			"contents": "radius_strerror(${1:radius_handle})",
			"kind": "function"
		},
		{
			"trigger": "rand()",
			"contents": "rand()",
			"kind": "function"
		},
		{
			"trigger": "random_bytes()",
			"contents": "random_bytes(${1:length})",
			"kind": "function"
		},
		{
			"trigger": "random_int()",
			"contents": "random_int(${1:min}, ${2:max})",
			"kind": "function"
		},
		{
			"trigger": "range()",
			"contents": "range(${1:low}, ${2:high})",
			"kind": "function"
		},
		{
			"trigger": "rar_wrapper_cache_stats()",
			"contents": "rar_wrapper_cache_stats()",
			"kind": "function"
		},
		{
			"trigger": "rawurldecode()",
			"contents": "rawurldecode(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "rawurlencode()",
			"contents": "rawurlencode(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "read_exif_data()",
			"contents": "read_exif_data()",
			"kind": "function"
		},
		{
			"trigger": "readdir()",
			"contents": "readdir()",
			"kind": "function"
		},
		{
			"trigger": "readfile()",
			"contents": "readfile(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "readgzfile()",
			"contents": "readgzfile(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "readline()",
			"contents": "readline()",
			"kind": "function"
		},
		{
			"trigger": "readline_add_history()",
			"contents": "readline_add_history(${1:line})",
			"kind": "function"
		},
		{
			"trigger": "readline_callback_handler_install()",
			"contents": "readline_callback_handler_install(${1:prompt}, ${2:callback})",
			"kind": "function"
		},
		{
			"trigger": "readline_callback_handler_remove()",
			"contents": "readline_callback_handler_remove()",
			"kind": "function"
		},
		{
			"trigger": "readline_callback_read_char()",
			"contents": "readline_callback_read_char()",
			"kind": "function"
		},
		{
			"trigger": "readline_clear_history()",
			"contents": "readline_clear_history()",
			"kind": "function"
		},
		{
			"trigger": "readline_completion_function()",
			"contents": "readline_completion_function(${1:function})",
			"kind": "function"
		},
		{
			"trigger": "readline_info()",
			"contents": "readline_info()",
			"kind": "function"
		},
		{
			"trigger": "readline_list_history()",
			"contents": "readline_list_history()",
			"kind": "function"
		},
		{
			"trigger": "readline_on_new_line()",
			"contents": "readline_on_new_line()",
			"kind": "function"
		},
		{
			"trigger": "readline_read_history()",
			"contents": "readline_read_history()",
			"kind": "function"
		},
		{
			"trigger": "readline_redisplay()",
			"contents": "readline_redisplay()",
			"kind": "function"
		},
		{
			"trigger": "readline_write_history()",
			"contents": "readline_write_history()",
			"kind": "function"
		},
		{
			"trigger": "readlink()",
			"contents": "readlink(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "realpath()",
			"contents": "realpath(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "realpath_cache_get()",
			"contents": "realpath_cache_get()",
			"kind": "function"
		},
		{
			"trigger": "realpath_cache_size()",
			"contents": "realpath_cache_size()",
			"kind": "function"
		},
		{
			"trigger": "recode()",
			"contents": "recode()",
			"kind": "function"
		},
		{
			"trigger": "recode_file()",
			"contents": "recode_file(${1:request}, ${2:input}, ${3:output})",
			"kind": "function"
		},
		{
			"trigger": "recode_string()",
			"contents": "recode_string(${1:request}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "()",
			"contents": "(${1:name})"
		},
		{
			"trigger": "register_shutdown_function()",
			"contents": "register_shutdown_function(${1:function})",
			"kind": "function"
		},
		{
			"trigger": "register_tick_function()",
			"contents": "register_tick_function(${1:function})",
			"kind": "function"
		},
		{
			"trigger": "rename()",
			"contents": "rename(${1:oldname}, ${2:newname})",
			"kind": "function"
		},
		{
			"trigger": "rename_function()",
			"contents": "rename_function(${1:original_name}, ${2:new_name})",
			"kind": "function"
		},
		{
			"trigger": "()",
			"contents": "()"
		},
		{
			"trigger": "()",
			"contents": "()"
		},
		{
			"trigger": "reset()",
			"contents": "reset(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "restore_error_handler()",
			"contents": "restore_error_handler()",
			"kind": "function"
		},
		{
			"trigger": "restore_exception_handler()",
			"contents": "restore_exception_handler()",
			"kind": "function"
		},
		{
			"trigger": "restore_include_path()",
			"contents": "restore_include_path()",
			"kind": "function"
		},
		{
			"trigger": "()",
			"contents": "()"
		},
		{
			"trigger": "rewind()",
			"contents": "rewind(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "rewinddir()",
			"contents": "rewinddir()",
			"kind": "function"
		},
		{
			"trigger": "rmdir()",
			"contents": "rmdir(${1:dirname})",
			"kind": "function"
		},
		{
			"trigger": "round()",
			"contents": "round(${1:val})",
			"kind": "function"
		},
		{
			"trigger": "rpm_close()",
			"contents": "rpm_close(${1:rpmr})",
			"kind": "function"
		},
		{
			"trigger": "rpm_get_tag()",
			"contents": "rpm_get_tag(${1:rpmr}, ${2:tagnum})",
			"kind": "function"
		},
		{
			"trigger": "rpm_is_valid()",
			"contents": "rpm_is_valid(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "rpm_open()",
			"contents": "rpm_open(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "rpm_version()",
			"contents": "rpm_version()",
			"kind": "function"
		},
		{
			"trigger": "rsort()",
			"contents": "rsort(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "rtrim()",
			"contents": "rtrim(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "runkit_class_adopt()",
			"contents": "runkit_class_adopt(${1:classname}, ${2:parentname})",
			"kind": "function"
		},
		{
			"trigger": "runkit_class_emancipate()",
			"contents": "runkit_class_emancipate(${1:classname})",
			"kind": "function"
		},
		{
			"trigger": "runkit_constant_add()",
			"contents": "runkit_constant_add(${1:constname}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "runkit_constant_redefine()",
			"contents": "runkit_constant_redefine(${1:constname}, ${2:newvalue})",
			"kind": "function"
		},
		{
			"trigger": "runkit_constant_remove()",
			"contents": "runkit_constant_remove(${1:constname})",
			"kind": "function"
		},
		{
			"trigger": "runkit_function_add()",
			"contents": "runkit_function_add(${1:funcname}, ${2:arglist}, ${3:code})",
			"kind": "function"
		},
		{
			"trigger": "runkit_function_copy()",
			"contents": "runkit_function_copy(${1:funcname}, ${2:targetname})",
			"kind": "function"
		},
		{
			"trigger": "runkit_function_redefine()",
			"contents": "runkit_function_redefine(${1:funcname}, ${2:arglist}, ${3:code})",
			"kind": "function"
		},
		{
			"trigger": "runkit_function_remove()",
			"contents": "runkit_function_remove(${1:funcname})",
			"kind": "function"
		},
		{
			"trigger": "runkit_function_rename()",
			"contents": "runkit_function_rename(${1:funcname}, ${2:newname})",
			"kind": "function"
		},
		{
			"trigger": "runkit_import()",
			"contents": "runkit_import(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "runkit_lint()",
			"contents": "runkit_lint(${1:code})",
			"kind": "function"
		},
		{
			"trigger": "runkit_lint_file()",
			"contents": "runkit_lint_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "runkit_method_add()",
			"contents": "runkit_method_add(${1:classname}, ${2:methodname}, ${3:args}, ${4:code})",
			"kind": "function"
		},
		{
			"trigger": "runkit_method_copy()",
			"contents": "runkit_method_copy(${1:dClass}, ${2:dMethod}, ${3:sClass})",
			"kind": "function"
		},
		{
			"trigger": "runkit_method_redefine()",
			"contents": "runkit_method_redefine(${1:classname}, ${2:methodname}, ${3:args}, ${4:code})",
			"kind": "function"
		},
		{
			"trigger": "runkit_method_remove()",
			"contents": "runkit_method_remove(${1:classname}, ${2:methodname})",
			"kind": "function"
		},
		{
			"trigger": "runkit_method_rename()",
			"contents": "runkit_method_rename(${1:classname}, ${2:methodname}, ${3:newname})",
			"kind": "function"
		},
		{
			"trigger": "runkit_return_value_used()",
			"contents": "runkit_return_value_used()",
			"kind": "function"
		},
		{
			"trigger": "runkit_sandbox_output_handler()",
			"contents": "runkit_sandbox_output_handler(${1:sandbox})",
			"kind": "function"
		},
		{
			"trigger": "runkit_superglobals()",
			"contents": "runkit_superglobals()",
			"kind": "function"
		},
		{
			"trigger": "scandir()",
			"contents": "scandir(${1:directory})",
			"kind": "function"
		},
		{
			"trigger": "sem_acquire()",
			"contents": "sem_acquire(${1:sem_identifier})",
			"kind": "function"
		},
		{
			"trigger": "sem_get()",
			"contents": "sem_get(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "sem_release()",
			"contents": "sem_release(${1:sem_identifier})",
			"kind": "function"
		},
		{
			"trigger": "sem_remove()",
			"contents": "sem_remove(${1:sem_identifier})",
			"kind": "function"
		},
		{
			"trigger": "serialize()",
			"contents": "serialize(${1:value})",
			"kind": "function"
		},
		{
			"trigger": "session_cache_expire()",
			"contents": "session_cache_expire()",
			"kind": "function"
		},
		{
			"trigger": "session_cache_limiter()",
			"contents": "session_cache_limiter()",
			"kind": "function"
		},
		{
			"trigger": "session_commit()",
			"contents": "session_commit()",
			"kind": "function"
		},
		{
			"trigger": "session_decode()",
			"contents": "session_decode(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "session_destroy()",
			"contents": "session_destroy()",
			"kind": "function"
		},
		{
			"trigger": "session_encode()",
			"contents": "session_encode()",
			"kind": "function"
		},
		{
			"trigger": "session_get_cookie_params()",
			"contents": "session_get_cookie_params()",
			"kind": "function"
		},
		{
			"trigger": "session_id()",
			"contents": "session_id()",
			"kind": "function"
		},
		{
			"trigger": "session_is_registered()",
			"contents": "session_is_registered(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "session_module_name()",
			"contents": "session_module_name()",
			"kind": "function"
		},
		{
			"trigger": "session_name()",
			"contents": "session_name()",
			"kind": "function"
		},
		{
			"trigger": "session_pgsql_add_error()",
			"contents": "session_pgsql_add_error(${1:error_level})",
			"kind": "function"
		},
		{
			"trigger": "session_pgsql_get_error()",
			"contents": "session_pgsql_get_error()",
			"kind": "function"
		},
		{
			"trigger": "session_pgsql_get_field()",
			"contents": "session_pgsql_get_field()",
			"kind": "function"
		},
		{
			"trigger": "session_pgsql_reset()",
			"contents": "session_pgsql_reset()",
			"kind": "function"
		},
		{
			"trigger": "session_pgsql_set_field()",
			"contents": "session_pgsql_set_field(${1:value})",
			"kind": "function"
		},
		{
			"trigger": "session_pgsql_status()",
			"contents": "session_pgsql_status()",
			"kind": "function"
		},
		{
			"trigger": "session_regenerate_id()",
			"contents": "session_regenerate_id()",
			"kind": "function"
		},
		{
			"trigger": "session_register()",
			"contents": "session_register(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "session_save_path()",
			"contents": "session_save_path()",
			"kind": "function"
		},
		{
			"trigger": "session_set_cookie_params()",
			"contents": "session_set_cookie_params(${1:lifetime})",
			"kind": "function"
		},
		{
			"trigger": "session_set_save_handler()",
			"contents": "session_set_save_handler(${1:open}, ${2:close}, ${3:read}, ${4:write}, ${5:destroy}, ${6:gc})",
			"kind": "function"
		},
		{
			"trigger": "session_start()",
			"contents": "session_start()",
			"kind": "function"
		},
		{
			"trigger": "session_unregister()",
			"contents": "session_unregister(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "session_unset()",
			"contents": "session_unset()",
			"kind": "function"
		},
		{
			"trigger": "session_write_close()",
			"contents": "session_write_close()",
			"kind": "function"
		},
		{
			"trigger": "set_error_handler()",
			"contents": "set_error_handler(${1:error_handler})",
			"kind": "function"
		},
		{
			"trigger": "set_exception_handler()",
			"contents": "set_exception_handler(${1:exception_handler})",
			"kind": "function"
		},
		{
			"trigger": "set_file_buffer()",
			"contents": "set_file_buffer()",
			"kind": "function"
		},
		{
			"trigger": "set_include_path()",
			"contents": "set_include_path(${1:new_include_path})",
			"kind": "function"
		},
		{
			"trigger": "set_magic_quotes_runtime()",
			"contents": "set_magic_quotes_runtime(${1:new_setting})",
			"kind": "function"
		},
		{
			"trigger": "set_socket_blocking()",
			"contents": "set_socket_blocking()",
			"kind": "function"
		},
		{
			"trigger": "set_time_limit()",
			"contents": "set_time_limit(${1:seconds})",
			"kind": "function"
		},
		{
			"trigger": "setcookie()",
			"contents": "setcookie(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "setlocale()",
			"contents": "setlocale(${1:category}, ${2:locale})",
			"kind": "function"
		},
		{
			"trigger": "setrawcookie()",
			"contents": "setrawcookie(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "settype()",
			"contents": "settype(${1:var}, ${2:type})",
			"kind": "function"
		},
		{
			"trigger": "sha1()",
			"contents": "sha1(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "sha1_file()",
			"contents": "sha1_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "shell_exec()",
			"contents": "shell_exec(${1:cmd})",
			"kind": "function"
		},
		{
			"trigger": "shm_attach()",
			"contents": "shm_attach(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "shm_detach()",
			"contents": "shm_detach(${1:shm_identifier})",
			"kind": "function"
		},
		{
			"trigger": "shm_get_var()",
			"contents": "shm_get_var(${1:shm_identifier}, ${2:variable_key})",
			"kind": "function"
		},
		{
			"trigger": "shm_has_var()",
			"contents": "shm_has_var(${1:shm_identifier}, ${2:variable_key})",
			"kind": "function"
		},
		{
			"trigger": "shm_put_var()",
			"contents": "shm_put_var(${1:shm_identifier}, ${2:variable_key}, ${3:variable})",
			"kind": "function"
		},
		{
			"trigger": "shm_remove()",
			"contents": "shm_remove(${1:shm_identifier})",
			"kind": "function"
		},
		{
			"trigger": "shm_remove_var()",
			"contents": "shm_remove_var(${1:shm_identifier}, ${2:variable_key})",
			"kind": "function"
		},
		{
			"trigger": "shmop_close()",
			"contents": "shmop_close(${1:shmid})",
			"kind": "function"
		},
		{
			"trigger": "shmop_delete()",
			"contents": "shmop_delete(${1:shmid})",
			"kind": "function"
		},
		{
			"trigger": "shmop_open()",
			"contents": "shmop_open(${1:key}, ${2:flags}, ${3:mode}, ${4:size})",
			"kind": "function"
		},
		{
			"trigger": "shmop_read()",
			"contents": "shmop_read(${1:shmid}, ${2:start}, ${3:count})",
			"kind": "function"
		},
		{
			"trigger": "shmop_size()",
			"contents": "shmop_size(${1:shmid})",
			"kind": "function"
		},
		{
			"trigger": "shmop_write()",
			"contents": "shmop_write(${1:shmid}, ${2:data}, ${3:offset})",
			"kind": "function"
		},
		{
			"trigger": "show_source()",
			"contents": "show_source()",
			"kind": "function"
		},
		{
			"trigger": "shuffle()",
			"contents": "shuffle(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "signeurlpaiement()",
			"contents": "signeurlpaiement(${1:clent}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "similar_text()",
			"contents": "similar_text(${1:first}, ${2:second})",
			"kind": "function"
		},
		{
			"trigger": "simplexml_import_dom()",
			"contents": "simplexml_import_dom(${1:node})",
			"kind": "function"
		},
		{
			"trigger": "simplexml_load_file()",
			"contents": "simplexml_load_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "simplexml_load_string()",
			"contents": "simplexml_load_string(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "sin()",
			"contents": "sin(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "sinh()",
			"contents": "sinh(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "sizeof()",
			"contents": "sizeof()",
			"kind": "function"
		},
		{
			"trigger": "sleep()",
			"contents": "sleep(${1:seconds})",
			"kind": "function"
		},
		{
			"trigger": "snmp2_get()",
			"contents": "snmp2_get(${1:host}, ${2:community}, ${3:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmp2_getnext()",
			"contents": "snmp2_getnext(${1:host}, ${2:community}, ${3:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmp2_real_walk()",
			"contents": "snmp2_real_walk(${1:host}, ${2:community}, ${3:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmp2_set()",
			"contents": "snmp2_set(${1:host}, ${2:community}, ${3:object_id}, ${4:type}, ${5:value})",
			"kind": "function"
		},
		{
			"trigger": "snmp2_walk()",
			"contents": "snmp2_walk(${1:host}, ${2:community}, ${3:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmp3_get()",
			"contents": "snmp3_get(${1:host}, ${2:sec_name}, ${3:sec_level}, ${4:auth_protocol}, ${5:auth_passphrase}, ${6:priv_protocol}, ${7:priv_passphrase}, ${8:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmp3_getnext()",
			"contents": "snmp3_getnext(${1:host}, ${2:sec_name}, ${3:sec_level}, ${4:auth_protocol}, ${5:auth_passphrase}, ${6:priv_protocol}, ${7:priv_passphrase}, ${8:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmp3_real_walk()",
			"contents": "snmp3_real_walk(${1:host}, ${2:sec_name}, ${3:sec_level}, ${4:auth_protocol}, ${5:auth_passphrase}, ${6:priv_protocol}, ${7:priv_passphrase}, ${8:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmp3_set()",
			"contents": "snmp3_set(${1:host}, ${2:sec_name}, ${3:sec_level}, ${4:auth_protocol}, ${5:auth_passphrase}, ${6:priv_protocol}, ${7:priv_passphrase}, ${8:object_id}, ${9:type}, ${10:value})",
			"kind": "function"
		},
		{
			"trigger": "snmp3_walk()",
			"contents": "snmp3_walk(${1:host}, ${2:sec_name}, ${3:sec_level}, ${4:auth_protocol}, ${5:auth_passphrase}, ${6:priv_protocol}, ${7:priv_passphrase}, ${8:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmp_get_quick_print()",
			"contents": "snmp_get_quick_print()",
			"kind": "function"
		},
		{
			"trigger": "snmp_get_valueretrieval()",
			"contents": "snmp_get_valueretrieval()",
			"kind": "function"
		},
		{
			"trigger": "snmp_read_mib()",
			"contents": "snmp_read_mib(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "snmp_set_enum_print()",
			"contents": "snmp_set_enum_print(${1:enum_print})",
			"kind": "function"
		},
		{
			"trigger": "snmp_set_oid_numeric_print()",
			"contents": "snmp_set_oid_numeric_print(${1:oid_numeric_print})",
			"kind": "function"
		},
		{
			"trigger": "snmp_set_oid_output_format()",
			"contents": "snmp_set_oid_output_format(${1:oid_format = SNMP_OID_OUTPUT_MODULE})",
			"kind": "function"
		},
		{
			"trigger": "snmp_set_quick_print()",
			"contents": "snmp_set_quick_print(${1:quick_print})",
			"kind": "function"
		},
		{
			"trigger": "snmp_set_valueretrieval()",
			"contents": "snmp_set_valueretrieval(${1:method})",
			"kind": "function"
		},
		{
			"trigger": "snmpget()",
			"contents": "snmpget(${1:hostname}, ${2:community}, ${3:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmpgetnext()",
			"contents": "snmpgetnext(${1:host}, ${2:community}, ${3:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmprealwalk()",
			"contents": "snmprealwalk(${1:host}, ${2:community}, ${3:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmpset()",
			"contents": "snmpset(${1:host}, ${2:community}, ${3:object_id}, ${4:type}, ${5:value})",
			"kind": "function"
		},
		{
			"trigger": "snmpwalk()",
			"contents": "snmpwalk(${1:hostname}, ${2:community}, ${3:object_id})",
			"kind": "function"
		},
		{
			"trigger": "snmpwalkoid()",
			"contents": "snmpwalkoid(${1:hostname}, ${2:community}, ${3:object_id})",
			"kind": "function"
		},
		{
			"trigger": "socket_accept()",
			"contents": "socket_accept(${1:socket})",
			"kind": "function"
		},
		{
			"trigger": "socket_bind()",
			"contents": "socket_bind(${1:socket}, ${2:address})",
			"kind": "function"
		},
		{
			"trigger": "socket_clear_error()",
			"contents": "socket_clear_error()",
			"kind": "function"
		},
		{
			"trigger": "socket_close()",
			"contents": "socket_close(${1:socket})",
			"kind": "function"
		},
		{
			"trigger": "socket_connect()",
			"contents": "socket_connect(${1:socket}, ${2:address})",
			"kind": "function"
		},
		{
			"trigger": "socket_create()",
			"contents": "socket_create(${1:domain}, ${2:type}, ${3:protocol})",
			"kind": "function"
		},
		{
			"trigger": "socket_create_listen()",
			"contents": "socket_create_listen(${1:port})",
			"kind": "function"
		},
		{
			"trigger": "socket_create_pair()",
			"contents": "socket_create_pair(${1:domain}, ${2:type}, ${3:protocol}, ${4:fd})",
			"kind": "function"
		},
		{
			"trigger": "socket_get_option()",
			"contents": "socket_get_option(${1:socket}, ${2:level}, ${3:optname})",
			"kind": "function"
		},
		{
			"trigger": "socket_get_status()",
			"contents": "socket_get_status()",
			"kind": "function"
		},
		{
			"trigger": "socket_getpeername()",
			"contents": "socket_getpeername(${1:socket}, ${2:address})",
			"kind": "function"
		},
		{
			"trigger": "socket_getsockname()",
			"contents": "socket_getsockname(${1:socket}, ${2:addr})",
			"kind": "function"
		},
		{
			"trigger": "socket_last_error()",
			"contents": "socket_last_error()",
			"kind": "function"
		},
		{
			"trigger": "socket_listen()",
			"contents": "socket_listen(${1:socket})",
			"kind": "function"
		},
		{
			"trigger": "socket_read()",
			"contents": "socket_read(${1:socket}, ${2:length})",
			"kind": "function"
		},
		{
			"trigger": "socket_recv()",
			"contents": "socket_recv(${1:socket}, ${2:buf}, ${3:len}, ${4:flags})",
			"kind": "function"
		},
		{
			"trigger": "socket_recvfrom()",
			"contents": "socket_recvfrom(${1:socket}, ${2:buf}, ${3:len}, ${4:flags}, ${5:name})",
			"kind": "function"
		},
		{
			"trigger": "socket_select()",
			"contents": "socket_select(${1:read}, ${2:write}, ${3:except}, ${4:tv_sec})",
			"kind": "function"
		},
		{
			"trigger": "socket_send()",
			"contents": "socket_send(${1:socket}, ${2:buf}, ${3:len}, ${4:flags})",
			"kind": "function"
		},
		{
			"trigger": "socket_sendto()",
			"contents": "socket_sendto(${1:socket}, ${2:buf}, ${3:len}, ${4:flags}, ${5:addr})",
			"kind": "function"
		},
		{
			"trigger": "socket_set_block()",
			"contents": "socket_set_block(${1:socket})",
			"kind": "function"
		},
		{
			"trigger": "socket_set_blocking()",
			"contents": "socket_set_blocking()",
			"kind": "function"
		},
		{
			"trigger": "socket_set_nonblock()",
			"contents": "socket_set_nonblock(${1:socket})",
			"kind": "function"
		},
		{
			"trigger": "socket_set_option()",
			"contents": "socket_set_option(${1:socket}, ${2:level}, ${3:optname}, ${4:optval})",
			"kind": "function"
		},
		{
			"trigger": "socket_set_timeout()",
			"contents": "socket_set_timeout()",
			"kind": "function"
		},
		{
			"trigger": "socket_shutdown()",
			"contents": "socket_shutdown(${1:socket})",
			"kind": "function"
		},
		{
			"trigger": "socket_strerror()",
			"contents": "socket_strerror(${1:errno})",
			"kind": "function"
		},
		{
			"trigger": "socket_write()",
			"contents": "socket_write(${1:socket}, ${2:buffer})",
			"kind": "function"
		},
		{
			"trigger": "solr_get_version()",
			"contents": "solr_get_version()",
			"kind": "function"
		},
		{
			"trigger": "sort()",
			"contents": "sort(${1:array})",
			"kind": "function"
		},
		{
			"trigger": "soundex()",
			"contents": "soundex(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "spl_autoload()",
			"contents": "spl_autoload(${1:class_name})",
			"kind": "function"
		},
		{
			"trigger": "spl_autoload_call()",
			"contents": "spl_autoload_call(${1:class_name})",
			"kind": "function"
		},
		{
			"trigger": "spl_autoload_extensions()",
			"contents": "spl_autoload_extensions()",
			"kind": "function"
		},
		{
			"trigger": "spl_autoload_functions()",
			"contents": "spl_autoload_functions()",
			"kind": "function"
		},
		{
			"trigger": "spl_autoload_register()",
			"contents": "spl_autoload_register()",
			"kind": "function"
		},
		{
			"trigger": "spl_autoload_unregister()",
			"contents": "spl_autoload_unregister(${1:autoload_function})",
			"kind": "function"
		},
		{
			"trigger": "spl_classes()",
			"contents": "spl_classes()",
			"kind": "function"
		},
		{
			"trigger": "spl_object_hash()",
			"contents": "spl_object_hash(${1:obj})",
			"kind": "function"
		},
		{
			"trigger": "split()",
			"contents": "split(${1:pattern}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "spliti()",
			"contents": "spliti(${1:pattern}, ${2:string})",
			"kind": "function"
		},
		{
			"trigger": "sprintf()",
			"contents": "sprintf(${1:format})",
			"kind": "function"
		},
		{
			"trigger": "sql_regcase()",
			"contents": "sql_regcase(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "sqlite_close()",
			"contents": "sqlite_close(${1:dbhandle})",
			"kind": "function"
		},
		{
			"trigger": "sqlite_error_string()",
			"contents": "sqlite_error_string(${1:error_code})",
			"kind": "function"
		},
		{
			"trigger": "sqlite_escape_string()",
			"contents": "sqlite_escape_string(${1:item})",
			"kind": "function"
		},
		{
			"trigger": "sqlite_factory()",
			"contents": "sqlite_factory(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "sqlite_fetch_string()",
			"contents": "sqlite_fetch_string()",
			"kind": "function"
		},
		{
			"trigger": "sqlite_has_more()",
			"contents": "sqlite_has_more(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "sqlite_libencoding()",
			"contents": "sqlite_libencoding()",
			"kind": "function"
		},
		{
			"trigger": "sqlite_libversion()",
			"contents": "sqlite_libversion()",
			"kind": "function"
		},
		{
			"trigger": "sqlite_open()",
			"contents": "sqlite_open(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "sqlite_popen()",
			"contents": "sqlite_popen(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "sqlite_udf_decode_binary()",
			"contents": "sqlite_udf_decode_binary(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "sqlite_udf_encode_binary()",
			"contents": "sqlite_udf_encode_binary(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "sqrt()",
			"contents": "sqrt(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "srand()",
			"contents": "srand()",
			"kind": "function"
		},
		{
			"trigger": "sscanf()",
			"contents": "sscanf(${1:str}, ${2:format})",
			"kind": "function"
		},
		{
			"trigger": "ssdeep_fuzzy_compare()",
			"contents": "ssdeep_fuzzy_compare(${1:signature1}, ${2:signature2})",
			"kind": "function"
		},
		{
			"trigger": "ssdeep_fuzzy_hash()",
			"contents": "ssdeep_fuzzy_hash(${1:to_hash})",
			"kind": "function"
		},
		{
			"trigger": "ssdeep_fuzzy_hash_filename()",
			"contents": "ssdeep_fuzzy_hash_filename(${1:file_name})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_auth_hostbased_file()",
			"contents": "ssh2_auth_hostbased_file(${1:session}, ${2:username}, ${3:hostname}, ${4:pubkeyfile}, ${5:privkeyfile})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_auth_none()",
			"contents": "ssh2_auth_none(${1:session}, ${2:username})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_auth_password()",
			"contents": "ssh2_auth_password(${1:session}, ${2:username}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_auth_pubkey_file()",
			"contents": "ssh2_auth_pubkey_file(${1:session}, ${2:username}, ${3:pubkeyfile}, ${4:privkeyfile})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_connect()",
			"contents": "ssh2_connect(${1:host})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_exec()",
			"contents": "ssh2_exec(${1:session}, ${2:command})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_fetch_stream()",
			"contents": "ssh2_fetch_stream(${1:channel}, ${2:streamid})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_fingerprint()",
			"contents": "ssh2_fingerprint(${1:session})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_methods_negotiated()",
			"contents": "ssh2_methods_negotiated(${1:session})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_publickey_add()",
			"contents": "ssh2_publickey_add(${1:pkey}, ${2:algoname}, ${3:blob})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_publickey_init()",
			"contents": "ssh2_publickey_init(${1:session})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_publickey_list()",
			"contents": "ssh2_publickey_list(${1:pkey})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_publickey_remove()",
			"contents": "ssh2_publickey_remove(${1:pkey}, ${2:algoname}, ${3:blob})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_scp_recv()",
			"contents": "ssh2_scp_recv(${1:session}, ${2:remote_file}, ${3:local_file})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_scp_send()",
			"contents": "ssh2_scp_send(${1:session}, ${2:local_file}, ${3:remote_file})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_sftp()",
			"contents": "ssh2_sftp(${1:session})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_sftp_lstat()",
			"contents": "ssh2_sftp_lstat(${1:sftp}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_sftp_mkdir()",
			"contents": "ssh2_sftp_mkdir(${1:sftp}, ${2:dirname})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_sftp_readlink()",
			"contents": "ssh2_sftp_readlink(${1:sftp}, ${2:link})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_sftp_realpath()",
			"contents": "ssh2_sftp_realpath(${1:sftp}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_sftp_rename()",
			"contents": "ssh2_sftp_rename(${1:sftp}, ${2:from}, ${3:to})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_sftp_rmdir()",
			"contents": "ssh2_sftp_rmdir(${1:sftp}, ${2:dirname})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_sftp_stat()",
			"contents": "ssh2_sftp_stat(${1:sftp}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_sftp_symlink()",
			"contents": "ssh2_sftp_symlink(${1:sftp}, ${2:target}, ${3:link})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_sftp_unlink()",
			"contents": "ssh2_sftp_unlink(${1:sftp}, ${2:filename})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_shell()",
			"contents": "ssh2_shell(${1:session})",
			"kind": "function"
		},
		{
			"trigger": "ssh2_tunnel()",
			"contents": "ssh2_tunnel(${1:session}, ${2:host}, ${3:port})",
			"kind": "function"
		},
		{
			"trigger": "stat()",
			"contents": "stat(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "stats_absolute_deviation()",
			"contents": "stats_absolute_deviation(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_beta()",
			"contents": "stats_cdf_beta(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_binomial()",
			"contents": "stats_cdf_binomial(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_cauchy()",
			"contents": "stats_cdf_cauchy(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_chisquare()",
			"contents": "stats_cdf_chisquare(${1:par1}, ${2:par2}, ${3:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_exponential()",
			"contents": "stats_cdf_exponential(${1:par1}, ${2:par2}, ${3:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_f()",
			"contents": "stats_cdf_f(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_gamma()",
			"contents": "stats_cdf_gamma(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_laplace()",
			"contents": "stats_cdf_laplace(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_logistic()",
			"contents": "stats_cdf_logistic(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_negative_binomial()",
			"contents": "stats_cdf_negative_binomial(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_noncentral_chisquare()",
			"contents": "stats_cdf_noncentral_chisquare(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_noncentral_f()",
			"contents": "stats_cdf_noncentral_f(${1:par1}, ${2:par2}, ${3:par3}, ${4:par4}, ${5:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_poisson()",
			"contents": "stats_cdf_poisson(${1:par1}, ${2:par2}, ${3:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_t()",
			"contents": "stats_cdf_t(${1:par1}, ${2:par2}, ${3:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_uniform()",
			"contents": "stats_cdf_uniform(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_cdf_weibull()",
			"contents": "stats_cdf_weibull(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_covariance()",
			"contents": "stats_covariance(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "stats_den_uniform()",
			"contents": "stats_den_uniform(${1:x}, ${2:a}, ${3:b})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_beta()",
			"contents": "stats_dens_beta(${1:x}, ${2:a}, ${3:b})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_cauchy()",
			"contents": "stats_dens_cauchy(${1:x}, ${2:ave}, ${3:stdev})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_chisquare()",
			"contents": "stats_dens_chisquare(${1:x}, ${2:dfr})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_exponential()",
			"contents": "stats_dens_exponential(${1:x}, ${2:scale})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_f()",
			"contents": "stats_dens_f(${1:x}, ${2:dfr1}, ${3:dfr2})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_gamma()",
			"contents": "stats_dens_gamma(${1:x}, ${2:shape}, ${3:scale})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_laplace()",
			"contents": "stats_dens_laplace(${1:x}, ${2:ave}, ${3:stdev})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_logistic()",
			"contents": "stats_dens_logistic(${1:x}, ${2:ave}, ${3:stdev})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_negative_binomial()",
			"contents": "stats_dens_negative_binomial(${1:x}, ${2:n}, ${3:pi})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_normal()",
			"contents": "stats_dens_normal(${1:x}, ${2:ave}, ${3:stdev})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_pmf_binomial()",
			"contents": "stats_dens_pmf_binomial(${1:x}, ${2:n}, ${3:pi})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_pmf_hypergeometric()",
			"contents": "stats_dens_pmf_hypergeometric(${1:n1}, ${2:n2}, ${3:N1}, ${4:N2})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_pmf_poisson()",
			"contents": "stats_dens_pmf_poisson(${1:x}, ${2:lb})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_t()",
			"contents": "stats_dens_t(${1:x}, ${2:dfr})",
			"kind": "function"
		},
		{
			"trigger": "stats_dens_weibull()",
			"contents": "stats_dens_weibull(${1:x}, ${2:a}, ${3:b})",
			"kind": "function"
		},
		{
			"trigger": "stats_harmonic_mean()",
			"contents": "stats_harmonic_mean(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "stats_kurtosis()",
			"contents": "stats_kurtosis(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_beta()",
			"contents": "stats_rand_gen_beta(${1:a}, ${2:b})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_chisquare()",
			"contents": "stats_rand_gen_chisquare(${1:df})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_exponential()",
			"contents": "stats_rand_gen_exponential(${1:av})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_f()",
			"contents": "stats_rand_gen_f(${1:dfn}, ${2:dfd})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_funiform()",
			"contents": "stats_rand_gen_funiform(${1:low}, ${2:high})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_gamma()",
			"contents": "stats_rand_gen_gamma(${1:a}, ${2:r})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_ibinomial()",
			"contents": "stats_rand_gen_ibinomial(${1:n}, ${2:pp})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_ibinomial_negative()",
			"contents": "stats_rand_gen_ibinomial_negative(${1:n}, ${2:p})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_int()",
			"contents": "stats_rand_gen_int()",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_ipoisson()",
			"contents": "stats_rand_gen_ipoisson(${1:mu})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_iuniform()",
			"contents": "stats_rand_gen_iuniform(${1:low}, ${2:high})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_noncenral_chisquare()",
			"contents": "stats_rand_gen_noncenral_chisquare(${1:df}, ${2:xnonc})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_noncentral_f()",
			"contents": "stats_rand_gen_noncentral_f(${1:dfn}, ${2:dfd}, ${3:xnonc})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_noncentral_t()",
			"contents": "stats_rand_gen_noncentral_t(${1:df}, ${2:xnonc})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_normal()",
			"contents": "stats_rand_gen_normal(${1:av}, ${2:sd})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_gen_t()",
			"contents": "stats_rand_gen_t(${1:df})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_get_seeds()",
			"contents": "stats_rand_get_seeds()",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_phrase_to_seeds()",
			"contents": "stats_rand_phrase_to_seeds(${1:phrase})",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_ranf()",
			"contents": "stats_rand_ranf()",
			"kind": "function"
		},
		{
			"trigger": "stats_rand_setall()",
			"contents": "stats_rand_setall(${1:iseed1}, ${2:iseed2})",
			"kind": "function"
		},
		{
			"trigger": "stats_skew()",
			"contents": "stats_skew(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "stats_standard_deviation()",
			"contents": "stats_standard_deviation(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "stats_stat_binomial_coef()",
			"contents": "stats_stat_binomial_coef(${1:x}, ${2:n})",
			"kind": "function"
		},
		{
			"trigger": "stats_stat_correlation()",
			"contents": "stats_stat_correlation(${1:arr1}, ${2:arr2})",
			"kind": "function"
		},
		{
			"trigger": "stats_stat_gennch()",
			"contents": "stats_stat_gennch(${1:n})",
			"kind": "function"
		},
		{
			"trigger": "stats_stat_independent_t()",
			"contents": "stats_stat_independent_t(${1:arr1}, ${2:arr2})",
			"kind": "function"
		},
		{
			"trigger": "stats_stat_innerproduct()",
			"contents": "stats_stat_innerproduct(${1:arr1}, ${2:arr2})",
			"kind": "function"
		},
		{
			"trigger": "stats_stat_noncentral_t()",
			"contents": "stats_stat_noncentral_t(${1:par1}, ${2:par2}, ${3:par3}, ${4:which})",
			"kind": "function"
		},
		{
			"trigger": "stats_stat_paired_t()",
			"contents": "stats_stat_paired_t(${1:arr1}, ${2:arr2})",
			"kind": "function"
		},
		{
			"trigger": "stats_stat_percentile()",
			"contents": "stats_stat_percentile(${1:df}, ${2:xnonc})",
			"kind": "function"
		},
		{
			"trigger": "stats_stat_powersum()",
			"contents": "stats_stat_powersum(${1:arr}, ${2:power})",
			"kind": "function"
		},
		{
			"trigger": "stats_variance()",
			"contents": "stats_variance(${1:a})",
			"kind": "function"
		},
		{
			"trigger": "stomp_connect_error()",
			"contents": "stomp_connect_error()",
			"kind": "function"
		},
		{
			"trigger": "stomp_version()",
			"contents": "stomp_version()",
			"kind": "function"
		},
		{
			"trigger": "str_getcsv()",
			"contents": "str_getcsv(${1:input})",
			"kind": "function"
		},
		{
			"trigger": "str_ireplace()",
			"contents": "str_ireplace(${1:search}, ${2:replace}, ${3:subject})",
			"kind": "function"
		},
		{
			"trigger": "str_pad()",
			"contents": "str_pad(${1:input}, ${2:pad_length})",
			"kind": "function"
		},
		{
			"trigger": "str_repeat()",
			"contents": "str_repeat(${1:input}, ${2:multiplier})",
			"kind": "function"
		},
		{
			"trigger": "str_replace()",
			"contents": "str_replace(${1:search}, ${2:replace}, ${3:subject})",
			"kind": "function"
		},
		{
			"trigger": "str_rot13()",
			"contents": "str_rot13(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "str_shuffle()",
			"contents": "str_shuffle(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "str_split()",
			"contents": "str_split(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "str_word_count()",
			"contents": "str_word_count(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "strcasecmp()",
			"contents": "strcasecmp(${1:str1}, ${2:str2})",
			"kind": "function"
		},
		{
			"trigger": "strchr()",
			"contents": "strchr()",
			"kind": "function"
		},
		{
			"trigger": "strcmp()",
			"contents": "strcmp(${1:str1}, ${2:str2})",
			"kind": "function"
		},
		{
			"trigger": "strcoll()",
			"contents": "strcoll(${1:str1}, ${2:str2})",
			"kind": "function"
		},
		{
			"trigger": "strcspn()",
			"contents": "strcspn(${1:str1}, ${2:str2})",
			"kind": "function"
		},
		{
			"trigger": "stream_bucket_append()",
			"contents": "stream_bucket_append(${1:brigade}, ${2:bucket})",
			"kind": "function"
		},
		{
			"trigger": "stream_bucket_make_writeable()",
			"contents": "stream_bucket_make_writeable(${1:brigade})",
			"kind": "function"
		},
		{
			"trigger": "stream_bucket_new()",
			"contents": "stream_bucket_new(${1:stream}, ${2:buffer})",
			"kind": "function"
		},
		{
			"trigger": "stream_bucket_prepend()",
			"contents": "stream_bucket_prepend(${1:brigade}, ${2:bucket})",
			"kind": "function"
		},
		{
			"trigger": "stream_context_create()",
			"contents": "stream_context_create()",
			"kind": "function"
		},
		{
			"trigger": "stream_context_get_default()",
			"contents": "stream_context_get_default()",
			"kind": "function"
		},
		{
			"trigger": "stream_context_get_options()",
			"contents": "stream_context_get_options(${1:stream_or_context})",
			"kind": "function"
		},
		{
			"trigger": "stream_context_get_params()",
			"contents": "stream_context_get_params(${1:stream_or_context})",
			"kind": "function"
		},
		{
			"trigger": "stream_context_set_default()",
			"contents": "stream_context_set_default(${1:options})",
			"kind": "function"
		},
		{
			"trigger": "stream_context_set_option()",
			"contents": "stream_context_set_option(${1:stream_or_context}, ${2:wrapper}, ${3:option}, ${4:value})",
			"kind": "function"
		},
		{
			"trigger": "stream_context_set_params()",
			"contents": "stream_context_set_params(${1:stream_or_context}, ${2:params})",
			"kind": "function"
		},
		{
			"trigger": "stream_copy_to_stream()",
			"contents": "stream_copy_to_stream(${1:source}, ${2:dest})",
			"kind": "function"
		},
		{
			"trigger": "stream_encoding()",
			"contents": "stream_encoding(${1:stream})",
			"kind": "function"
		},
		{
			"trigger": "stream_filter_append()",
			"contents": "stream_filter_append(${1:stream}, ${2:filtername})",
			"kind": "function"
		},
		{
			"trigger": "stream_filter_prepend()",
			"contents": "stream_filter_prepend(${1:stream}, ${2:filtername})",
			"kind": "function"
		},
		{
			"trigger": "stream_filter_register()",
			"contents": "stream_filter_register(${1:filtername}, ${2:classname})",
			"kind": "function"
		},
		{
			"trigger": "stream_filter_remove()",
			"contents": "stream_filter_remove(${1:stream_filter})",
			"kind": "function"
		},
		{
			"trigger": "stream_get_contents()",
			"contents": "stream_get_contents(${1:handle})",
			"kind": "function"
		},
		{
			"trigger": "stream_get_filters()",
			"contents": "stream_get_filters()",
			"kind": "function"
		},
		{
			"trigger": "stream_get_line()",
			"contents": "stream_get_line(${1:handle}, ${2:length})",
			"kind": "function"
		},
		{
			"trigger": "stream_get_meta_data()",
			"contents": "stream_get_meta_data(${1:stream})",
			"kind": "function"
		},
		{
			"trigger": "stream_get_transports()",
			"contents": "stream_get_transports()",
			"kind": "function"
		},
		{
			"trigger": "stream_get_wrappers()",
			"contents": "stream_get_wrappers()",
			"kind": "function"
		},
		{
			"trigger": "stream_is_local()",
			"contents": "stream_is_local(${1:stream_or_url})",
			"kind": "function"
		},
		{
			"trigger": "stream_notification_callback()",
			"contents": "stream_notification_callback(${1:notification_code}, ${2:severity}, ${3:message}, ${4:message_code}, ${5:bytes_transferred}, ${6:bytes_max})",
			"kind": "function"
		},
		{
			"trigger": "stream_register_wrapper()",
			"contents": "stream_register_wrapper()",
			"kind": "function"
		},
		{
			"trigger": "stream_resolve_include_path()",
			"contents": "stream_resolve_include_path(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "stream_select()",
			"contents": "stream_select(${1:read}, ${2:write}, ${3:except}, ${4:tv_sec})",
			"kind": "function"
		},
		{
			"trigger": "stream_set_blocking()",
			"contents": "stream_set_blocking(${1:stream}, ${2:mode})",
			"kind": "function"
		},
		{
			"trigger": "stream_set_read_buffer()",
			"contents": "stream_set_read_buffer(${1:stream}, ${2:buffer})",
			"kind": "function"
		},
		{
			"trigger": "stream_set_timeout()",
			"contents": "stream_set_timeout(${1:stream}, ${2:seconds})",
			"kind": "function"
		},
		{
			"trigger": "stream_set_write_buffer()",
			"contents": "stream_set_write_buffer(${1:stream}, ${2:buffer})",
			"kind": "function"
		},
		{
			"trigger": "stream_socket_accept()",
			"contents": "stream_socket_accept(${1:server_socket})",
			"kind": "function"
		},
		{
			"trigger": "stream_socket_client()",
			"contents": "stream_socket_client(${1:remote_socket})",
			"kind": "function"
		},
		{
			"trigger": "stream_socket_enable_crypto()",
			"contents": "stream_socket_enable_crypto(${1:stream}, ${2:enable})",
			"kind": "function"
		},
		{
			"trigger": "stream_socket_get_name()",
			"contents": "stream_socket_get_name(${1:handle}, ${2:want_peer})",
			"kind": "function"
		},
		{
			"trigger": "stream_socket_pair()",
			"contents": "stream_socket_pair(${1:domain}, ${2:type}, ${3:protocol})",
			"kind": "function"
		},
		{
			"trigger": "stream_socket_recvfrom()",
			"contents": "stream_socket_recvfrom(${1:socket}, ${2:length})",
			"kind": "function"
		},
		{
			"trigger": "stream_socket_sendto()",
			"contents": "stream_socket_sendto(${1:socket}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "stream_socket_server()",
			"contents": "stream_socket_server(${1:local_socket})",
			"kind": "function"
		},
		{
			"trigger": "stream_socket_shutdown()",
			"contents": "stream_socket_shutdown(${1:stream}, ${2:how})",
			"kind": "function"
		},
		{
			"trigger": "stream_supports_lock()",
			"contents": "stream_supports_lock(${1:stream})",
			"kind": "function"
		},
		{
			"trigger": "stream_wrapper_register()",
			"contents": "stream_wrapper_register(${1:protocol}, ${2:classname})",
			"kind": "function"
		},
		{
			"trigger": "stream_wrapper_restore()",
			"contents": "stream_wrapper_restore(${1:protocol})",
			"kind": "function"
		},
		{
			"trigger": "stream_wrapper_unregister()",
			"contents": "stream_wrapper_unregister(${1:protocol})",
			"kind": "function"
		},
		{
			"trigger": "strftime()",
			"contents": "strftime(${1:format})",
			"kind": "function"
		},
		{
			"trigger": "strip_tags()",
			"contents": "strip_tags(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "stripcslashes()",
			"contents": "stripcslashes(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "stripos()",
			"contents": "stripos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "stripslashes()",
			"contents": "stripslashes(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "stristr()",
			"contents": "stristr(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "strlen()",
			"contents": "strlen(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "strnatcasecmp()",
			"contents": "strnatcasecmp(${1:str1}, ${2:str2})",
			"kind": "function"
		},
		{
			"trigger": "strnatcmp()",
			"contents": "strnatcmp(${1:str1}, ${2:str2})",
			"kind": "function"
		},
		{
			"trigger": "strncasecmp()",
			"contents": "strncasecmp(${1:str1}, ${2:str2}, ${3:len})",
			"kind": "function"
		},
		{
			"trigger": "strncmp()",
			"contents": "strncmp(${1:str1}, ${2:str2}, ${3:len})",
			"kind": "function"
		},
		{
			"trigger": "strpbrk()",
			"contents": "strpbrk(${1:haystack}, ${2:char_list})",
			"kind": "function"
		},
		{
			"trigger": "strpos()",
			"contents": "strpos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "strptime()",
			"contents": "strptime(${1:date}, ${2:format})",
			"kind": "function"
		},
		{
			"trigger": "strrchr()",
			"contents": "strrchr(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "strrev()",
			"contents": "strrev(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "strripos()",
			"contents": "strripos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "strrpos()",
			"contents": "strrpos(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "strspn()",
			"contents": "strspn(${1:subject}, ${2:mask})",
			"kind": "function"
		},
		{
			"trigger": "strstr()",
			"contents": "strstr(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "strtok()",
			"contents": "strtok(${1:str}, ${2:token})",
			"kind": "function"
		},
		{
			"trigger": "strtolower()",
			"contents": "strtolower(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "strtotime()",
			"contents": "strtotime(${1:time})",
			"kind": "function"
		},
		{
			"trigger": "strtoupper()",
			"contents": "strtoupper(${1:string})",
			"kind": "function"
		},
		{
			"trigger": "strtr()",
			"contents": "strtr(${1:str}, ${2:from}, ${3:to})",
			"kind": "function"
		},
		{
			"trigger": "strval()",
			"contents": "strval(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "substr()",
			"contents": "substr(${1:string}, ${2:start})",
			"kind": "function"
		},
		{
			"trigger": "substr_compare()",
			"contents": "substr_compare(${1:main_str}, ${2:str}, ${3:offset})",
			"kind": "function"
		},
		{
			"trigger": "substr_count()",
			"contents": "substr_count(${1:haystack}, ${2:needle})",
			"kind": "function"
		},
		{
			"trigger": "substr_replace()",
			"contents": "substr_replace(${1:string}, ${2:replacement}, ${3:start})",
			"kind": "function"
		},
		{
			"trigger": "svn_add()",
			"contents": "svn_add(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_auth_get_parameter()",
			"contents": "svn_auth_get_parameter(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "svn_auth_set_parameter()",
			"contents": "svn_auth_set_parameter(${1:key}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "svn_blame()",
			"contents": "svn_blame(${1:repository_url})",
			"kind": "function"
		},
		{
			"trigger": "svn_cat()",
			"contents": "svn_cat(${1:repos_url})",
			"kind": "function"
		},
		{
			"trigger": "svn_checkout()",
			"contents": "svn_checkout(${1:repos}, ${2:targetpath})",
			"kind": "function"
		},
		{
			"trigger": "svn_cleanup()",
			"contents": "svn_cleanup(${1:workingdir})",
			"kind": "function"
		},
		{
			"trigger": "svn_client_version()",
			"contents": "svn_client_version()",
			"kind": "function"
		},
		{
			"trigger": "svn_commit()",
			"contents": "svn_commit(${1:log}, ${2:targets})",
			"kind": "function"
		},
		{
			"trigger": "svn_delete()",
			"contents": "svn_delete(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_diff()",
			"contents": "svn_diff(${1:path1}, ${2:rev1}, ${3:path2}, ${4:rev2})",
			"kind": "function"
		},
		{
			"trigger": "svn_export()",
			"contents": "svn_export(${1:frompath}, ${2:topath})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_abort_txn()",
			"contents": "svn_fs_abort_txn(${1:txn})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_apply_text()",
			"contents": "svn_fs_apply_text(${1:root}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_begin_txn2()",
			"contents": "svn_fs_begin_txn2(${1:repos}, ${2:rev})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_change_node_prop()",
			"contents": "svn_fs_change_node_prop(${1:root}, ${2:path}, ${3:name}, ${4:value})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_check_path()",
			"contents": "svn_fs_check_path(${1:fsroot}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_contents_changed()",
			"contents": "svn_fs_contents_changed(${1:root1}, ${2:path1}, ${3:root2}, ${4:path2})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_copy()",
			"contents": "svn_fs_copy(${1:from_root}, ${2:from_path}, ${3:to_root}, ${4:to_path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_delete()",
			"contents": "svn_fs_delete(${1:root}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_dir_entries()",
			"contents": "svn_fs_dir_entries(${1:fsroot}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_file_contents()",
			"contents": "svn_fs_file_contents(${1:fsroot}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_file_length()",
			"contents": "svn_fs_file_length(${1:fsroot}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_is_dir()",
			"contents": "svn_fs_is_dir(${1:root}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_is_file()",
			"contents": "svn_fs_is_file(${1:root}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_make_dir()",
			"contents": "svn_fs_make_dir(${1:root}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_make_file()",
			"contents": "svn_fs_make_file(${1:root}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_node_created_rev()",
			"contents": "svn_fs_node_created_rev(${1:fsroot}, ${2:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_node_prop()",
			"contents": "svn_fs_node_prop(${1:fsroot}, ${2:path}, ${3:propname})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_props_changed()",
			"contents": "svn_fs_props_changed(${1:root1}, ${2:path1}, ${3:root2}, ${4:path2})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_revision_prop()",
			"contents": "svn_fs_revision_prop(${1:fs}, ${2:revnum}, ${3:propname})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_revision_root()",
			"contents": "svn_fs_revision_root(${1:fs}, ${2:revnum})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_txn_root()",
			"contents": "svn_fs_txn_root(${1:txn})",
			"kind": "function"
		},
		{
			"trigger": "svn_fs_youngest_rev()",
			"contents": "svn_fs_youngest_rev(${1:fs})",
			"kind": "function"
		},
		{
			"trigger": "svn_import()",
			"contents": "svn_import(${1:path}, ${2:url}, ${3:nonrecursive})",
			"kind": "function"
		},
		{
			"trigger": "svn_log()",
			"contents": "svn_log(${1:repos_url})",
			"kind": "function"
		},
		{
			"trigger": "svn_ls()",
			"contents": "svn_ls(${1:repos_url})",
			"kind": "function"
		},
		{
			"trigger": "svn_mkdir()",
			"contents": "svn_mkdir(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_repos_create()",
			"contents": "svn_repos_create(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_repos_fs()",
			"contents": "svn_repos_fs(${1:repos})",
			"kind": "function"
		},
		{
			"trigger": "svn_repos_fs_begin_txn_for_commit()",
			"contents": "svn_repos_fs_begin_txn_for_commit(${1:repos}, ${2:rev}, ${3:author}, ${4:log_msg})",
			"kind": "function"
		},
		{
			"trigger": "svn_repos_fs_commit_txn()",
			"contents": "svn_repos_fs_commit_txn(${1:txn})",
			"kind": "function"
		},
		{
			"trigger": "svn_repos_hotcopy()",
			"contents": "svn_repos_hotcopy(${1:repospath}, ${2:destpath}, ${3:cleanlogs})",
			"kind": "function"
		},
		{
			"trigger": "svn_repos_open()",
			"contents": "svn_repos_open(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_repos_recover()",
			"contents": "svn_repos_recover(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_revert()",
			"contents": "svn_revert(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_status()",
			"contents": "svn_status(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "svn_update()",
			"contents": "svn_update(${1:path})",
			"kind": "function"
		},
		{
			"trigger": "swf_actiongeturl()",
			"contents": "swf_actiongeturl(${1:url}, ${2:target})",
			"kind": "function"
		},
		{
			"trigger": "swf_actiongotoframe()",
			"contents": "swf_actiongotoframe(${1:framenumber})",
			"kind": "function"
		},
		{
			"trigger": "swf_actiongotolabel()",
			"contents": "swf_actiongotolabel(${1:label})",
			"kind": "function"
		},
		{
			"trigger": "swf_actionnextframe()",
			"contents": "swf_actionnextframe()",
			"kind": "function"
		},
		{
			"trigger": "swf_actionplay()",
			"contents": "swf_actionplay()",
			"kind": "function"
		},
		{
			"trigger": "swf_actionprevframe()",
			"contents": "swf_actionprevframe()",
			"kind": "function"
		},
		{
			"trigger": "swf_actionsettarget()",
			"contents": "swf_actionsettarget(${1:target})",
			"kind": "function"
		},
		{
			"trigger": "swf_actionstop()",
			"contents": "swf_actionstop()",
			"kind": "function"
		},
		{
			"trigger": "swf_actiontogglequality()",
			"contents": "swf_actiontogglequality()",
			"kind": "function"
		},
		{
			"trigger": "swf_actionwaitforframe()",
			"contents": "swf_actionwaitforframe(${1:framenumber}, ${2:skipcount})",
			"kind": "function"
		},
		{
			"trigger": "swf_addbuttonrecord()",
			"contents": "swf_addbuttonrecord(${1:states}, ${2:shapeid}, ${3:depth})",
			"kind": "function"
		},
		{
			"trigger": "swf_addcolor()",
			"contents": "swf_addcolor(${1:r}, ${2:g}, ${3:b}, ${4:a})",
			"kind": "function"
		},
		{
			"trigger": "swf_closefile()",
			"contents": "swf_closefile()",
			"kind": "function"
		},
		{
			"trigger": "swf_definebitmap()",
			"contents": "swf_definebitmap(${1:objid}, ${2:image_name})",
			"kind": "function"
		},
		{
			"trigger": "swf_definefont()",
			"contents": "swf_definefont(${1:fontid}, ${2:fontname})",
			"kind": "function"
		},
		{
			"trigger": "swf_defineline()",
			"contents": "swf_defineline(${1:objid}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:width})",
			"kind": "function"
		},
		{
			"trigger": "swf_definepoly()",
			"contents": "swf_definepoly(${1:objid}, ${2:coords}, ${3:npoints}, ${4:width})",
			"kind": "function"
		},
		{
			"trigger": "swf_definerect()",
			"contents": "swf_definerect(${1:objid}, ${2:x1}, ${3:y1}, ${4:x2}, ${5:y2}, ${6:width})",
			"kind": "function"
		},
		{
			"trigger": "swf_definetext()",
			"contents": "swf_definetext(${1:objid}, ${2:str}, ${3:docenter})",
			"kind": "function"
		},
		{
			"trigger": "swf_endbutton()",
			"contents": "swf_endbutton()",
			"kind": "function"
		},
		{
			"trigger": "swf_enddoaction()",
			"contents": "swf_enddoaction()",
			"kind": "function"
		},
		{
			"trigger": "swf_endshape()",
			"contents": "swf_endshape()",
			"kind": "function"
		},
		{
			"trigger": "swf_endsymbol()",
			"contents": "swf_endsymbol()",
			"kind": "function"
		},
		{
			"trigger": "swf_fontsize()",
			"contents": "swf_fontsize(${1:size})",
			"kind": "function"
		},
		{
			"trigger": "swf_fontslant()",
			"contents": "swf_fontslant(${1:slant})",
			"kind": "function"
		},
		{
			"trigger": "swf_fonttracking()",
			"contents": "swf_fonttracking(${1:tracking})",
			"kind": "function"
		},
		{
			"trigger": "swf_getbitmapinfo()",
			"contents": "swf_getbitmapinfo(${1:bitmapid})",
			"kind": "function"
		},
		{
			"trigger": "swf_getfontinfo()",
			"contents": "swf_getfontinfo()",
			"kind": "function"
		},
		{
			"trigger": "swf_getframe()",
			"contents": "swf_getframe()",
			"kind": "function"
		},
		{
			"trigger": "swf_labelframe()",
			"contents": "swf_labelframe(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "swf_lookat()",
			"contents": "swf_lookat(${1:view_x}, ${2:view_y}, ${3:view_z}, ${4:reference_x}, ${5:reference_y}, ${6:reference_z}, ${7:twist})",
			"kind": "function"
		},
		{
			"trigger": "swf_modifyobject()",
			"contents": "swf_modifyobject(${1:depth}, ${2:how})",
			"kind": "function"
		},
		{
			"trigger": "swf_mulcolor()",
			"contents": "swf_mulcolor(${1:r}, ${2:g}, ${3:b}, ${4:a})",
			"kind": "function"
		},
		{
			"trigger": "swf_nextid()",
			"contents": "swf_nextid()",
			"kind": "function"
		},
		{
			"trigger": "swf_oncondition()",
			"contents": "swf_oncondition(${1:transition})",
			"kind": "function"
		},
		{
			"trigger": "swf_openfile()",
			"contents": "swf_openfile(${1:filename}, ${2:width}, ${3:height}, ${4:framerate}, ${5:r}, ${6:g}, ${7:b})",
			"kind": "function"
		},
		{
			"trigger": "swf_ortho()",
			"contents": "swf_ortho(${1:xmin}, ${2:xmax}, ${3:ymin}, ${4:ymax}, ${5:zmin}, ${6:zmax})",
			"kind": "function"
		},
		{
			"trigger": "swf_ortho2()",
			"contents": "swf_ortho2(${1:xmin}, ${2:xmax}, ${3:ymin}, ${4:ymax})",
			"kind": "function"
		},
		{
			"trigger": "swf_perspective()",
			"contents": "swf_perspective(${1:fovy}, ${2:aspect}, ${3:near}, ${4:far})",
			"kind": "function"
		},
		{
			"trigger": "swf_placeobject()",
			"contents": "swf_placeobject(${1:objid}, ${2:depth})",
			"kind": "function"
		},
		{
			"trigger": "swf_polarview()",
			"contents": "swf_polarview(${1:dist}, ${2:azimuth}, ${3:incidence}, ${4:twist})",
			"kind": "function"
		},
		{
			"trigger": "swf_popmatrix()",
			"contents": "swf_popmatrix()",
			"kind": "function"
		},
		{
			"trigger": "swf_posround()",
			"contents": "swf_posround(${1:round})",
			"kind": "function"
		},
		{
			"trigger": "swf_pushmatrix()",
			"contents": "swf_pushmatrix()",
			"kind": "function"
		},
		{
			"trigger": "swf_removeobject()",
			"contents": "swf_removeobject(${1:depth})",
			"kind": "function"
		},
		{
			"trigger": "swf_rotate()",
			"contents": "swf_rotate(${1:angle}, ${2:axis})",
			"kind": "function"
		},
		{
			"trigger": "swf_scale()",
			"contents": "swf_scale(${1:x}, ${2:y}, ${3:z})",
			"kind": "function"
		},
		{
			"trigger": "swf_setfont()",
			"contents": "swf_setfont(${1:fontid})",
			"kind": "function"
		},
		{
			"trigger": "swf_setframe()",
			"contents": "swf_setframe(${1:framenumber})",
			"kind": "function"
		},
		{
			"trigger": "swf_shapearc()",
			"contents": "swf_shapearc(${1:x}, ${2:y}, ${3:r}, ${4:ang1}, ${5:ang2})",
			"kind": "function"
		},
		{
			"trigger": "swf_shapecurveto()",
			"contents": "swf_shapecurveto(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2})",
			"kind": "function"
		},
		{
			"trigger": "swf_shapecurveto3()",
			"contents": "swf_shapecurveto3(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3})",
			"kind": "function"
		},
		{
			"trigger": "swf_shapefillbitmapclip()",
			"contents": "swf_shapefillbitmapclip(${1:bitmapid})",
			"kind": "function"
		},
		{
			"trigger": "swf_shapefillbitmaptile()",
			"contents": "swf_shapefillbitmaptile(${1:bitmapid})",
			"kind": "function"
		},
		{
			"trigger": "swf_shapefilloff()",
			"contents": "swf_shapefilloff()",
			"kind": "function"
		},
		{
			"trigger": "swf_shapefillsolid()",
			"contents": "swf_shapefillsolid(${1:r}, ${2:g}, ${3:b}, ${4:a})",
			"kind": "function"
		},
		{
			"trigger": "swf_shapelinesolid()",
			"contents": "swf_shapelinesolid(${1:r}, ${2:g}, ${3:b}, ${4:a}, ${5:width})",
			"kind": "function"
		},
		{
			"trigger": "swf_shapelineto()",
			"contents": "swf_shapelineto(${1:x}, ${2:y})",
			"kind": "function"
		},
		{
			"trigger": "swf_shapemoveto()",
			"contents": "swf_shapemoveto(${1:x}, ${2:y})",
			"kind": "function"
		},
		{
			"trigger": "swf_showframe()",
			"contents": "swf_showframe()",
			"kind": "function"
		},
		{
			"trigger": "swf_startbutton()",
			"contents": "swf_startbutton(${1:objid}, ${2:type})",
			"kind": "function"
		},
		{
			"trigger": "swf_startdoaction()",
			"contents": "swf_startdoaction()",
			"kind": "function"
		},
		{
			"trigger": "swf_startshape()",
			"contents": "swf_startshape(${1:objid})",
			"kind": "function"
		},
		{
			"trigger": "swf_startsymbol()",
			"contents": "swf_startsymbol(${1:objid})",
			"kind": "function"
		},
		{
			"trigger": "swf_textwidth()",
			"contents": "swf_textwidth(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "swf_translate()",
			"contents": "swf_translate(${1:x}, ${2:y}, ${3:z})",
			"kind": "function"
		},
		{
			"trigger": "swf_viewport()",
			"contents": "swf_viewport(${1:xmin}, ${2:xmax}, ${3:ymin}, ${4:ymax})",
			"kind": "function"
		},
		{
			"trigger": "SWFSound()",
			"contents": "SWFSound(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "sybase_affected_rows()",
			"contents": "sybase_affected_rows()",
			"kind": "function"
		},
		{
			"trigger": "sybase_close()",
			"contents": "sybase_close()",
			"kind": "function"
		},
		{
			"trigger": "sybase_connect()",
			"contents": "sybase_connect()",
			"kind": "function"
		},
		{
			"trigger": "sybase_data_seek()",
			"contents": "sybase_data_seek(${1:result_identifier}, ${2:row_number})",
			"kind": "function"
		},
		{
			"trigger": "sybase_deadlock_retry_count()",
			"contents": "sybase_deadlock_retry_count(${1:retry_count})",
			"kind": "function"
		},
		{
			"trigger": "sybase_fetch_array()",
			"contents": "sybase_fetch_array(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "sybase_fetch_assoc()",
			"contents": "sybase_fetch_assoc(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "sybase_fetch_field()",
			"contents": "sybase_fetch_field(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "sybase_fetch_object()",
			"contents": "sybase_fetch_object(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "sybase_fetch_row()",
			"contents": "sybase_fetch_row(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "sybase_field_seek()",
			"contents": "sybase_field_seek(${1:result}, ${2:field_offset})",
			"kind": "function"
		},
		{
			"trigger": "sybase_free_result()",
			"contents": "sybase_free_result(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "sybase_get_last_message()",
			"contents": "sybase_get_last_message()",
			"kind": "function"
		},
		{
			"trigger": "sybase_min_client_severity()",
			"contents": "sybase_min_client_severity(${1:severity})",
			"kind": "function"
		},
		{
			"trigger": "sybase_min_error_severity()",
			"contents": "sybase_min_error_severity(${1:severity})",
			"kind": "function"
		},
		{
			"trigger": "sybase_min_message_severity()",
			"contents": "sybase_min_message_severity(${1:severity})",
			"kind": "function"
		},
		{
			"trigger": "sybase_min_server_severity()",
			"contents": "sybase_min_server_severity(${1:severity})",
			"kind": "function"
		},
		{
			"trigger": "sybase_num_fields()",
			"contents": "sybase_num_fields(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "sybase_num_rows()",
			"contents": "sybase_num_rows(${1:result})",
			"kind": "function"
		},
		{
			"trigger": "sybase_pconnect()",
			"contents": "sybase_pconnect()",
			"kind": "function"
		},
		{
			"trigger": "sybase_query()",
			"contents": "sybase_query(${1:query})",
			"kind": "function"
		},
		{
			"trigger": "sybase_result()",
			"contents": "sybase_result(${1:result}, ${2:row}, ${3:field})",
			"kind": "function"
		},
		{
			"trigger": "sybase_select_db()",
			"contents": "sybase_select_db(${1:database_name})",
			"kind": "function"
		},
		{
			"trigger": "sybase_set_message_handler()",
			"contents": "sybase_set_message_handler(${1:handler})",
			"kind": "function"
		},
		{
			"trigger": "sybase_unbuffered_query()",
			"contents": "sybase_unbuffered_query(${1:query}, ${2:link_identifier})",
			"kind": "function"
		},
		{
			"trigger": "symlink()",
			"contents": "symlink(${1:target}, ${2:link})",
			"kind": "function"
		},
		{
			"trigger": "sys_get_temp_dir()",
			"contents": "sys_get_temp_dir()",
			"kind": "function"
		},
		{
			"trigger": "sys_getloadavg()",
			"contents": "sys_getloadavg()",
			"kind": "function"
		},
		{
			"trigger": "syslog()",
			"contents": "syslog(${1:priority}, ${2:message})",
			"kind": "function"
		},
		{
			"trigger": "system()",
			"contents": "system(${1:command})",
			"kind": "function"
		},
		{
			"trigger": "tan()",
			"contents": "tan(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "tanh()",
			"contents": "tanh(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "tcpwrap_check()",
			"contents": "tcpwrap_check(${1:daemon}, ${2:address})",
			"kind": "function"
		},
		{
			"trigger": "tempnam()",
			"contents": "tempnam(${1:dir}, ${2:prefix})",
			"kind": "function"
		},
		{
			"trigger": "textdomain()",
			"contents": "textdomain(${1:text_domain})",
			"kind": "function"
		},
		{
			"trigger": "tidy_access_count()",
			"contents": "tidy_access_count(${1:object})",
			"kind": "function"
		},
		{
			"trigger": "tidy_config_count()",
			"contents": "tidy_config_count(${1:object})",
			"kind": "function"
		},
		{
			"trigger": "tidy_error_count()",
			"contents": "tidy_error_count(${1:object})",
			"kind": "function"
		},
		{
			"trigger": "tidy_get_error_buffer()",
			"contents": "tidy_get_error_buffer(${1:object})",
			"kind": "function"
		},
		{
			"trigger": "tidy_get_output()",
			"contents": "tidy_get_output(${1:object})",
			"kind": "function"
		},
		{
			"trigger": "tidy_load_config()",
			"contents": "tidy_load_config(${1:filename}, ${2:encoding})",
			"kind": "function"
		},
		{
			"trigger": "tidy_reset_config()",
			"contents": "tidy_reset_config()",
			"kind": "function"
		},
		{
			"trigger": "tidy_save_config()",
			"contents": "tidy_save_config(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "tidy_set_encoding()",
			"contents": "tidy_set_encoding(${1:encoding})",
			"kind": "function"
		},
		{
			"trigger": "tidy_setopt()",
			"contents": "tidy_setopt(${1:option}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "tidy_warning_count()",
			"contents": "tidy_warning_count(${1:object})",
			"kind": "function"
		},
		{
			"trigger": "time()",
			"contents": "time()",
			"kind": "function"
		},
		{
			"trigger": "time_nanosleep()",
			"contents": "time_nanosleep(${1:seconds}, ${2:nanoseconds})",
			"kind": "function"
		},
		{
			"trigger": "time_sleep_until()",
			"contents": "time_sleep_until(${1:timestamp})",
			"kind": "function"
		},
		{
			"trigger": "timezone_abbreviations_list()",
			"contents": "timezone_abbreviations_list()",
			"kind": "function"
		},
		{
			"trigger": "timezone_identifiers_list()",
			"contents": "timezone_identifiers_list()",
			"kind": "function"
		},
		{
			"trigger": "timezone_location_get()",
			"contents": "timezone_location_get()",
			"kind": "function"
		},
		{
			"trigger": "timezone_name_from_abbr()",
			"contents": "timezone_name_from_abbr(${1:abbr})",
			"kind": "function"
		},
		{
			"trigger": "timezone_name_get()",
			"contents": "timezone_name_get()",
			"kind": "function"
		},
		{
			"trigger": "timezone_offset_get()",
			"contents": "timezone_offset_get()",
			"kind": "function"
		},
		{
			"trigger": "timezone_open()",
			"contents": "timezone_open()",
			"kind": "function"
		},
		{
			"trigger": "timezone_transitions_get()",
			"contents": "timezone_transitions_get()",
			"kind": "function"
		},
		{
			"trigger": "timezone_version_get()",
			"contents": "timezone_version_get()",
			"kind": "function"
		},
		{
			"trigger": "tmpfile()",
			"contents": "tmpfile()",
			"kind": "function"
		},
		{
			"trigger": "token_get_all()",
			"contents": "token_get_all(${1:source})",
			"kind": "function"
		},
		{
			"trigger": "token_name()",
			"contents": "token_name(${1:token})",
			"kind": "function"
		},
		{
			"trigger": "touch()",
			"contents": "touch(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "trigger_error()",
			"contents": "trigger_error(${1:error_msg})",
			"kind": "function"
		},
		{
			"trigger": "trim()",
			"contents": "trim(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "uasort()",
			"contents": "uasort(${1:array}, ${2:cmp_function})",
			"kind": "function"
		},
		{
			"trigger": "ucfirst()",
			"contents": "ucfirst(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "ucwords()",
			"contents": "ucwords(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "udm_add_search_limit()",
			"contents": "udm_add_search_limit(${1:agent}, ${2:var}, ${3:val})",
			"kind": "function"
		},
		{
			"trigger": "udm_alloc_agent()",
			"contents": "udm_alloc_agent(${1:dbaddr})",
			"kind": "function"
		},
		{
			"trigger": "udm_alloc_agent_array()",
			"contents": "udm_alloc_agent_array(${1:databases})",
			"kind": "function"
		},
		{
			"trigger": "udm_api_version()",
			"contents": "udm_api_version()",
			"kind": "function"
		},
		{
			"trigger": "udm_cat_list()",
			"contents": "udm_cat_list(${1:agent}, ${2:category})",
			"kind": "function"
		},
		{
			"trigger": "udm_cat_path()",
			"contents": "udm_cat_path(${1:agent}, ${2:category})",
			"kind": "function"
		},
		{
			"trigger": "udm_check_charset()",
			"contents": "udm_check_charset(${1:agent}, ${2:charset})",
			"kind": "function"
		},
		{
			"trigger": "udm_check_stored()",
			"contents": "udm_check_stored(${1:agent}, ${2:link}, ${3:doc_id})",
			"kind": "function"
		},
		{
			"trigger": "udm_clear_search_limits()",
			"contents": "udm_clear_search_limits(${1:agent})",
			"kind": "function"
		},
		{
			"trigger": "udm_close_stored()",
			"contents": "udm_close_stored(${1:agent}, ${2:link})",
			"kind": "function"
		},
		{
			"trigger": "udm_crc32()",
			"contents": "udm_crc32(${1:agent}, ${2:str})",
			"kind": "function"
		},
		{
			"trigger": "udm_errno()",
			"contents": "udm_errno(${1:agent})",
			"kind": "function"
		},
		{
			"trigger": "udm_error()",
			"contents": "udm_error(${1:agent})",
			"kind": "function"
		},
		{
			"trigger": "udm_find()",
			"contents": "udm_find(${1:agent}, ${2:query})",
			"kind": "function"
		},
		{
			"trigger": "udm_free_agent()",
			"contents": "udm_free_agent(${1:agent})",
			"kind": "function"
		},
		{
			"trigger": "udm_free_ispell_data()",
			"contents": "udm_free_ispell_data(${1:agent})",
			"kind": "function"
		},
		{
			"trigger": "udm_free_res()",
			"contents": "udm_free_res(${1:res})",
			"kind": "function"
		},
		{
			"trigger": "udm_get_doc_count()",
			"contents": "udm_get_doc_count(${1:agent})",
			"kind": "function"
		},
		{
			"trigger": "udm_get_res_field()",
			"contents": "udm_get_res_field(${1:res}, ${2:row}, ${3:field})",
			"kind": "function"
		},
		{
			"trigger": "udm_get_res_param()",
			"contents": "udm_get_res_param(${1:res}, ${2:param})",
			"kind": "function"
		},
		{
			"trigger": "udm_hash32()",
			"contents": "udm_hash32(${1:agent}, ${2:str})",
			"kind": "function"
		},
		{
			"trigger": "udm_load_ispell_data()",
			"contents": "udm_load_ispell_data(${1:agent}, ${2:var}, ${3:val1}, ${4:val2}, ${5:flag})",
			"kind": "function"
		},
		{
			"trigger": "udm_open_stored()",
			"contents": "udm_open_stored(${1:agent}, ${2:storedaddr})",
			"kind": "function"
		},
		{
			"trigger": "udm_set_agent_param()",
			"contents": "udm_set_agent_param(${1:agent}, ${2:var}, ${3:val})",
			"kind": "function"
		},
		{
			"trigger": "uksort()",
			"contents": "uksort(${1:array}, ${2:cmp_function})",
			"kind": "function"
		},
		{
			"trigger": "umask()",
			"contents": "umask()",
			"kind": "function"
		},
		{
			"trigger": "uniqid()",
			"contents": "uniqid()",
			"kind": "function"
		},
		{
			"trigger": "unixtojd()",
			"contents": "unixtojd()",
			"kind": "function"
		},
		{
			"trigger": "unlink()",
			"contents": "unlink(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "unpack()",
			"contents": "unpack(${1:format}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "unregister_tick_function()",
			"contents": "unregister_tick_function(${1:function_name})",
			"kind": "function"
		},
		{
			"trigger": "unserialize()",
			"contents": "unserialize(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "unset()",
			"contents": "unset(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "urldecode()",
			"contents": "urldecode(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "urlencode()",
			"contents": "urlencode(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "use_soap_error_handler()",
			"contents": "use_soap_error_handler()",
			"kind": "function"
		},
		{
			"trigger": "user_error()",
			"contents": "user_error()",
			"kind": "function"
		},
		{
			"trigger": "usleep()",
			"contents": "usleep(${1:micro_seconds})",
			"kind": "function"
		},
		{
			"trigger": "usort()",
			"contents": "usort(${1:array}, ${2:cmp_function})",
			"kind": "function"
		},
		{
			"trigger": "utf8_decode()",
			"contents": "utf8_decode(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "utf8_encode()",
			"contents": "utf8_encode(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "var_dump()",
			"contents": "var_dump(${1:expression})",
			"kind": "function"
		},
		{
			"trigger": "var_export()",
			"contents": "var_export(${1:expression})",
			"kind": "function"
		},
		{
			"trigger": "variant_abs()",
			"contents": "variant_abs(${1:val})",
			"kind": "function"
		},
		{
			"trigger": "variant_add()",
			"contents": "variant_add(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_and()",
			"contents": "variant_and(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_cast()",
			"contents": "variant_cast(${1:variant}, ${2:type})",
			"kind": "function"
		},
		{
			"trigger": "variant_cat()",
			"contents": "variant_cat(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_cmp()",
			"contents": "variant_cmp(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_date_from_timestamp()",
			"contents": "variant_date_from_timestamp(${1:timestamp})",
			"kind": "function"
		},
		{
			"trigger": "variant_date_to_timestamp()",
			"contents": "variant_date_to_timestamp(${1:variant})",
			"kind": "function"
		},
		{
			"trigger": "variant_div()",
			"contents": "variant_div(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_eqv()",
			"contents": "variant_eqv(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_fix()",
			"contents": "variant_fix(${1:variant})",
			"kind": "function"
		},
		{
			"trigger": "variant_get_type()",
			"contents": "variant_get_type(${1:variant})",
			"kind": "function"
		},
		{
			"trigger": "variant_idiv()",
			"contents": "variant_idiv(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_imp()",
			"contents": "variant_imp(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_int()",
			"contents": "variant_int(${1:variant})",
			"kind": "function"
		},
		{
			"trigger": "variant_mod()",
			"contents": "variant_mod(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_mul()",
			"contents": "variant_mul(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_neg()",
			"contents": "variant_neg(${1:variant})",
			"kind": "function"
		},
		{
			"trigger": "variant_not()",
			"contents": "variant_not(${1:variant})",
			"kind": "function"
		},
		{
			"trigger": "variant_or()",
			"contents": "variant_or(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_pow()",
			"contents": "variant_pow(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_round()",
			"contents": "variant_round(${1:variant}, ${2:decimals})",
			"kind": "function"
		},
		{
			"trigger": "variant_set()",
			"contents": "variant_set(${1:variant}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "variant_set_type()",
			"contents": "variant_set_type(${1:variant}, ${2:type})",
			"kind": "function"
		},
		{
			"trigger": "variant_sub()",
			"contents": "variant_sub(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "variant_xor()",
			"contents": "variant_xor(${1:left}, ${2:right})",
			"kind": "function"
		},
		{
			"trigger": "version_compare()",
			"contents": "version_compare(${1:version1}, ${2:version2})",
			"kind": "function"
		},
		{
			"trigger": "vfprintf()",
			"contents": "vfprintf(${1:handle}, ${2:format}, ${3:args})",
			"kind": "function"
		},
		{
			"trigger": "virtual()",
			"contents": "virtual(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_add_alias_domain()",
			"contents": "vpopmail_add_alias_domain(${1:domain}, ${2:aliasdomain})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_add_alias_domain_ex()",
			"contents": "vpopmail_add_alias_domain_ex(${1:olddomain}, ${2:newdomain})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_add_domain()",
			"contents": "vpopmail_add_domain(${1:domain}, ${2:dir}, ${3:uid}, ${4:gid})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_add_domain_ex()",
			"contents": "vpopmail_add_domain_ex(${1:domain}, ${2:passwd})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_add_user()",
			"contents": "vpopmail_add_user(${1:user}, ${2:domain}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_alias_add()",
			"contents": "vpopmail_alias_add(${1:user}, ${2:domain}, ${3:alias})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_alias_del()",
			"contents": "vpopmail_alias_del(${1:user}, ${2:domain})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_alias_del_domain()",
			"contents": "vpopmail_alias_del_domain(${1:domain})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_alias_get()",
			"contents": "vpopmail_alias_get(${1:alias}, ${2:domain})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_alias_get_all()",
			"contents": "vpopmail_alias_get_all(${1:domain})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_auth_user()",
			"contents": "vpopmail_auth_user(${1:user}, ${2:domain}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_del_domain()",
			"contents": "vpopmail_del_domain(${1:domain})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_del_domain_ex()",
			"contents": "vpopmail_del_domain_ex(${1:domain})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_del_user()",
			"contents": "vpopmail_del_user(${1:user}, ${2:domain})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_error()",
			"contents": "vpopmail_error()",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_passwd()",
			"contents": "vpopmail_passwd(${1:user}, ${2:domain}, ${3:password})",
			"kind": "function"
		},
		{
			"trigger": "vpopmail_set_user_quota()",
			"contents": "vpopmail_set_user_quota(${1:user}, ${2:domain}, ${3:quota})",
			"kind": "function"
		},
		{
			"trigger": "vprintf()",
			"contents": "vprintf(${1:format}, ${2:args})",
			"kind": "function"
		},
		{
			"trigger": "vsprintf()",
			"contents": "vsprintf(${1:format}, ${2:args})",
			"kind": "function"
		},
		{
			"trigger": "w32api_deftype()",
			"contents": "w32api_deftype(${1:typename}, ${2:member1_type}, ${3:member1_name})",
			"kind": "function"
		},
		{
			"trigger": "w32api_init_dtype()",
			"contents": "w32api_init_dtype(${1:typename}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "w32api_invoke_function()",
			"contents": "w32api_invoke_function(${1:funcname}, ${2:argument})",
			"kind": "function"
		},
		{
			"trigger": "w32api_register_function()",
			"contents": "w32api_register_function(${1:library}, ${2:function_name}, ${3:return_type})",
			"kind": "function"
		},
		{
			"trigger": "w32api_set_call_method()",
			"contents": "w32api_set_call_method(${1:method})",
			"kind": "function"
		},
		{
			"trigger": "wddx_add_vars()",
			"contents": "wddx_add_vars(${1:packet_id}, ${2:var_name})",
			"kind": "function"
		},
		{
			"trigger": "wddx_deserialize()",
			"contents": "wddx_deserialize()",
			"kind": "function"
		},
		{
			"trigger": "wddx_packet_end()",
			"contents": "wddx_packet_end(${1:packet_id})",
			"kind": "function"
		},
		{
			"trigger": "wddx_packet_start()",
			"contents": "wddx_packet_start()",
			"kind": "function"
		},
		{
			"trigger": "wddx_serialize_value()",
			"contents": "wddx_serialize_value(${1:var})",
			"kind": "function"
		},
		{
			"trigger": "wddx_serialize_vars()",
			"contents": "wddx_serialize_vars(${1:var_name})",
			"kind": "function"
		},
		{
			"trigger": "wddx_unserialize()",
			"contents": "wddx_unserialize(${1:packet})",
			"kind": "function"
		},
		{
			"trigger": "win32_continue_service()",
			"contents": "win32_continue_service(${1:servicename})",
			"kind": "function"
		},
		{
			"trigger": "win32_create_service()",
			"contents": "win32_create_service(${1:details})",
			"kind": "function"
		},
		{
			"trigger": "win32_delete_service()",
			"contents": "win32_delete_service(${1:servicename})",
			"kind": "function"
		},
		{
			"trigger": "win32_get_last_control_message()",
			"contents": "win32_get_last_control_message()",
			"kind": "function"
		},
		{
			"trigger": "win32_pause_service()",
			"contents": "win32_pause_service(${1:servicename})",
			"kind": "function"
		},
		{
			"trigger": "win32_ps_list_procs()",
			"contents": "win32_ps_list_procs()",
			"kind": "function"
		},
		{
			"trigger": "win32_ps_stat_mem()",
			"contents": "win32_ps_stat_mem()",
			"kind": "function"
		},
		{
			"trigger": "win32_ps_stat_proc()",
			"contents": "win32_ps_stat_proc()",
			"kind": "function"
		},
		{
			"trigger": "win32_query_service_status()",
			"contents": "win32_query_service_status(${1:servicename})",
			"kind": "function"
		},
		{
			"trigger": "win32_set_service_status()",
			"contents": "win32_set_service_status(${1:status})",
			"kind": "function"
		},
		{
			"trigger": "win32_start_service()",
			"contents": "win32_start_service(${1:servicename})",
			"kind": "function"
		},
		{
			"trigger": "win32_start_service_ctrl_dispatcher()",
			"contents": "win32_start_service_ctrl_dispatcher(${1:name})",
			"kind": "function"
		},
		{
			"trigger": "win32_stop_service()",
			"contents": "win32_stop_service(${1:servicename})",
			"kind": "function"
		},
		{
			"trigger": "wincache_fcache_fileinfo()",
			"contents": "wincache_fcache_fileinfo()",
			"kind": "function"
		},
		{
			"trigger": "wincache_fcache_meminfo()",
			"contents": "wincache_fcache_meminfo()",
			"kind": "function"
		},
		{
			"trigger": "wincache_lock()",
			"contents": "wincache_lock(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "wincache_ocache_fileinfo()",
			"contents": "wincache_ocache_fileinfo()",
			"kind": "function"
		},
		{
			"trigger": "wincache_ocache_meminfo()",
			"contents": "wincache_ocache_meminfo()",
			"kind": "function"
		},
		{
			"trigger": "wincache_refresh_if_changed()",
			"contents": "wincache_refresh_if_changed()",
			"kind": "function"
		},
		{
			"trigger": "wincache_rplist_fileinfo()",
			"contents": "wincache_rplist_fileinfo()",
			"kind": "function"
		},
		{
			"trigger": "wincache_rplist_meminfo()",
			"contents": "wincache_rplist_meminfo()",
			"kind": "function"
		},
		{
			"trigger": "wincache_scache_info()",
			"contents": "wincache_scache_info()",
			"kind": "function"
		},
		{
			"trigger": "wincache_scache_meminfo()",
			"contents": "wincache_scache_meminfo()",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_add()",
			"contents": "wincache_ucache_add(${1:key}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_cas()",
			"contents": "wincache_ucache_cas(${1:key}, ${2:old_value}, ${3:new_value})",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_clear()",
			"contents": "wincache_ucache_clear()",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_dec()",
			"contents": "wincache_ucache_dec(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_delete()",
			"contents": "wincache_ucache_delete(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_exists()",
			"contents": "wincache_ucache_exists(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_get()",
			"contents": "wincache_ucache_get(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_inc()",
			"contents": "wincache_ucache_inc(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_info()",
			"contents": "wincache_ucache_info()",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_meminfo()",
			"contents": "wincache_ucache_meminfo()",
			"kind": "function"
		},
		{
			"trigger": "wincache_ucache_set()",
			"contents": "wincache_ucache_set(${1:key}, ${2:value})",
			"kind": "function"
		},
		{
			"trigger": "wincache_unlock()",
			"contents": "wincache_unlock(${1:key})",
			"kind": "function"
		},
		{
			"trigger": "wordwrap()",
			"contents": "wordwrap(${1:str})",
			"kind": "function"
		},
		{
			"trigger": "xattr_get()",
			"contents": "xattr_get(${1:filename}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "xattr_list()",
			"contents": "xattr_list(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "xattr_remove()",
			"contents": "xattr_remove(${1:filename}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "xattr_set()",
			"contents": "xattr_set(${1:filename}, ${2:name}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "xattr_supported()",
			"contents": "xattr_supported(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_file_bdiff()",
			"contents": "xdiff_file_bdiff(${1:old_file}, ${2:new_file}, ${3:dest})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_file_bdiff_size()",
			"contents": "xdiff_file_bdiff_size(${1:file})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_file_bpatch()",
			"contents": "xdiff_file_bpatch(${1:file}, ${2:patch}, ${3:dest})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_file_diff()",
			"contents": "xdiff_file_diff(${1:old_file}, ${2:new_file}, ${3:dest})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_file_diff_binary()",
			"contents": "xdiff_file_diff_binary(${1:old_file}, ${2:new_file}, ${3:dest})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_file_merge3()",
			"contents": "xdiff_file_merge3(${1:old_file}, ${2:new_file1}, ${3:new_file2}, ${4:dest})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_file_patch()",
			"contents": "xdiff_file_patch(${1:file}, ${2:patch}, ${3:dest})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_file_patch_binary()",
			"contents": "xdiff_file_patch_binary(${1:file}, ${2:patch}, ${3:dest})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_file_rabdiff()",
			"contents": "xdiff_file_rabdiff(${1:old_file}, ${2:new_file}, ${3:dest})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_string_bdiff()",
			"contents": "xdiff_string_bdiff(${1:old_data}, ${2:new_data})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_string_bdiff_size()",
			"contents": "xdiff_string_bdiff_size(${1:patch})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_string_bpatch()",
			"contents": "xdiff_string_bpatch(${1:str}, ${2:patch})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_string_diff()",
			"contents": "xdiff_string_diff(${1:old_data}, ${2:new_data})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_string_diff_binary()",
			"contents": "xdiff_string_diff_binary(${1:old_data}, ${2:new_data})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_string_merge3()",
			"contents": "xdiff_string_merge3(${1:old_data}, ${2:new_data1}, ${3:new_data2})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_string_patch()",
			"contents": "xdiff_string_patch(${1:str}, ${2:patch})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_string_patch_binary()",
			"contents": "xdiff_string_patch_binary(${1:str}, ${2:patch})",
			"kind": "function"
		},
		{
			"trigger": "xdiff_string_rabdiff()",
			"contents": "xdiff_string_rabdiff(${1:old_data}, ${2:new_data})",
			"kind": "function"
		},
		{
			"trigger": "xml_error_string()",
			"contents": "xml_error_string(${1:code})",
			"kind": "function"
		},
		{
			"trigger": "xml_get_current_byte_index()",
			"contents": "xml_get_current_byte_index(${1:parser})",
			"kind": "function"
		},
		{
			"trigger": "xml_get_current_column_number()",
			"contents": "xml_get_current_column_number(${1:parser})",
			"kind": "function"
		},
		{
			"trigger": "xml_get_current_line_number()",
			"contents": "xml_get_current_line_number(${1:parser})",
			"kind": "function"
		},
		{
			"trigger": "xml_get_error_code()",
			"contents": "xml_get_error_code(${1:parser})",
			"kind": "function"
		},
		{
			"trigger": "xml_parse()",
			"contents": "xml_parse(${1:parser}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "xml_parse_into_struct()",
			"contents": "xml_parse_into_struct(${1:parser}, ${2:data}, ${3:values})",
			"kind": "function"
		},
		{
			"trigger": "xml_parser_create()",
			"contents": "xml_parser_create()",
			"kind": "function"
		},
		{
			"trigger": "xml_parser_create_ns()",
			"contents": "xml_parser_create_ns()",
			"kind": "function"
		},
		{
			"trigger": "xml_parser_free()",
			"contents": "xml_parser_free(${1:parser})",
			"kind": "function"
		},
		{
			"trigger": "xml_parser_get_option()",
			"contents": "xml_parser_get_option(${1:parser}, ${2:option})",
			"kind": "function"
		},
		{
			"trigger": "xml_parser_set_option()",
			"contents": "xml_parser_set_option(${1:parser}, ${2:option}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "xml_set_character_data_handler()",
			"contents": "xml_set_character_data_handler(${1:parser}, ${2:handler})",
			"kind": "function"
		},
		{
			"trigger": "xml_set_default_handler()",
			"contents": "xml_set_default_handler(${1:parser}, ${2:handler})",
			"kind": "function"
		},
		{
			"trigger": "xml_set_element_handler()",
			"contents": "xml_set_element_handler(${1:parser}, ${2:start_element_handler}, ${3:end_element_handler})",
			"kind": "function"
		},
		{
			"trigger": "xml_set_end_namespace_decl_handler()",
			"contents": "xml_set_end_namespace_decl_handler(${1:parser}, ${2:handler})",
			"kind": "function"
		},
		{
			"trigger": "xml_set_external_entity_ref_handler()",
			"contents": "xml_set_external_entity_ref_handler(${1:parser}, ${2:handler})",
			"kind": "function"
		},
		{
			"trigger": "xml_set_notation_decl_handler()",
			"contents": "xml_set_notation_decl_handler(${1:parser}, ${2:handler})",
			"kind": "function"
		},
		{
			"trigger": "xml_set_object()",
			"contents": "xml_set_object(${1:parser}, ${2:object})",
			"kind": "function"
		},
		{
			"trigger": "xml_set_processing_instruction_handler()",
			"contents": "xml_set_processing_instruction_handler(${1:parser}, ${2:handler})",
			"kind": "function"
		},
		{
			"trigger": "xml_set_start_namespace_decl_handler()",
			"contents": "xml_set_start_namespace_decl_handler(${1:parser}, ${2:handler})",
			"kind": "function"
		},
		{
			"trigger": "xml_set_unparsed_entity_decl_handler()",
			"contents": "xml_set_unparsed_entity_decl_handler(${1:parser}, ${2:handler})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_decode()",
			"contents": "xmlrpc_decode(${1:xml})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_decode_request()",
			"contents": "xmlrpc_decode_request(${1:xml}, ${2:method})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_encode()",
			"contents": "xmlrpc_encode(${1:value})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_encode_request()",
			"contents": "xmlrpc_encode_request(${1:method}, ${2:params})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_get_type()",
			"contents": "xmlrpc_get_type(${1:value})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_is_fault()",
			"contents": "xmlrpc_is_fault(${1:arg})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_parse_method_descriptions()",
			"contents": "xmlrpc_parse_method_descriptions(${1:xml})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_server_add_introspection_data()",
			"contents": "xmlrpc_server_add_introspection_data(${1:server}, ${2:desc})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_server_call_method()",
			"contents": "xmlrpc_server_call_method(${1:server}, ${2:xml}, ${3:user_data})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_server_create()",
			"contents": "xmlrpc_server_create()",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_server_destroy()",
			"contents": "xmlrpc_server_destroy(${1:server})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_server_register_introspection_callback()",
			"contents": "xmlrpc_server_register_introspection_callback(${1:server}, ${2:function})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_server_register_method()",
			"contents": "xmlrpc_server_register_method(${1:server}, ${2:method_name}, ${3:function})",
			"kind": "function"
		},
		{
			"trigger": "xmlrpc_set_type()",
			"contents": "xmlrpc_set_type(${1:value}, ${2:type})",
			"kind": "function"
		},
		{
			"trigger": "xpath_eval()",
			"contents": "xpath_eval(${1:xpath_expression})",
			"kind": "function"
		},
		{
			"trigger": "xpath_eval_expression()",
			"contents": "xpath_eval_expression(${1:expression})",
			"kind": "function"
		},
		{
			"trigger": "xpath_new_context()",
			"contents": "xpath_new_context(${1:dom_document})",
			"kind": "function"
		},
		{
			"trigger": "xpath_register_ns()",
			"contents": "xpath_register_ns(${1:xpath_context}, ${2:prefix}, ${3:uri})",
			"kind": "function"
		},
		{
			"trigger": "xpath_register_ns_auto()",
			"contents": "xpath_register_ns_auto(${1:xpath_context})",
			"kind": "function"
		},
		{
			"trigger": "xptr_eval()",
			"contents": "xptr_eval(${1:eval_str})",
			"kind": "function"
		},
		{
			"trigger": "xptr_new_context()",
			"contents": "xptr_new_context()",
			"kind": "function"
		},
		{
			"trigger": "xslt_backend_info()",
			"contents": "xslt_backend_info()",
			"kind": "function"
		},
		{
			"trigger": "xslt_backend_name()",
			"contents": "xslt_backend_name()",
			"kind": "function"
		},
		{
			"trigger": "xslt_backend_version()",
			"contents": "xslt_backend_version()",
			"kind": "function"
		},
		{
			"trigger": "xslt_create()",
			"contents": "xslt_create()",
			"kind": "function"
		},
		{
			"trigger": "xslt_errno()",
			"contents": "xslt_errno(${1:xh})",
			"kind": "function"
		},
		{
			"trigger": "xslt_error()",
			"contents": "xslt_error(${1:xh})",
			"kind": "function"
		},
		{
			"trigger": "xslt_free()",
			"contents": "xslt_free(${1:xh})",
			"kind": "function"
		},
		{
			"trigger": "xslt_getopt()",
			"contents": "xslt_getopt(${1:processor})",
			"kind": "function"
		},
		{
			"trigger": "xslt_process()",
			"contents": "xslt_process(${1:xh}, ${2:xmlcontainer}, ${3:xslcontainer})",
			"kind": "function"
		},
		{
			"trigger": "xslt_set_base()",
			"contents": "xslt_set_base(${1:xh}, ${2:uri})",
			"kind": "function"
		},
		{
			"trigger": "xslt_set_encoding()",
			"contents": "xslt_set_encoding(${1:xh}, ${2:encoding})",
			"kind": "function"
		},
		{
			"trigger": "xslt_set_error_handler()",
			"contents": "xslt_set_error_handler(${1:xh}, ${2:handler})",
			"kind": "function"
		},
		{
			"trigger": "xslt_set_log()",
			"contents": "xslt_set_log(${1:xh})",
			"kind": "function"
		},
		{
			"trigger": "xslt_set_object()",
			"contents": "xslt_set_object(${1:processor}, ${2:obj})",
			"kind": "function"
		},
		{
			"trigger": "xslt_set_sax_handler()",
			"contents": "xslt_set_sax_handler(${1:xh}, ${2:handlers})",
			"kind": "function"
		},
		{
			"trigger": "xslt_set_sax_handlers()",
			"contents": "xslt_set_sax_handlers(${1:processor}, ${2:handlers})",
			"kind": "function"
		},
		{
			"trigger": "xslt_set_scheme_handler()",
			"contents": "xslt_set_scheme_handler(${1:xh}, ${2:handlers})",
			"kind": "function"
		},
		{
			"trigger": "xslt_set_scheme_handlers()",
			"contents": "xslt_set_scheme_handlers(${1:xh}, ${2:handlers})",
			"kind": "function"
		},
		{
			"trigger": "xslt_setopt()",
			"contents": "xslt_setopt(${1:processor}, ${2:newmask})",
			"kind": "function"
		},
		{
			"trigger": "yaml_emit()",
			"contents": "yaml_emit(${1:data})",
			"kind": "function"
		},
		{
			"trigger": "yaml_emit_file()",
			"contents": "yaml_emit_file(${1:filename}, ${2:data})",
			"kind": "function"
		},
		{
			"trigger": "yaml_parse()",
			"contents": "yaml_parse(${1:input})",
			"kind": "function"
		},
		{
			"trigger": "yaml_parse_file()",
			"contents": "yaml_parse_file(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "yaml_parse_url()",
			"contents": "yaml_parse_url(${1:url})",
			"kind": "function"
		},
		{
			"trigger": "yaz_addinfo()",
			"contents": "yaz_addinfo(${1:id})",
			"kind": "function"
		},
		{
			"trigger": "yaz_ccl_conf()",
			"contents": "yaz_ccl_conf(${1:id}, ${2:config})",
			"kind": "function"
		},
		{
			"trigger": "yaz_ccl_parse()",
			"contents": "yaz_ccl_parse(${1:id}, ${2:query}, ${3:result})",
			"kind": "function"
		},
		{
			"trigger": "yaz_close()",
			"contents": "yaz_close(${1:id})",
			"kind": "function"
		},
		{
			"trigger": "yaz_connect()",
			"contents": "yaz_connect(${1:zurl})",
			"kind": "function"
		},
		{
			"trigger": "yaz_database()",
			"contents": "yaz_database(${1:id}, ${2:databases})",
			"kind": "function"
		},
		{
			"trigger": "yaz_element()",
			"contents": "yaz_element(${1:id}, ${2:elementset})",
			"kind": "function"
		},
		{
			"trigger": "yaz_errno()",
			"contents": "yaz_errno(${1:id})",
			"kind": "function"
		},
		{
			"trigger": "yaz_error()",
			"contents": "yaz_error(${1:id})",
			"kind": "function"
		},
		{
			"trigger": "yaz_es()",
			"contents": "yaz_es(${1:id}, ${2:type}, ${3:args})",
			"kind": "function"
		},
		{
			"trigger": "yaz_es_result()",
			"contents": "yaz_es_result(${1:id})",
			"kind": "function"
		},
		{
			"trigger": "yaz_get_option()",
			"contents": "yaz_get_option(${1:id}, ${2:name})",
			"kind": "function"
		},
		{
			"trigger": "yaz_hits()",
			"contents": "yaz_hits(${1:id})",
			"kind": "function"
		},
		{
			"trigger": "yaz_itemorder()",
			"contents": "yaz_itemorder(${1:id}, ${2:args})",
			"kind": "function"
		},
		{
			"trigger": "yaz_present()",
			"contents": "yaz_present(${1:id})",
			"kind": "function"
		},
		{
			"trigger": "yaz_range()",
			"contents": "yaz_range(${1:id}, ${2:start}, ${3:number})",
			"kind": "function"
		},
		{
			"trigger": "yaz_record()",
			"contents": "yaz_record(${1:id}, ${2:pos}, ${3:type})",
			"kind": "function"
		},
		{
			"trigger": "yaz_scan()",
			"contents": "yaz_scan(${1:id}, ${2:type}, ${3:startterm})",
			"kind": "function"
		},
		{
			"trigger": "yaz_scan_result()",
			"contents": "yaz_scan_result(${1:id})",
			"kind": "function"
		},
		{
			"trigger": "yaz_schema()",
			"contents": "yaz_schema(${1:id}, ${2:schema})",
			"kind": "function"
		},
		{
			"trigger": "yaz_search()",
			"contents": "yaz_search(${1:id}, ${2:type}, ${3:query})",
			"kind": "function"
		},
		{
			"trigger": "yaz_set_option()",
			"contents": "yaz_set_option(${1:id}, ${2:name}, ${3:value})",
			"kind": "function"
		},
		{
			"trigger": "yaz_sort()",
			"contents": "yaz_sort(${1:id}, ${2:criteria})",
			"kind": "function"
		},
		{
			"trigger": "yaz_syntax()",
			"contents": "yaz_syntax(${1:id}, ${2:syntax})",
			"kind": "function"
		},
		{
			"trigger": "yaz_wait()",
			"contents": "yaz_wait()",
			"kind": "function"
		},
		{
			"trigger": "yp_all()",
			"contents": "yp_all(${1:domain}, ${2:map}, ${3:callback})",
			"kind": "function"
		},
		{
			"trigger": "yp_cat()",
			"contents": "yp_cat(${1:domain}, ${2:map})",
			"kind": "function"
		},
		{
			"trigger": "yp_err_string()",
			"contents": "yp_err_string(${1:errorcode})",
			"kind": "function"
		},
		{
			"trigger": "yp_errno()",
			"contents": "yp_errno()",
			"kind": "function"
		},
		{
			"trigger": "yp_first()",
			"contents": "yp_first(${1:domain}, ${2:map})",
			"kind": "function"
		},
		{
			"trigger": "yp_get_default_domain()",
			"contents": "yp_get_default_domain()",
			"kind": "function"
		},
		{
			"trigger": "yp_master()",
			"contents": "yp_master(${1:domain}, ${2:map})",
			"kind": "function"
		},
		{
			"trigger": "yp_match()",
			"contents": "yp_match(${1:domain}, ${2:map}, ${3:key})",
			"kind": "function"
		},
		{
			"trigger": "yp_next()",
			"contents": "yp_next(${1:domain}, ${2:map}, ${3:key})",
			"kind": "function"
		},
		{
			"trigger": "yp_order()",
			"contents": "yp_order(${1:domain}, ${2:map})",
			"kind": "function"
		},
		{
			"trigger": "zend_logo_guid()",
			"contents": "zend_logo_guid()",
			"kind": "function"
		},
		{
			"trigger": "zend_thread_id()",
			"contents": "zend_thread_id()",
			"kind": "function"
		},
		{
			"trigger": "zend_version()",
			"contents": "zend_version()",
			"kind": "function"
		},
		{
			"trigger": "zip_close()",
			"contents": "zip_close(${1:zip})",
			"kind": "function"
		},
		{
			"trigger": "zip_entry_close()",
			"contents": "zip_entry_close(${1:zip_entry})",
			"kind": "function"
		},
		{
			"trigger": "zip_entry_compressedsize()",
			"contents": "zip_entry_compressedsize(${1:zip_entry})",
			"kind": "function"
		},
		{
			"trigger": "zip_entry_compressionmethod()",
			"contents": "zip_entry_compressionmethod(${1:zip_entry})",
			"kind": "function"
		},
		{
			"trigger": "zip_entry_filesize()",
			"contents": "zip_entry_filesize(${1:zip_entry})",
			"kind": "function"
		},
		{
			"trigger": "zip_entry_name()",
			"contents": "zip_entry_name(${1:zip_entry})",
			"kind": "function"
		},
		{
			"trigger": "zip_entry_open()",
			"contents": "zip_entry_open(${1:zip}, ${2:zip_entry})",
			"kind": "function"
		},
		{
			"trigger": "zip_entry_read()",
			"contents": "zip_entry_read(${1:zip_entry})",
			"kind": "function"
		},
		{
			"trigger": "zip_open()",
			"contents": "zip_open(${1:filename})",
			"kind": "function"
		},
		{
			"trigger": "zip_read()",
			"contents": "zip_read(${1:zip})",
			"kind": "function"
		},
		{
			"trigger": "zlib_get_coding_type()",
			"contents": "zlib_get_coding_type()",
			"kind": "function"
		},
		{
			"trigger": "password_hash()",
			"contents": "password_hash(${1:string}, ${2:PASSWORD_DEFAULT})",
			"kind": "function"
		},
		{
			"trigger": "password_verify()",
			"contents": "password_verify(${1:password}, ${2:hash})",
			"kind": "function"
		},
		{
			"trigger": "password_get_info()",
			"contents": "password_get_info(${1:hash})",
			"kind": "function"
		},
		{
			"trigger": "password_needs_rehash()",
			"contents": "password_needs_rehash(${1:hash}, ${2:PASSWORD_DEFAULT})",
			"kind": "function"
		}
	]
}
