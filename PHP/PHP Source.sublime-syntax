%YAML 1.2
# https://www.php.net/manual/en/langref.php
---
name: PHP Source
scope: source.php
hidden: true
version: 2

variables:
  guarded_identifier: (?!{{reserved}}){{identifier}}
  identifier: '{{identifier_start}}[[:alnum:]_]*'
  identifier_start: '[[:alpha:]_]'

  regex_modifier: '[eimsuxADJSUX]*'
  sql_indicator: |-
    (?x: \s* (?:
    # dml statements
      SELECT | INSERT | REPLACE | DELETE | TRUNCATE | UPDATE | MERGE\s+INTO
    # ddl statements
    | ADD | ALTER | CREATE | DROP
    # conditional
    | IF \s+ (?: NOT \s+ )? EXISTS
    # declaration
    | DECLARE | WITH | BEGIN
    ) \s )

  # A pattern which terminates an incomplete expression at any point.
  # `\?>` is for fixing one-liner ( https://github.com/sublimehq/Packages/issues/1545 )
  expression_end: (?=[;{}]|\?>|:(?!:)|{{keywords}})

  heredoc_quoted_end: (?=^\s*\4\b)
  heredoc_unquoted_end: (?=^\s*\2\b)

  # no odd number of backslashes behind (`\` or `\\\`)
  # note:
  #  1. For use in `escape` commands only !!
  #  2. ST's Regex Compatibility Check marks it as incompatible
  #     as the real usage of the variable is not checked.
  #     It's a false positive as long as (1.) is respected.
  no_escape_behind: (?<![^\\]\\)(?<![^\\][\\]{3})

  reserved: |-
    (?xi:
      {{keywords}}
    | {{builtin_functions}}
    | {{include_directives}}
    | {{logical_operators}}
    | {{storage_keywords}}
    | {{storage_modifiers}}
    | {{storage_types}}
    | {{class_modifier}}
    | {{static_modifier}}
    | {{builtin_variables}}
    | function\b
    | as\b
    | yield\b
    )

  keywords: |-
    (?xi:
      {{control_keywords}}
    | {{flow_keywords}}
    | {{declaration_keywords}}
    | {{access_modifier}}
    | {{global_modifier}}
    )

  # Statement Level Keywords
  declaration_keywords: |-
    (?xi: class | const | declare | enddeclare | interface | namespace | trait | use | var )\b
  control_keywords: |-
    (?xi: case | catch | default | do | (?: end )? (?: for(?:each)? | if | switch | while )
    | else | elseif | finally | switch | try )\b
  flow_keywords: |-
    (?xi: break | continue | die | exit | finally | goto | return | throw )\b

  # Expression Level Keywords
  builtin_functions: |-
    (?xi: echo | print | empty | eval | isset | list | unset )\b
  builtin_variables: |-
    (?xi: parent | self )\b
  include_directives: |-
    (?xi: (?: include | require )(?: _once )? )\b
  logical_operators: |-
    (?xi: and | or | xor )\b
  storage_keywords: |-
    (?xi: clone | new | instanceof | insteadof )\b

  # Storage Modifiers
  access_modifier: |-
    (?xi: public | private | protected )\b
  class_modifier: |-
    (?xi: extends | implements )\b
  global_modifier: |-
    (?xi: global )\b
  storage_modifiers: |-
    (?xi: abstract | final | readonly )\b
  constructor_modifier: |-
    (?xi: readonly )\b
  function_modifier: |-
    (?xi: abstract | final )\b
  property_modifier: |-
    (?xi: readonly )\b
  static_modifier: |-
    (?xi: static(?!::) )\b

  # Storage Types
  storage_types: |-
    (?xi: array | bool(?:ean)? | callable | double | float | real | int(?:eger)?
    | object | string )\b

  builtin_classes: |-
    (?xi:
      AMQPConnection | AMQPExchange | AMQPQueue | APCIterator | AppendIterator | ArgumentCountError
    | ArithmeticError | ArrayAccess | ArrayIterator | ArrayObject | AssertionError | Attribute
    | BackedEnum | BadFunctionCallException | BadMethodCallException | CachingIterator | Collator
    | CompileError | Countable | CURLFile | CURLStringFile | DateInterval | DatePeriod | DateTime
    | DateTimeImmutable | DateTimeInterface | DateTimeZone | DirectoryIterator
    | DivisionByZeroError | DOMAttr | DOMAttribute | DOMCharacterData | DOMComment | DOMDocument
    | DOMDocumentFragment | DOMDocumentType | DOMElement | DOMEntityReference | DOMImplementation
    | DOMNamedNodeMap | DOMNode | DOMNodelist | DOMProcessingInstruction | DOMText | DOMXPath
    | DOMXsltStylesheet | DomainException | EmptyIterator | Error | ErrorException | Exception
    | Fiber | FiberError | FiberExit | FilesystemIterator | FilterIterator | GlobIterator | Gmagick
    | GmagickDraw | GmagickPixel | HaruAnnotation | HaruDestination | HaruDoc | HaruEncoder
    | HaruFont | HaruImage | HaruOutline | HaruPage | HttpDeflateStream | HttpInflateStream
    | HttpMessage | HttpQueryString | HttpRequest | HttpRequestPool | HttpResponse | Imagick
    | ImagickDraw | ImagickPixel | ImagickPixelIterator | InfiniteIterator | InternalIterator
    | IntlDateFormatter | InvalidArgumentException | Iterator | IteratorAggregate
    | IteratorIterator | JsonException | JsonSerializable | KTaglib_ID3v2_AttachedPictureFrame
    | KTaglib_ID3v2_Frame | KTaglib_ID3v2_Tag | KTaglib_MPEG_AudioProperties | KTaglib_MPEG_File
    | KTaglib_Tag | LengthException | LimitIterator | Locale | LogicException | Memcache
    | Memcached | MessageFormatter | Mongo | MongoBinData | MongoCode | MongoCollection
    | MongoCursor | MongoDB | MongoDBRef | MongoDate | MongoGridFS | MongoGridFSCursor
    | MongoGridFSFile | MongoGridfsFile | MongoId | MongoInt32 | MongoInt64 | MongoRegex
    | MongoTimestamp | MultipleIterator | NoRewindIterator | Normalizer | NumberFormatter
    | OCI-Collection | OCI-Lob | OutOfBoundsException | OutOfRangeException | OuterIterator
    | OverflowException | Override | PDO | PDOStatement | ParentIterator | ParseError | Phar
    | PharData | PharFileInfo  | PhpCompilerAttribute | PhpToken | RRDCreator | RRDGraph
    | RRDUpdater | RangeException | RecursiveArrayIterator | RecursiveCachingIterator
    | RecursiveDirectoryIterator | RecursiveFilterIterator | RecursiveIterator
    | RecursiveIteratorIterator | RecursiveRegexIterator | RecursiveTreeIterator | Reflection
    | ReflectionClass | ReflectionEnum | ReflectionEnumBackedCase | ReflectionEnumUnitCase
    | ReflectionExtension | ReflectionFiber | ReflectionFunction | ReflectionFunctionAbstract
    | ReflectionMethod | ReflectionObject | ReflectionParameter | ReflectionProperty | Reflector
    | RegexIterator | ResourceBundle | RuntimeException | SAMConnection | SAMMessage | SCA
    | SCA_LocalProxy | SCA_SoapProxy | SDO_DAS_ChangeSummary | SDO_DAS_DataFactory
    | SDO_DAS_DataObject | SDO_DAS_Relational | SDO_DAS_Setting | SDO_DAS_XML
    | SDO_DAS_XML_Document | SDO_DataFactory | SDO_DataObject | SDO_Exception | SDO_List
    | SDO_Model_Property | SDO_Model_ReflectionDataObject | SDO_Model_Type | SDO_Sequence | SNMP
    | SQLite3 | SQLite3Result | SQLite3Stmt | SQLiteDatabase | SQLiteResult | SQLiteUnbuffered
    | SVM | SVMModel | SeekableIterator | Serializable | SimpleXMLElement | SimpleXMLIterator
    | SoapClient | SoapFault | SoapHeader | SoapParam | SoapServer | SoapVar | SphinxClient
    | SplBool | SplDoublyLinkedList | SplEnum | SplFileInfo | SplFileObject | SplFixedArray
    | SplFloat | SplHeap | SplInt | SplMaxHeap | SplMinHeap | SplObjectStorage | SplObserver
    | SplPriorityQueue | SplQueue | SplStack | SplString | SplSubject | SplTempFileObject
    | Stringable | Swish | SwishResult | SwishResults | SwishSearch | TokyoTyrant
    | TokyoTyrantQuery | TokyoTyrantTable | Transliterator | Traversable | TypeError
    | UnderflowException | UnexpectedValueException | UnhandledMatchError | UnitEnum | V8Js
    | V8JsException | ValueError | WeakMap | WeakReference | XMLReader | XMLWriter | XSLTProcessor
    | ZipArchive | finfo | mysqli | mysqli_driver | mysqli_result | mysqli_stmt | mysqli_warning
    | stdClass | streamWrapper | tidy | tidyNode
    )\b

  builtin_global_variables: |-
    (?x: _COOKIE | _ENV | _FILES | _GET | _POST | _REQUEST | _SERVER | _SESSION
    | GLOBALS | argc | argv )\b

  constants_core: |-
    (?x:
      DEFAULT_INCLUDE_PATH | E_ALL | E_COMPILE_ERROR | E_COMPILE_WARNING | E_CORE_ERROR
    | E_CORE_WARNING | E_DEPRECATED | E_ERROR | E_NOTICE | E_PARSE | E_RECOVERABLE_ERROR
    | E_STRICT | E_USER_DEPRECATED | E_USER_ERROR | E_USER_NOTICE | E_USER_WARNING | E_WARNING
    | MT_RAND_PHP | PEAR_EXTENSION_DIR | PEAR_INSTALL_DIR | PHP_BINDIR | PHP_CONFIG_FILE_PATH
    | PHP_CONFIG_FILE_SCAN_DIR | PHP_DATADIR | PHP_DEBUG | PHP_EOL | PHP_EXTENSION_DIR
    | PHP_EXTRA_VERSION | PHP_FD_SETSIZE | PHP_FLOAT_DIG | PHP_FLOAT_EPSILON | PHP_FLOAT_MAX
    | PHP_FLOAT_MIN | PHP_INT_MAX | PHP_INT_MIN | PHP_INT_SIZE | PHP_LIBDIR | PHP_LOCALSTATEDIR
    | PHP_MAJOR_VERSION | PHP_MAXPATHLEN | PHP_MINOR_VERSION | PHP_OS | PHP_OS_FAMILY
    | PHP_OUTPUT_HANDLER_CONT | PHP_OUTPUT_HANDLER_END | PHP_OUTPUT_HANDLER_START | PHP_PREFIX
    | PHP_QUERY_RFC1738 | PHP_QUERY_RFC3986 | PHP_RELEASE_VERSION | PHP_ROUND_HALF_DOWN
    | PHP_ROUND_HALF_EVEN | PHP_ROUND_HALF_ODD | PHP_ROUND_HALF_UP | PHP_SAPI
    | PHP_SHLIB_SUFFIX | PHP_SYSCONFDIR | PHP_URL_FRAGMENT | PHP_URL_HOST | PHP_URL_PASS
    | PHP_URL_PATH | PHP_URL_PORT | PHP_URL_QUERY | PHP_URL_SCHEME | PHP_URL_USER | PHP_VERSION
    | PHP_VERSION_ID | PHP_WINDOWS_NT_DOMAIN_CONTROLLER | PHP_WINDOWS_NT_SERVER
    | PHP_WINDOWS_NT_WORKSTATION | PHP_WINDOWS_VERSION_BUILD | PHP_WINDOWS_VERSION_MAJOR
    | PHP_WINDOWS_VERSION_MINOR | PHP_WINDOWS_VERSION_PLATFORM
    | PHP_WINDOWS_VERSION_PRODUCTTYPE | PHP_WINDOWS_VERSION_SP_MAJOR
    | PHP_WINDOWS_VERSION_SP_MINOR | PHP_WINDOWS_VERSION_SUITEMASK | PHP_ZTS | STDERR | STDIN
    | STDOUT | ZEND_DEBUG_BUILD | ZEND_THREAD_SAFE
    )\b

  constants_std: |-
    (?x:
      ABDAY_[1-7] | ABMON_(?:[1-9]|1[0-2]) | ALT_DIGITS | AM_STR | ASSERT_ACTIVE | ASSERT_BAIL
    | ASSERT_CALLBACK | ASSERT_QUIET_EVAL | ASSERT_WARNING | CASE_LOWER | CASE_UPPER | CHAR_MAX
    | CODESET | CONNECTION_ABORTED | CONNECTION_NORMAL | CONNECTION_TIMEOUT | COUNT_NORMAL
    | COUNT_RECURSIVE | CREDITS_ALL | CREDITS_DOCS | CREDITS_FULLPAGE | CREDITS_GENERAL
    | CREDITS_GROUP | CREDITS_MODULES | CREDITS_QA | CREDITS_SAPI | CRNCYSTR | CRYPT_BLOWFISH
    | CRYPT_EXT_DES | CRYPT_MD5 | CRYPT_SALT_LENGTH | CRYPT_SHA256 | CRYPT_SHA512
    | CRYPT_STD_DES | CURRENCY_SYMBOL | DATE_ATOM | DATE_COOKIE | DATE_ISO8601 | DATE_RFC1036
    | DATE_RFC1123 | DATE_RFC2822 | DATE_RFC3339 | DATE_RFC822 | DATE_RFC850 | DATE_RSS
    | DATE_W3C | DAY_([1-7]) | DECIMAL_POINT | DIRECTORY_SEPARATOR | D_FMT | D_T_FMT
    | ENT_COMPAT | ENT_IGNORE | ENT_NOQUOTES | ENT_QUOTES | ERA | ERA_D_FMT | ERA_D_T_FMT
    | ERA_T_FMT | ERA_YEAR | EXTR_IF_EXISTS | EXTR_OVERWRITE | EXTR_PREFIX_ALL
    | EXTR_PREFIX_IF_EXISTS | EXTR_PREFIX_INVALID | EXTR_PREFIX_SAME | EXTR_REFS | EXTR_SKIP
    | FRAC_DIGITS | GROUPING | HASH_HMAC | HTML_ENTITIES | HTML_SPECIALCHARS | INF | INFO_ALL
    | INFO_CONFIGURATION | INFO_CREDITS | INFO_ENVIRONMENT | INFO_GENERAL | INFO_LICENSE
    | INFO_MODULES | INFO_VARIABLES | INI_ALL | INI_PERDIR | INI_SCANNER_NORMAL
    | INI_SCANNER_RAW | INI_SYSTEM | INI_USER | INT_CURR_SYMBOL | INT_FRAC_DIGITS | LC_ALL
    | LC_COLLATE | LC_CTYPE | LC_MESSAGES | LC_MONETARY | LC_NUMERIC | LC_TIME | LOCK_EX
    | LOCK_NB | LOCK_SH | LOCK_UN | LOG_ALERT | LOG_AUTH | LOG_AUTHPRIV | LOG_CONS | LOG_CRIT
    | LOG_CRON | LOG_DAEMON | LOG_DEBUG | LOG_EMERG | LOG_ERR | LOG_INFO | LOG_KERN
    | LOG_LOCAL0 | LOG_LOCAL1 | LOG_LOCAL2 | LOG_LOCAL3 | LOG_LOCAL4 | LOG_LOCAL5 | LOG_LOCAL6
    | LOG_LOCAL7 | LOG_LPR | LOG_MAIL | LOG_NDELAY | LOG_NEWS | LOG_NOTICE | LOG_NOWAIT
    | LOG_ODELAY | LOG_PERROR | LOG_PID | LOG_SYSLOG | LOG_USER | LOG_UUCP | LOG_WARNING
    | MON_(?:[1-9]|1[0-2]) | MON_DECIMAL_POINT | MON_GROUPING | MON_THOUSANDS_SEP | M_1_PI
    | M_2_PI | M_2_SQRTPI | M_E | M_EULER | M_LN10 | M_LN2 | M_LNPI | M_LOG10E | M_LOG2E | M_PI
    | M_PI_2 | M_PI_4 | M_SQRT1_2 | M_SQRT2 | M_SQRT3 | M_SQRTPI | NAN | NEGATIVE_SIGN | NOEXPR
    | NOSTR | N_CS_PRECEDES | N_SEP_BY_SPACE | N_SIGN_POSN | PATHINFO_BASENAME
    | PATHINFO_DIRNAME | PATHINFO_EXTENSION | PATHINFO_FILENAME | PATH_SEPARATOR | PM_STR
    | POSITIVE_SIGN | P_CS_PRECEDES | P_SEP_BY_SPACE | P_SIGN_POSN | RADIXCHAR | SEEK_CUR
    | SEEK_END | SEEK_SET | SORT_ASC | SORT_DESC | SORT_FLAG_CASE | SORT_LOCALE_STRING
    | SORT_NATURAL | SORT_NUMERIC | SORT_REGULAR | SORT_STRING | STR_PAD_BOTH | STR_PAD_LEFT
    | STR_PAD_RIGHT | THOUSANDS_SEP | THOUSEP | T_FMT | T_FMT_AMPM | UPLOAD_ERR_CANT_WRITE
    | UPLOAD_ERR_EXTENSION | UPLOAD_ERR_FORM_SIZE | UPLOAD_ERR_INI_SIZE | UPLOAD_ERR_NO_FILE
    | UPLOAD_ERR_NO_TMP_DIR | UPLOAD_ERR_OK | UPLOAD_ERR_PARTIAL | YESEXPR | YESSTR
    | __COMPILER_HALT_OFFSET__
    )\b

  constants_ext: |-
    (?x:
      CURLAUTH_ANY | CURLAUTH_ANYSAFE | CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE
    | CURLAUTH_NTLM | CURLCLOSEPOLICY_CALLBACK | CURLCLOSEPOLICY_LEAST_RECENTLY_USED
    | CURLCLOSEPOLICY_LEAST_TRAFFIC | CURLCLOSEPOLICY_OLDEST | CURLCLOSEPOLICY_SLOWEST
    | CURLE_ABORTED_BY_CALLBACK | CURLE_BAD_CALLING_ORDER | CURLE_BAD_CONTENT_ENCODING
    | CURLE_BAD_FUNCTION_ARGUMENT | CURLE_BAD_PASSWORD_ENTERED | CURLE_COULDNT_CONNECT
    | CURLE_COULDNT_RESOLVE_HOST | CURLE_COULDNT_RESOLVE_PROXY | CURLE_FAILED_INIT
    | CURLE_FILESIZE_EXCEEDED | CURLE_FILE_COULDNT_READ_FILE | CURLE_FTP_ACCESS_DENIED
    | CURLE_FTP_BAD_DOWNLOAD_RESUME | CURLE_FTP_CANT_GET_HOST | CURLE_FTP_CANT_RECONNECT
    | CURLE_FTP_COULDNT_GET_SIZE | CURLE_FTP_COULDNT_RETR_FILE | CURLE_FTP_COULDNT_SET_ASCII
    | CURLE_FTP_COULDNT_SET_BINARY | CURLE_FTP_COULDNT_STOR_FILE | CURLE_FTP_COULDNT_USE_REST
    | CURLE_FTP_PORT_FAILED | CURLE_FTP_QUOTE_ERROR | CURLE_FTP_SSL_FAILED
    | CURLE_FTP_USER_PASSWORD_INCORRECT | CURLE_FTP_WEIRD_227_FORMAT
    | CURLE_FTP_WEIRD_PASS_REPLY | CURLE_FTP_WEIRD_PASV_REPLY | CURLE_FTP_WEIRD_SERVER_REPLY
    | CURLE_FTP_WEIRD_USER_REPLY | CURLE_FTP_WRITE_ERROR | CURLE_FUNCTION_NOT_FOUND
    | CURLE_GOT_NOTHING | CURLE_HTTP_NOT_FOUND | CURLE_HTTP_PORT_FAILED | CURLE_HTTP_POST_ERROR
    | CURLE_HTTP_RANGE_ERROR | CURLE_LDAP_CANNOT_BIND | CURLE_LDAP_INVALID_URL
    | CURLE_LDAP_SEARCH_FAILED | CURLE_LIBRARY_NOT_FOUND | CURLE_MALFORMAT_USER
    | CURLE_OBSOLETE | CURLE_OK | CURLE_OPERATION_TIMEOUTED | CURLE_OUT_OF_MEMORY
    | CURLE_PARTIAL_FILE | CURLE_READ_ERROR | CURLE_RECV_ERROR | CURLE_SEND_ERROR
    | CURLE_SHARE_IN_USE | CURLE_SSH | CURLE_SSL_CACERT | CURLE_SSL_CERTPROBLEM
    | CURLE_SSL_CIPHER | CURLE_SSL_CONNECT_ERROR | CURLE_SSL_ENGINE_NOTFOUND
    | CURLE_SSL_ENGINE_SETFAILED | CURLE_SSL_PEER_CERTIFICATE | CURLE_TELNET_OPTION_SYNTAX
    | CURLE_TOO_MANY_REDIRECTS | CURLE_UNKNOWN_TELNET_OPTION | CURLE_UNSUPPORTED_PROTOCOL
    | CURLE_URL_MALFORMAT | CURLE_URL_MALFORMAT_USER | CURLE_WRITE_ERROR | CURLFTPAUTH_DEFAULT
    | CURLFTPAUTH_SSL | CURLFTPAUTH_TLS | CURLFTPMETHOD_MULTICWD | CURLFTPMETHOD_NOCWD
    | CURLFTPMETHOD_SINGLECWD | CURLFTPSSL_ALL | CURLFTPSSL_CONTROL | CURLFTPSSL_NONE
    | CURLFTPSSL_TRY | CURLINFO_CERTINFO | CURLINFO_CONNECT_TIME
    | CURLINFO_CONTENT_LENGTH_DOWNLOAD | CURLINFO_CONTENT_LENGTH_UPLOAD | CURLINFO_CONTENT_TYPE
    | CURLINFO_EFFECTIVE_URL | CURLINFO_FILETIME | CURLINFO_HEADER_OUT | CURLINFO_HEADER_SIZE
    | CURLINFO_HTTP_CODE | CURLINFO_NAMELOOKUP_TIME | CURLINFO_PRETRANSFER_TIME
    | CURLINFO_PRIVATE | CURLINFO_REDIRECT_COUNT | CURLINFO_REDIRECT_TIME
    | CURLINFO_REQUEST_SIZE | CURLINFO_SIZE_DOWNLOAD | CURLINFO_SIZE_UPLOAD
    | CURLINFO_SPEED_DOWNLOAD | CURLINFO_SPEED_UPLOAD | CURLINFO_SSL_VERIFYRESULT
    | CURLINFO_STARTTRANSFER_TIME | CURLINFO_TOTAL_TIME | CURLMOPT_PUSHFUNCTION | CURLMSG_DONE
    | CURLM_BAD_EASY_HANDLE | CURLM_BAD_HANDLE | CURLM_CALL_MULTI_PERFORM
    | CURLM_INTERNAL_ERROR | CURLM_OK | CURLM_OUT_OF_MEMORY | CURLOPT_AUTOREFERER
    | CURLOPT_BINARYTRANSFER | CURLOPT_BUFFERSIZE | CURLOPT_CAINFO | CURLOPT_CAPATH
    | CURLOPT_CERTINFO | CURLOPT_CLOSEPOLICY | CURLOPT_CONNECTTIMEOUT
    | CURLOPT_CONNECTTIMEOUT_MS | CURLOPT_COOKIE | CURLOPT_COOKIEFILE | CURLOPT_COOKIEJAR
    | CURLOPT_COOKIESESSION | CURLOPT_CRLF | CURLOPT_CUSTOMREQUEST | CURLOPT_DNS_CACHE_TIMEOUT
    | CURLOPT_DNS_USE_GLOBAL_CACHE | CURLOPT_EGDSOCKET | CURLOPT_ENCODING
    | CURLOPT_FAILONERROR | CURLOPT_FILE | CURLOPT_FILETIME | CURLOPT_FOLLOWLOCATION
    | CURLOPT_FORBID_REUSE | CURLOPT_FRESH_CONNECT | CURLOPT_FTPAPPEND | CURLOPT_FTPLISTONLY
    | CURLOPT_FTPPORT | CURLOPT_FTPSSLAUTH | CURLOPT_FTP_CREATE_MISSING_DIRS
    | CURLOPT_FTP_FILEMETHOD | CURLOPT_FTP_SKIP_PASV_IP | CURLOPT_FTP_SSL
    | CURLOPT_FTP_USE_EPRT | CURLOPT_FTP_USE_EPSV | CURLOPT_HEADER | CURLOPT_HEADERFUNCTION
    | CURLOPT_HTTP200ALIASES | CURLOPT_HTTPAUTH | CURLOPT_HTTPGET | CURLOPT_HTTPHEADER
    | CURLOPT_HTTPPROXYTUNNEL | CURLOPT_HTTP_VERSION | CURLOPT_INFILE | CURLOPT_INFILESIZE
    | CURLOPT_INTERFACE | CURLOPT_IPRESOLVE | CURLOPT_KEYPASSWD | CURLOPT_KRB4LEVEL
    | CURLOPT_LOW_SPEED_LIMIT | CURLOPT_LOW_SPEED_TIME | CURLOPT_MAXCONNECTS
    | CURLOPT_MAXREDIRS | CURLOPT_NETRC | CURLOPT_NOBODY | CURLOPT_NOPROGRESS
    | CURLOPT_NOSIGNAL | CURLOPT_PORT | CURLOPT_POST | CURLOPT_POSTFIELDS | CURLOPT_POSTQUOTE
    | CURLOPT_POSTREDIR | CURLOPT_PRIVATE | CURLOPT_PROGRESSFUNCTION | CURLOPT_PROTOCOLS
    | CURLOPT_PROXY | CURLOPT_PROXYAUTH | CURLOPT_PROXYPORT | CURLOPT_PROXYTYPE
    | CURLOPT_PROXYUSERPWD | CURLOPT_PUT | CURLOPT_QUOTE | CURLOPT_RANDOM_FILE | CURLOPT_RANGE
    | CURLOPT_READDATA | CURLOPT_READFUNCTION | CURLOPT_REDIR_PROTOCOLS | CURLOPT_REFERER
    | CURLOPT_RESUME_FROM | CURLOPT_RETURNTRANSFER | CURLOPT_SSH_AUTH_TYPES
    | CURLOPT_SSH_HOST_PUBLIC_KEY_MD5 | CURLOPT_SSH_PRIVATE_KEYFILE
    | CURLOPT_SSH_PUBLIC_KEYFILE | CURLOPT_SSLCERT | CURLOPT_SSLCERTPASSWD
    | CURLOPT_SSLCERTTYPE | CURLOPT_SSLENGINE | CURLOPT_SSLENGINE_DEFAULT | CURLOPT_SSLKEY
    | CURLOPT_SSLKEYPASSWD | CURLOPT_SSLKEYTYPE | CURLOPT_SSLVERSION | CURLOPT_SSL_CIPHER_LIST
    | CURLOPT_SSL_VERIFYHOST | CURLOPT_SSL_VERIFYPEER | CURLOPT_STDERR | CURLOPT_TCP_NODELAY
    | CURLOPT_TIMECONDITION | CURLOPT_TIMEOUT | CURLOPT_TIMEOUT_MS | CURLOPT_TIMEVALUE
    | CURLOPT_TRANSFERTEXT | CURLOPT_UNRESTRICTED_AUTH | CURLOPT_UPLOAD | CURLOPT_URL
    | CURLOPT_USERAGENT | CURLOPT_USERPWD | CURLOPT_VERBOSE | CURLOPT_WRITEFUNCTION
    | CURLOPT_WRITEHEADER | CURLPROTO_ALL | CURLPROTO_DICT | CURLPROTO_FILE | CURLPROTO_FTP
    | CURLPROTO_FTPS | CURLPROTO_HTTP | CURLPROTO_HTTPS | CURLPROTO_LDAP | CURLPROTO_LDAPS
    | CURLPROTO_SCP | CURLPROTO_SFTP | CURLPROTO_TELNET | CURLPROTO_TFTP | CURLPROXY_HTTP
    | CURLPROXY_SOCKS4 | CURLPROXY_SOCKS5 | CURLSSH_AUTH_DEFAULT | CURLSSH_AUTH_HOST
    | CURLSSH_AUTH_KEYBOARD | CURLSSH_AUTH_NONE | CURLSSH_AUTH_PASSWORD
    | CURLSSH_AUTH_PUBLICKEY | CURLVERSION_NOW | CURL_HTTP_VERSION_1_0 | CURL_HTTP_VERSION_1_1
    | CURL_HTTP_VERSION_NONE | CURL_IPRESOLVE_V4 | CURL_IPRESOLVE_V6
    | CURL_IPRESOLVE_WHATEVER | CURL_NETRC_IGNORED | CURL_NETRC_OPTIONAL | CURL_NETRC_REQUIRED
    | CURL_PUSH_DENY | CURL_PUSH_OK | CURL_TIMECOND_IFMODSINCE | CURL_TIMECOND_IFUNMODSINCE
    | CURL_TIMECOND_LASTMOD | CURL_VERSION_IPV6 | CURL_VERSION_KERBEROS4 | CURL_VERSION_LIBZ
    | CURL_VERSION_SSL | DNS_A | DNS_A6 | DNS_AAAA | DNS_ALL | DNS_ANY | DNS_CAA | DNS_CNAME
    | DNS_HINFO | DNS_MX | DNS_NAPTR | DNS_NS | DNS_PTR | DNS_SOA | DNS_SRV | DNS_TXT
    | DOMSTRING_SIZE_ERR | DOM_HIERARCHY_REQUEST_ERR | DOM_INDEX_SIZE_ERR
    | DOM_INUSE_ATTRIBUTE_ERR | DOM_INVALID_ACCESS_ERR | DOM_INVALID_CHARACTER_ERR
    | DOM_INVALID_MODIFICATION_ERR | DOM_INVALID_STATE_ERR | DOM_NAMESPACE_ERR
    | DOM_NOT_FOUND_ERR | DOM_NOT_SUPPORTED_ERR | DOM_NO_DATA_ALLOWED_ERR
    | DOM_NO_MODIFICATION_ALLOWED_ERR | DOM_PHP_ERR | DOM_SYNTAX_ERR | DOM_VALIDATION_ERR
    | DOM_WRONG_DOCUMENT_ERR | FILEINFO_CONTINUE | FILEINFO_DEVICES | FILEINFO_MIME
    | FILEINFO_MIME_ENCODING | FILEINFO_MIME_TYPE | FILEINFO_NONE | FILEINFO_PRESERVE_ATIME
    | FILEINFO_RAW | FILEINFO_SYMLINK | FILE_APPEND | FILE_BINARY | FILE_IGNORE_NEW_LINES
    | FILE_NO_DEFAULT_CONTEXT | FILE_SKIP_EMPTY_LINES | FILE_TEXT | FILE_USE_INCLUDE_PATH
    | FILTER_CALLBACK | FILTER_DEFAULT | FILTER_FLAG_ALLOW_FRACTION | FILTER_FLAG_ALLOW_HEX
    | FILTER_FLAG_ALLOW_OCTAL | FILTER_FLAG_ALLOW_SCIENTIFIC | FILTER_FLAG_ALLOW_THOUSAND
    | FILTER_FLAG_EMAIL_UNICODE | FILTER_FLAG_EMPTY_STRING_NULL | FILTER_FLAG_ENCODE_AMP
    | FILTER_FLAG_ENCODE_HIGH | FILTER_FLAG_ENCODE_LOW | FILTER_FLAG_HOST_REQUIRED
    | FILTER_FLAG_IPV4 | FILTER_FLAG_IPV6 | FILTER_FLAG_NONE | FILTER_FLAG_NO_ENCODE_QUOTES
    | FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE | FILTER_FLAG_PATH_REQUIRED
    | FILTER_FLAG_QUERY_REQUIRED | FILTER_FLAG_SCHEME_REQUIRED | FILTER_FLAG_STRIP_BACKTICK
    | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_LOW | FILTER_FORCE_ARRAY
    | FILTER_NULL_ON_FAILURE | FILTER_REQUIRE_ARRAY | FILTER_REQUIRE_SCALAR
    | FILTER_SANITIZE_EMAIL | FILTER_SANITIZE_ENCODED | FILTER_SANITIZE_FULL_SPECIAL_CHARS
    | FILTER_SANITIZE_MAGIC_QUOTES | FILTER_SANITIZE_NUMBER_FLOAT | FILTER_SANITIZE_NUMBER_INT
    | FILTER_SANITIZE_SPECIAL_CHARS | FILTER_SANITIZE_STRING | FILTER_SANITIZE_STRIPPED
    | FILTER_SANITIZE_URL | FILTER_UNSAFE_RAW | FILTER_VALIDATE_BOOL | FILTER_VALIDATE_BOOLEAN
    | FILTER_VALIDATE_EMAIL | FILTER_VALIDATE_FLOAT | FILTER_VALIDATE_INT
    | FILTER_VALIDATE_IP | FILTER_VALIDATE_REGEXP | FILTER_VALIDATE_URL | FNM_CASEFOLD
    | FNM_NOESCAPE | FNM_PATHNAME | FNM_PERIOD | FORCE_DEFLATE | FORCE_GZIP
    | GLOB_AVAILABLE_FLAGS | GLOB_BRACE | GLOB_ERR | GLOB_MARK | GLOB_NOCHECK | GLOB_NOESCAPE
    | GLOB_NOSORT | GLOB_ONLYDIR | ICONV_IMPL | ICONV_MIME_DECODE_CONTINUE_ON_ERROR
    | ICONV_MIME_DECODE_STRICT | ICONV_VERSION | IMAGETYPE_BMP | IMAGETYPE_COUNT
    | IMAGETYPE_GIF | IMAGETYPE_ICO | IMAGETYPE_IFF | IMAGETYPE_JB2 | IMAGETYPE_JP2
    | IMAGETYPE_JPC | IMAGETYPE_JPEG | IMAGETYPE_JPEG2000 | IMAGETYPE_JPX | IMAGETYPE_PNG
    | IMAGETYPE_PSD | IMAGETYPE_SWC | IMAGETYPE_SWF | IMAGETYPE_TIFF_II | IMAGETYPE_TIFF_MM
    | IMAGETYPE_UNKNOWN | IMAGETYPE_WBMP | IMAGETYPE_WEBP | IMAGETYPE_XBM | INPUT_COOKIE
    | INPUT_ENV | INPUT_GET | INPUT_POST | INPUT_REQUEST | INPUT_SERVER | INPUT_SESSION
    | JSON_BIGINT_AS_STRING | JSON_ERROR_CTRL_CHAR | JSON_ERROR_DEPTH | JSON_ERROR_INF_OR_NAN
    | JSON_ERROR_INVALID_PROPERTY_NAME | JSON_ERROR_NONE | JSON_ERROR_RECURSION
    | JSON_ERROR_STATE_MISMATCH | JSON_ERROR_SYNTAX | JSON_ERROR_UNSUPPORTED_TYPE
    | JSON_ERROR_UTF16 | JSON_ERROR_UTF8 | JSON_FORCE_OBJECT | JSON_HEX_AMP | JSON_HEX_APOS
    | JSON_HEX_QUOT | JSON_HEX_TAG | JSON_INVALID_UTF8_IGNORE | JSON_INVALID_UTF8_SUBSTITUTE
    | JSON_NUMERIC_CHECK | JSON_OBJECT_AS_ARRAY | JSON_PARTIAL_OUTPUT_ON_ERROR
    | JSON_PRESERVE_ZERO_FRACTION | JSON_PRETTY_PRINT | JSON_THROW_ON_ERROR
    | JSON_UNESCAPED_LINE_TERMINATORS | JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE
    | LIBXML_BIGLINES | LIBXML_COMPACT | LIBXML_DOTTED_VERSION | LIBXML_DTDATTR
    | LIBXML_DTDLOAD | LIBXML_DTDVALID | LIBXML_ERR_ERROR | LIBXML_ERR_FATAL | LIBXML_ERR_NONE
    | LIBXML_ERR_WARNING | LIBXML_LOADED_VERSION | LIBXML_NOBLANKS | LIBXML_NOCDATA
    | LIBXML_NOEMPTYTAG | LIBXML_NOENT | LIBXML_NOERROR | LIBXML_NONET | LIBXML_NOWARNING
    | LIBXML_NOXMLDECL | LIBXML_NSCLEAN | LIBXML_PARSEHUGE | LIBXML_VERSION | LIBXML_XINCLUDE
    | MCRYPT_3DES | MCRYPT_ARCFOUR | MCRYPT_ARCFOUR_IV | MCRYPT_BLOWFISH
    | MCRYPT_BLOWFISH_COMPAT | MCRYPT_CAST_128 | MCRYPT_CAST_256 | MCRYPT_CRYPT
    | MCRYPT_DECRYPT | MCRYPT_DES | MCRYPT_DEV_RANDOM | MCRYPT_DEV_URANDOM | MCRYPT_ENCRYPT
    | MCRYPT_ENIGNA | MCRYPT_GOST | MCRYPT_IDEA | MCRYPT_LOKI97 | MCRYPT_MARS | MCRYPT_MODE_CBC
    | MCRYPT_MODE_CFB | MCRYPT_MODE_ECB | MCRYPT_MODE_NOFB | MCRYPT_MODE_OFB
    | MCRYPT_MODE_STREAM | MCRYPT_PANAMA | MCRYPT_RAND | MCRYPT_RC2 | MCRYPT_RC6
    | MCRYPT_RIJNDAEL_128 | MCRYPT_RIJNDAEL_192 | MCRYPT_RIJNDAEL_256 | MCRYPT_SAFER128
    | MCRYPT_SAFER64 | MCRYPT_SAFERPLUS | MCRYPT_SERPENT | MCRYPT_SKIPJACK | MCRYPT_THREEWAY
    | MCRYPT_TRIPLEDES | MCRYPT_TWOFISH | MCRYPT_WAKE | MCRYPT_XTEA | MHASH_ADLER32
    | MHASH_CRC32 | MHASH_CRC32B | MHASH_GOST | MHASH_HAVAL128 | MHASH_HAVAL160
    | MHASH_HAVAL192 | MHASH_HAVAL224 | MHASH_HAVAL256 | MHASH_MD2 | MHASH_MD4 | MHASH_MD5
    | MHASH_RIPEMD128 | MHASH_RIPEMD160 | MHASH_RIPEMD256 | MHASH_RIPEMD320 | MHASH_SHA1
    | MHASH_SHA224 | MHASH_SHA256 | MHASH_SHA384 | MHASH_SHA512 | MHASH_SNEFRU256 | MHASH_TIGER
    | MHASH_TIGER128 | MHASH_TIGER160 | MHASH_WHIRLPOOL | MYSQLI_ASSOC | MYSQLI_ASYNC
    | MYSQLI_AUTO_INCREMENT_FLAG | MYSQLI_BINARY_FLAG | MYSQLI_BLOB_FLAG | MYSQLI_BOTH
    | MYSQLI_CLIENT_COMPRESS | MYSQLI_CLIENT_FOUND_ROWS | MYSQLI_CLIENT_IGNORE_SPACE
    | MYSQLI_CLIENT_INTERACTIVE | MYSQLI_CLIENT_NO_SCHEMA | MYSQLI_CLIENT_SSL
    | MYSQLI_CURSOR_TYPE_FOR_UPDATE | MYSQLI_CURSOR_TYPE_NO_CURSOR
    | MYSQLI_CURSOR_TYPE_READ_ONLY | MYSQLI_CURSOR_TYPE_SCROLLABLE | MYSQLI_DATA_TRUNCATED
    | MYSQLI_DEBUG_TRACE_ENABLED | MYSQLI_ENUM_FLAG | MYSQLI_GROUP_FLAG | MYSQLI_INIT_COMMAND
    | MYSQLI_MULTIPLE_KEY_FLAG | MYSQLI_NOT_NULL_FLAG | MYSQLI_NO_DATA
    | MYSQLI_NO_DEFAULT_VALUE_FLAG | MYSQLI_NUM | MYSQLI_NUM_FLAG | MYSQLI_ON_UPDATE_NOW_FLAG
    | MYSQLI_OPT_CONNECT_TIMEOUT | MYSQLI_OPT_INT_AND_FLOAT_NATIVE | MYSQLI_OPT_LOCAL_INFILE
    | MYSQLI_OPT_NET_CMD_BUFFER_SIZE | MYSQLI_OPT_NET_READ_BUFFER_SIZE | MYSQLI_PART_KEY_FLAG
    | MYSQLI_PRI_KEY_FLAG | MYSQLI_READ_DEFAULT_FILE | MYSQLI_READ_DEFAULT_GROUP
    | MYSQLI_REFRESH_BACKUP_LOG | MYSQLI_REFRESH_GRANT | MYSQLI_REFRESH_HOSTS
    | MYSQLI_REFRESH_LOG | MYSQLI_REFRESH_MASTER | MYSQLI_REFRESH_REPLICA
    | MYSQLI_REFRESH_SLAVE | MYSQLI_REFRESH_STATUS | MYSQLI_REFRESH_TABLES
    | MYSQLI_REFRESH_THREADS | MYSQLI_REPORT_ALL | MYSQLI_REPORT_ERROR | MYSQLI_REPORT_INDEX
    | MYSQLI_REPORT_OFF | MYSQLI_REPORT_STRICT | MYSQLI_SERVER_QUERY_NO_GOOD_INDEX_USED
    | MYSQLI_SERVER_QUERY_NO_INDEX_USED | MYSQLI_SERVER_QUERY_WAS_SLOW
    | MYSQLI_SET_CHARSET_NAME | MYSQLI_SET_FLAG | MYSQLI_STMT_ATTR_CURSOR_TYPE
    | MYSQLI_STMT_ATTR_PREFETCH_ROWS | MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH | MYSQLI_STORE_RESULT
    | MYSQLI_TIMESTAMP_FLAG | MYSQLI_TYPE_BIT | MYSQLI_TYPE_BLOB | MYSQLI_TYPE_CHAR
    | MYSQLI_TYPE_DATE | MYSQLI_TYPE_DATETIME | MYSQLI_TYPE_DECIMAL | MYSQLI_TYPE_DOUBLE
    | MYSQLI_TYPE_ENUM | MYSQLI_TYPE_FLOAT | MYSQLI_TYPE_GEOMETRY | MYSQLI_TYPE_INT24
    | MYSQLI_TYPE_INTERVAL | MYSQLI_TYPE_LONG | MYSQLI_TYPE_LONGLONG | MYSQLI_TYPE_LONG_BLOB
    | MYSQLI_TYPE_MEDIUM_BLOB | MYSQLI_TYPE_NEWDATE | MYSQLI_TYPE_NEWDECIMAL | MYSQLI_TYPE_NULL
    | MYSQLI_TYPE_SET | MYSQLI_TYPE_SHORT | MYSQLI_TYPE_STRING | MYSQLI_TYPE_TIME
    | MYSQLI_TYPE_TIMESTAMP | MYSQLI_TYPE_TINY | MYSQLI_TYPE_TINY_BLOB | MYSQLI_TYPE_VAR_STRING
    | MYSQLI_TYPE_YEAR | MYSQLI_UNIQUE_KEY_FLAG | MYSQLI_UNSIGNED_FLAG | MYSQLI_USE_RESULT
    | MYSQLI_ZEROFILL_FLAG | MYSQL_ASSOC | MYSQL_BOTH | MYSQL_CLIENT_COMPRESS
    | MYSQL_CLIENT_IGNORE_SPACE | MYSQL_CLIENT_INTERACTIVE | MYSQL_CLIENT_SSL | MYSQL_NUM
    | PCRE_VERSION | POSIX_F_OK | POSIX_RLIMIT_AS | POSIX_RLIMIT_CORE | POSIX_RLIMIT_CPU
    | POSIX_RLIMIT_DATA | POSIX_RLIMIT_FSIZE | POSIX_RLIMIT_INFINITY | POSIX_RLIMIT_LOCKS
    | POSIX_RLIMIT_MEMLOCK | POSIX_RLIMIT_MSGQUEUE | POSIX_RLIMIT_NICE | POSIX_RLIMIT_NOFILE
    | POSIX_RLIMIT_NPROC | POSIX_RLIMIT_RSS | POSIX_RLIMIT_RTPRIO | POSIX_RLIMIT_RTTIME
    | POSIX_RLIMIT_SIGPENDING | POSIX_RLIMIT_STACK | POSIX_R_OK | POSIX_S_IFBLK | POSIX_S_IFCHR
    | POSIX_S_IFIFO | POSIX_S_IFREG | POSIX_S_IFSOCK | POSIX_W_OK | POSIX_X_OK
    | PREG_BACKTRACK_LIMIT_ERROR | PREG_BAD_UTF8_ERROR | PREG_BAD_UTF8_OFFSET_ERROR
    | PREG_GREP_INVERT | PREG_INTERNAL_ERROR | PREG_JIT_STACKLIMIT_ERROR | PREG_NO_ERROR
    | PREG_OFFSET_CAPTURE | PREG_PATTERN_ORDER | PREG_RECURSION_LIMIT_ERROR | PREG_SET_ORDER
    | PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY | PREG_SPLIT_OFFSET_CAPTURE
    | PREG_UNMATCHED_AS_NULL | PSFS_ERR_FATAL | PSFS_FEED_ME | PSFS_FLAG_FLUSH_CLOSE
    | PSFS_FLAG_FLUSH_INC | PSFS_FLAG_NORMAL | PSFS_PASS_ON | SQLITE3_ASSOC | SQLITE3_BLOB
    | SQLITE3_BOTH | SQLITE3_FLOAT | SQLITE3_INTEGER | SQLITE3_NULL | SQLITE3_NUM
    | SQLITE3_OPEN_CREATE | SQLITE3_OPEN_READONLY | SQLITE3_OPEN_READWRITE | SQLITE3_TEXT
    | SQLITE_ABORT | SQLITE_ASSOC | SQLITE_AUTH | SQLITE_BOTH | SQLITE_BUSY | SQLITE_CANTOPEN
    | SQLITE_CONSTRAINT | SQLITE_CORRUPT | SQLITE_DONE | SQLITE_EMPTY | SQLITE_ERROR
    | SQLITE_FORMAT | SQLITE_FULL | SQLITE_INTERNAL | SQLITE_INTERRUPT | SQLITE_IOERR
    | SQLITE_LOCKED | SQLITE_MISMATCH | SQLITE_MISUSE | SQLITE_NOLFS | SQLITE_NOMEM
    | SQLITE_NOTADB | SQLITE_NOTFOUND | SQLITE_NUM | SQLITE_OK | SQLITE_PERM | SQLITE_PROTOCOL
    | SQLITE_READONLY | SQLITE_ROW | SQLITE_SCHEMA | SQLITE_TOOBIG | STREAM_BUFFER_FULL
    | STREAM_BUFFER_LINE | STREAM_BUFFER_NONE | STREAM_CAST_AS_STREAM | STREAM_CAST_FOR_SELECT
    | STREAM_CLIENT_ASYNC_CONNECT | STREAM_CLIENT_CONNECT | STREAM_CLIENT_PERSISTENT
    | STREAM_CRYPTO_METHOD_SSLv23_CLIENT | STREAM_CRYPTO_METHOD_SSLv23_SERVER
    | STREAM_CRYPTO_METHOD_SSLv2_CLIENT | STREAM_CRYPTO_METHOD_SSLv2_SERVER
    | STREAM_CRYPTO_METHOD_SSLv3_CLIENT | STREAM_CRYPTO_METHOD_SSLv3_SERVER
    | STREAM_CRYPTO_METHOD_TLS_CLIENT | STREAM_CRYPTO_METHOD_TLS_SERVER
    | STREAM_ENFORCE_SAFE_MODE | STREAM_FILTER_ALL | STREAM_FILTER_READ | STREAM_FILTER_WRITE
    | STREAM_IGNORE_URL | STREAM_IPPROTO_ICMP | STREAM_IPPROTO_IP | STREAM_IPPROTO_RAW
    | STREAM_IPPROTO_TCP | STREAM_IPPROTO_UDP | STREAM_IS_URL | STREAM_MKDIR_RECURSIVE
    | STREAM_MUST_SEEK | STREAM_NOTIFY_AUTH_REQUIRED | STREAM_NOTIFY_AUTH_RESULT
    | STREAM_NOTIFY_COMPLETED | STREAM_NOTIFY_CONNECT | STREAM_NOTIFY_FAILURE
    | STREAM_NOTIFY_FILE_SIZE_IS | STREAM_NOTIFY_MIME_TYPE_IS | STREAM_NOTIFY_PROGRESS
    | STREAM_NOTIFY_REDIRECTED | STREAM_NOTIFY_RESOLVE | STREAM_NOTIFY_SEVERITY_ERR
    | STREAM_NOTIFY_SEVERITY_INFO | STREAM_NOTIFY_SEVERITY_WARN | STREAM_OOB
    | STREAM_OPTION_BLOCKING | STREAM_OPTION_READ_BUFFER | STREAM_OPTION_READ_TIMEOUT
    | STREAM_OPTION_WRITE_BUFFER | STREAM_PEEK | STREAM_PF_INET | STREAM_PF_INET6
    | STREAM_PF_UNIX | STREAM_REPORT_ERRORS | STREAM_SERVER_BIND | STREAM_SERVER_LISTEN
    | STREAM_SHUT_RD | STREAM_SHUT_RDWR | STREAM_SHUT_WR | STREAM_SOCK_DGRAM | STREAM_SOCK_RAW
    | STREAM_SOCK_RDM | STREAM_SOCK_SEQPACKET | STREAM_SOCK_STREAM | STREAM_URL_STAT_LINK
    | STREAM_URL_STAT_QUIET | STREAM_USE_PATH | SUNFUNCS_RET_DOUBLE | SUNFUNCS_RET_STRING
    | SUNFUNCS_RET_TIMESTAMP | XML_ATTRIBUTE_CDATA | XML_ATTRIBUTE_DECL_NODE
    | XML_ATTRIBUTE_ENTITY | XML_ATTRIBUTE_ENUMERATION | XML_ATTRIBUTE_ID | XML_ATTRIBUTE_IDREF
    | XML_ATTRIBUTE_IDREFS | XML_ATTRIBUTE_NMTOKEN | XML_ATTRIBUTE_NMTOKENS
    | XML_ATTRIBUTE_NODE | XML_ATTRIBUTE_NOTATION | XML_CDATA_SECTION_NODE | XML_COMMENT_NODE
    | XML_DOCUMENT_FRAG_NODE | XML_DOCUMENT_NODE | XML_DOCUMENT_TYPE_NODE | XML_DTD_NODE
    | XML_ELEMENT_DECL_NODE | XML_ELEMENT_NODE | XML_ENTITY_DECL_NODE | XML_ENTITY_NODE
    | XML_ENTITY_REF_NODE | XML_ERROR_ASYNC_ENTITY | XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF
    | XML_ERROR_BAD_CHAR_REF | XML_ERROR_BINARY_ENTITY_REF | XML_ERROR_DUPLICATE_ATTRIBUTE
    | XML_ERROR_EXTERNAL_ENTITY_HANDLING | XML_ERROR_INCORRECT_ENCODING
    | XML_ERROR_INVALID_TOKEN | XML_ERROR_JUNK_AFTER_DOC_ELEMENT | XML_ERROR_MISPLACED_XML_PI
    | XML_ERROR_NONE | XML_ERROR_NO_ELEMENTS | XML_ERROR_NO_MEMORY | XML_ERROR_PARAM_ENTITY_REF
    | XML_ERROR_PARTIAL_CHAR | XML_ERROR_RECURSIVE_ENTITY_REF | XML_ERROR_SYNTAX
    | XML_ERROR_TAG_MISMATCH | XML_ERROR_UNCLOSED_CDATA_SECTION | XML_ERROR_UNCLOSED_TOKEN
    | XML_ERROR_UNDEFINED_ENTITY | XML_ERROR_UNKNOWN_ENCODING | XML_HTML_DOCUMENT_NODE
    | XML_LOCAL_NAMESPACE | XML_NAMESPACE_DECL_NODE | XML_NOTATION_NODE
    | XML_OPTION_CASE_FOLDING | XML_OPTION_SKIP_TAGSTART | XML_OPTION_SKIP_WHITE
    | XML_OPTION_TARGET_ENCODING | XML_PI_NODE | XML_SAX_IMPL | XML_TEXT_NODE
    )\b

  constants_parser_tokens: |-
    (?x:
      T_ABSTRACT | T_AND_EQUAL | T_ARRAY | T_ARRAY_CAST | T_AS | T_ATTRIBUTE | T_BAD_CHARACTER
    | T_BOOLEAN_AND | T_BOOLEAN_OR | T_BOOL_CAST | T_BREAK | T_CASE | T_CATCH | T_CHARACTER
    | T_CLASS | T_CLASS_C | T_CLONE | T_CLOSE_TAG | T_COMMENT | T_CONCAT_EQUAL | T_CONST
    | T_CONSTANT_ENCAPSED_STRING | T_CONTINUE | T_CURLY_OPEN | T_DEC | T_DECLARE | T_DEFAULT
    | T_DIR | T_DIV_EQUAL | T_DNUMBER | T_DO | T_DOC_COMMENT | T_DOLLAR_OPEN_CURLY_BRACES
    | T_DOUBLE_ARROW | T_DOUBLE_CAST | T_DOUBLE_COLON | T_ECHO | T_ELSE | T_ELSEIF | T_EMPTY
    | T_ENCAPSED_AND_WHITESPACE | T_ENDDECLARE | T_ENDFOR | T_ENDFOREACH | T_ENDIF
    | T_ENDSWITCH | T_ENDWHILE | T_END_HEREDOC | T_EVAL | T_EXIT | T_EXTENDS | T_FILE | T_FINAL
    | T_FOR | T_FOREACH | T_FUNCTION | T_FUNC_C | T_GLOBAL | T_GOTO | T_HALT_COMPILER | T_IF
    | T_IMPLEMENTS | T_INC | T_INCLUDE | T_INCLUDE_ONCE | T_INLINE_HTML | T_INSTANCEOF
    | T_INTERFACE | T_INT_CAST | T_ISSET | T_IS_EQUAL | T_IS_GREATER_OR_EQUAL | T_IS_IDENTICAL
    | T_IS_NOT_EQUAL | T_IS_NOT_IDENTICAL | T_IS_SMALLER_OR_EQUAL | T_LINE | T_LIST
    | T_LNUMBER | T_LOGICAL_AND | T_LOGICAL_OR | T_LOGICAL_XOR | T_METHOD_C | T_MINUS_EQUAL
    | T_ML_COMMENT | T_MOD_EQUAL | T_MUL_EQUAL | T_NAMESPACE | T_NEW | T_NS_C | T_NS_SEPARATOR
    | T_NUM_STRING | T_OBJECT_CAST | T_OBJECT_OPERATOR | T_OLD_FUNCTION | T_OPEN_TAG
    | T_OPEN_TAG_WITH_ECHO | T_OR_EQUAL | T_PAAMAYIM_NEKUDOTAYIM | T_PLUS_EQUAL | T_PRINT
    | T_PRIVATE | T_PROTECTED | T_PUBLIC | T_REQUIRE | T_REQUIRE_ONCE | T_RETURN | T_SL
    | T_SL_EQUAL | T_SR | T_SR_EQUAL | T_START_HEREDOC | T_STATIC | T_STRING | T_STRING_CAST
    | T_STRING_VARNAME | T_SWITCH | T_THROW | T_TRY | T_UNSET | T_UNSET_CAST | T_USE | T_VAR
    | T_VARIABLE | T_WHILE | T_WHITESPACE | T_XOR_EQUAL
    )\b

  phpdoc_annotation: |-
    (?x:
      author | after(?:Class)? | backup(?:Globals | StaticAttributes) | before(?:Class)?
    | codeCoverageIgnore(?:Start | End)? | covers(?:DefaultClass | Nothing)? | dataProvider
    | depends | doesNotPerformAssertions | expectedException(?:Code | Message(?:RegExp)?)?
    | group | large | medium | preserveGlobalState | requires | run(TestsInSeparateProcesses
    | InSeparateProcess) | small | test(dox | With)? | ticket | uses
    )

  phpdoc_tags: |-
    (?x:
      abstract | api | author | category | copyright | example | global | internal | ignore
    | license | link | package | param | return | see | since | static | subpackage | throws
    | todo | var | version | uses | deprecated | final | filesource | property(-read | -write)?
    | method | mixin | source
    )

  phpdoc_url: |-
    (?x: (?: {{phpdoc_url_proto}} | mailto: ) [-:@a-zA-Z0-9_.~%+/?=&#]*[-@a-zA-Z0-9_~%+/=&#] )

  phpdoc_url_proto: |-
    (?x: https? | s?ftp | ftps | file | smb | afp | nfs | man | x-man | gopher | txmt )://

##############################################################################

contexts:

  main:
    - include: declarations
    - include: statements
    - include: expressions
    - include: stray-braces

  declarations:
    - include: class-declarations
    - include: enum-declarations
    - include: interface-declarations
    - include: namespace-declarations
    - include: trait-declarations
    - include: function-declarations
    - include: constant-declarations
    - include: property-declarations

  statements:
    - include: blocks
    - include: control-statements
    - include: use-statements
    - include: punctuation-terminators

  expressions:
    - include: attributes
    - include: comments
    - include: type-casts
    - include: groups
    - include: arrays
    - include: includes
    - include: instantiations
    - include: arrow-functions
    - include: closures
    - include: bindings
    - include: keywords
    - include: matches
    - include: define-calls
    - include: function-calls
    - include: numbers
    - include: heredocs
    - include: strings
    - include: variables
    - include: members
    - include: static-classes
    - include: static-modifiers
    - include: operators
    - include: modifiers
    - include: types
    - include: constants
    - include: stray-brackets
    - include: stray-parens

  nested-expressions:
    # A possible sequence of expressions, which may be terminated by statements.
    - include: expression-end-pop
    - include: expressions

  single-expression:
    # A single expression which doesen't consume any stray brackets
    # and is terminated by sequence separators.
    - match: (?=[]),])
      pop: 1
    - include: nested-expressions

###[ COMMENTS ]###############################################################

  comments:
    # This only highlights a docblock if the first line contains only /** or
    # /**#@+ (which is used for docblock templates). Otherwise block-level
    # comment would be highlighted as invalid for constructs such as /**** ****/
    # multi-line doc
    - match: (/\*\*(?:\#@\+)?)\s*$
      captures:
        1: punctuation.definition.comment.begin.php
      push: comment-phpdoc-body
    # inline doc
    - match: (/\*\*)\s+(?=@.*\s\*/\s*$)
      captures:
        1: punctuation.definition.comment.begin.php
      push:
        - comment-phpdoc-end
        - phpdoc-block-tag
    - match: /\*
      scope: punctuation.definition.comment.begin.php
      push: comment-block-body
    - match: //
      scope: punctuation.definition.comment.php
      push: comment-line-double-slash-body
    - match: '#'
      scope: punctuation.definition.comment.php
      push: comment-line-number-sign-body

  comment-block-body:
    - meta_include_prototype: false
    - meta_scope: comment.block.php
    - include: comment-phpdoc-end

  comment-phpdoc-body:
    - meta_include_prototype: false
    - meta_scope: comment.block.documentation.phpdoc.php
    - include: comment-phpdoc-end
    - include: phpdoc-inline-tags
    # If the next line doesn't start with whitespace then an asterisk, the use
    # is either writing an invalid phpdoc comment, or not using phpdoc. Instead
    # of marking the comment as invalid, we just switch to a normal block-level
    # comment.
    - match: ^(?!\s*\*)
      set: comment-block-body
    - match: ^\s*(\*)(?!\**/)\s+
      captures:
        1: punctuation.definition.comment.php
      push: phpdoc-block-tag
    - match: '{{phpdoc_url}}'
      scope: markup.underline.link.php

  comment-phpdoc-end:
    - meta_include_prototype: false
    - meta_scope: comment.block.documentation.phpdoc.php
    - match: \*/
      scope: punctuation.definition.comment.end.php
      pop: 1

  phpdoc-block-tag:
    - meta_include_prototype: false
    - match: (@access)(?:\s+({{access_modifier}}))?
      captures:
        1: entity.name.tag.documentation.phpdoc.php
        2: storage.modifier.access.php
      pop: 1
    - match: (@xlink)(?:\s+(.+))?\s*$
      captures:
        1: entity.name.tag.documentation.phpdoc.php
        2: markup.underline.link.php
      pop: 1
    - match: \@{{phpdoc_tags}}(?=\s|$)
      scope: entity.name.tag.documentation.phpdoc.php
      pop: 1
    # Annotations from PHPUnit
    - match: \@{{phpdoc_annotation}}(?=\s|$)
      scope: entity.name.tag.documentation.phpunit.php
      pop: 1
    - include: immediately-pop

  phpdoc-inline-tags:
    - match: (\{)(@inheritdoc)(\})
      captures:
        1: punctuation.definition.tag.begin.phpdoc.php
        2: entity.name.tag.documentation.phpdoc.php
        3: punctuation.definition.tag.end.phpdoc.php
    # https://docs.phpdoc.org/latest/guide/references/phpdoc/inline-tags/link.html
    - match: ({)(@link)\s+({{phpdoc_url}})(?:\s+(.+?))?\s*(})
      scope: meta.tag.inline.phpdoc.php
      captures:
        1: punctuation.definition.tag.begin.phpdoc.php
        2: entity.name.tag.documentation.phpdoc.php
        3: markup.underline.link.phpdoc.php
        4: meta.label.phpdoc.php
        5: punctuation.definition.tag.end.phpdoc.php

  comment-line-double-slash-body:
    - meta_include_prototype: false
    - meta_scope: comment.line.double-slash.php
    - include: comment-line-body

  comment-line-number-sign-body:
    - meta_include_prototype: false
    - meta_scope: comment.line.number-sign.php
    - include: comment-line-body

  comment-line-body:
    - match: (?=\?>)
      pop: 1
    # Consume the newline so that completions aren't shown at the end of the line
    - match: \n
      pop: 1

###[ CLASS DECLARATIONS ]#####################################################

  class-declarations:
    - match: (?i:class)\b
      scope: meta.class.php keyword.declaration.class.php
      push:
        - class-declaration-body
        - class-declaration-name

  class-declaration-name:
    - match: '{{guarded_identifier}}'
      scope: entity.name.class.php
      pop: 1
    - include: attributes
    - include: comments
    - include: else-pop

  class-declaration-body:
    - meta_content_scope: meta.class.php
    - match: \{
      scope: punctuation.section.block.begin.php
      set: class-body
    - match: (?i:extends)\b
      scope: storage.modifier.extends.php
      push: class-extends
    - match: (?i:implements)\b
      scope: storage.modifier.implements.php
      push: class-implements
    - include: attributes
    - include: comments
    - include: expression-end-pop

  class-extends:
    - include: expression-end-pop
    - include: attributes
    - include: comments
    - match: (?=(?i:extends|implements)\b)
      pop: 1
    - include: inherited-class-name
    - include: else-pop

  class-implements:
    - include: expression-end-pop
    - include: attributes
    - include: comments
    - match: (?=(?i:extends|implements)\b)
      pop: 1
    - include: inherited-class-names
    - include: punctuation-separators
    - include: else-pop

  class-body:
    # https://www.php.net/manual/en/language.oop5.traits.php
    - meta_scope: meta.class.php meta.block.php
    - match: (?i:use)\b
      scope: meta.use.php keyword.declaration.use.php
      push: class-use-body
    - include: block-body

  class-use-body:
    - meta_content_scope: meta.use.php
    - match: \{
      scope: punctuation.section.block.begin.php
      set: class-use-block-body
    - include: expression-end-pop
    - include: attributes
    - include: comments
    - include: punctuation-separators
    - include: inherited-class-names

  class-use-block-body:
    - meta_scope: meta.use.php meta.block.php
    - match: \}
      scope: punctuation.section.block.end.php
      pop: 1
    - match: (?i:as)\b
      scope: keyword.other.as.php
      push: use-statement-function-alias
    - match: (?i:insteadof)\b
      scope: keyword.other.insteadof.php
    - match: (::)({{guarded_identifier}})?
      captures:
        1: punctuation.accessor.double-colon.php
        2: variable.function.php
    - include: punctuation-terminators
    - include: attributes
    - include: comments
    - include: bindings
    - include: class-names

###[ ENUM DECLARATIONS ]######################################################

  enum-declarations:
    - match: ((?i:enum))\s+({{identifier}})
      scope: meta.enum.php
      captures:
        1: keyword.declaration.enum.php
        2: entity.name.enum.php
      push:
        - enum-declaration-body
        - enum-type-hint

  enum-type-hint:
    - match: ':'
      scope: punctuation.separator.colon.php
      set:
        - type-hint-body
        - type-hint-simple-type
    - include: else-pop

  enum-declaration-body:
    - meta_content_scope: meta.enum.php
    - match: \{
      scope: punctuation.section.block.begin.php
      set: enum-body
    - match: (?i:extends)\b
      scope: invalid.illegal.disallowed.php
    - match: (?i:implements)\b
      scope: storage.modifier.implements.php
      push: class-implements
    - include: attributes
    - include: comments
    - include: expression-end-pop

  enum-body:
    - meta_scope: meta.enum.php meta.block.php
    - match: (?i:case)\b
      scope: keyword.control.php
      push: constant-declaration-name
    - include: class-body

###[ INTERFACE DECLARATIONS ]#################################################

  interface-declarations:
    - match: (?:interface)\b
      scope: meta.interface.php keyword.declaration.interface.php
      push:
        - interface-declaration-body
        - interface-declaration-name

  interface-declaration-name:
    - match: '{{guarded_identifier}}'
      scope: entity.name.interface.php
      pop: 1
    - include: attributes
    - include: comments
    - include: else-pop

  interface-declaration-body:
    - meta_content_scope: meta.interface.php
    - match: \{
      scope: punctuation.section.block.begin.php
      set: interface-body
    - match: (?i:extends)\b
      scope: storage.modifier.extends.php
      push: class-implements  # interfaces support multiple inherited classes
    - match: (?i:implements)\b
      scope: invalid.illegal.disallowed.php
    - include: attributes
    - include: comments
    - include: expression-end-pop

  interface-body:
    - meta_scope: meta.interface.php meta.block.php
    - include: class-body

###[ NAMESPACE DECLARATIONS ]#################################################

  namespace-declarations:
    - match: (?i:namespace)\b
      scope: keyword.declaration.namespace.php
      push:
        - namespace-declaration-meta
        - namespace-declaration-name

  namespace-declaration-meta:
    - meta_include_prototype: false
    - meta_scope: meta.namespace.php
    - include: immediately-pop

  namespace-declaration-name:
    - match: ({{identifier}})?(\\)
      captures:
        1: variable.namespace.php
        2: punctuation.accessor.namespace.php
      set: qualified-namespace-declaration-name
    - include: unqualified-namespace-declaration-name
    - include: else-pop

  qualified-namespace-declaration-name:
    - meta_include_prototype: false
    - meta_scope: meta.path.php
    - include: namespace-qualifiers
    - include: unqualified-namespace-declaration-name
    - include: immediately-pop

  unqualified-namespace-declaration-name:
    - match: '{{identifier}}'
      scope: entity.name.namespace.php
      pop: 1

  namespace-qualifiers:
    - match: ({{identifier}})(\\)
      captures:
        1: variable.namespace.php
        2: punctuation.accessor.namespace.php

###[ TRAIT DECLARATIONS ]#####################################################

  trait-declarations:
    - match: (?i:trait)\b
      scope: meta.trait.php keyword.declaration.trait.php
      push:
        - trait-declaration-body
        - trait-declaration-name

  trait-declaration-name:
    - match: '{{guarded_identifier}}'
      scope: entity.name.trait.php
      pop: 1
    - include: attributes
    - include: comments
    - include: else-pop

  trait-declaration-body:
    - meta_content_scope: meta.trait.php
    - match: \{
      scope: punctuation.section.block.begin.php
      set: trait-body
    - include: attributes
    - include: comments
    - include: else-pop

  trait-body:
    - meta_scope: meta.trait.php meta.block.php
    - include: class-body

###[ CONSTANT DECLARATIONS ]##################################################

  constant-declarations:
    - match: (?i:const)\b
      scope: keyword.declaration.constant.php
      push: constant-declaration-body

  constant-declaration-body:
    - include: attributes
    - include: comments
    - match: (?=\S)
      branch_point: constant-declaration
      branch:
        - untyped-constant-declaration
        - typed-constant-declaration
      pop: 1

  untyped-constant-declaration:
    - match: '{{guarded_identifier}}'
      scope: entity.name.constant.php
      set: untyped-constant-declaration-check
    - match: (?=\S)
      fail: constant-declaration

  untyped-constant-declaration-check:
    - include: comments
    - match: (?=[=;}]|{{access_modifier}}|{{property_modifier}}|{{static_modifier}})
      pop: 1
    - match: (?=\S)
      fail: constant-declaration

  typed-constant-declaration:
    - meta_include_prototype: false
    - match: ''
      set:
        - constant-declaration-name
        - type-hint-body
        - type-hint-simple-type

  constant-declaration-name:
    - match: '{{guarded_identifier}}'
      scope: entity.name.constant.php
      pop: 1
    - include: attributes
    - include: comments
    - include: else-pop

###[ PROPERTY DECLARATIONS ]##################################################

  property-declarations:
    # https://www.php.net/manual/en/language.oop5.properties.php
    # https://wiki.php.net/rfc/typed_properties_v2
    - match: '{{access_modifier}}'
      scope: storage.modifier.access.php
      push: property-type-hint
    - match: '{{property_modifier}}'
      scope: storage.modifier.php
      push: property-type-hint
    - match: '{{static_modifier}}'
      scope: storage.modifier.namespace.php
      push: property-type-hint
    # obsolete declaration keyword
    - match: (?i:var)\b
      scope: keyword.declaration.variable.php
      push: property-type-hint

  property-type-hint:
    - match: (?=\$|(?i:const|function)\b)
      pop: 1
    - match: '{{property_modifier}}'
      scope: storage.modifier.php
    - include: access-modifiers
    - include: static-modifiers
    - include: expect-type-hint

###[ ARROW FUNCTION DECLARATIONS ]############################################

  # https://wiki.php.net/rfc/arrow_functions_v2
  arrow-functions:
    # "fn" can be a function name before PHP 7.4
    # Since PHP 7.4, "fn" is a reserved word
    - match: (?=(?i:fn)\s*(?:&\s*)?\()
      branch_point: arrow-function-branch
      branch:
        # Anonymous function definition: fn($a) => $a * 2;
        - maybe-arrow-function
        # Function call, where "fn" is the function name: fn($a);
        - fn-function-call

  maybe-arrow-function:
    - match: ((?i:fn))\s*(?:(&)\s*)?
      captures:
        1: keyword.declaration.function.php
        2: keyword.operator.reference.php
      set:
        - arrow-function-body
        - arrow-function-or-fail
        - arrow-function-return-type
        - arrow-function-parameters

  arrow-function-parameters:
    - meta_include_prototype: false
    - match: (?=\()
      set:
        - arrow-function-parameters-body
        - function-parameter-variable
        - expect-type-hint
        - group-begin
    - include: else-pop

  arrow-function-parameters-body:
    - clear_scopes: 1
    - meta_scope: meta.function.anonymous.parameters.php meta.group.php
    - include: function-parameters-body

  arrow-function-return-type:
    - match: ':'
      scope: punctuation.separator.colon.php
      set:
        - arrow-function-return-type-body
        - type-hint-simple-type
    - include: else-pop

  arrow-function-return-type-body:
    - clear_scopes: 1
    - meta_scope: meta.function.anonymous.return-type.php
    - include: type-hint-body

  arrow-function-or-fail:
    - include: comments
    - match: =>
      scope: keyword.declaration.function.arrow.php
      pop: 1
    - match: (?=\S)
      fail: arrow-function-branch

  arrow-function-body:
    - meta_scope: meta.function.anonymous.php
    - include: single-expression

  fn-function-call:
    - include: function-calls
    - include: immediately-pop

  closures:
    - match: ((?i:function))\s*(?:(&)\s*)?(?=\()
      scope: meta.function.php
      captures:
        1: keyword.declaration.function.php
        2: keyword.operator.reference.php
      push:
        - function-block
        - function-return-type
        - function-use
        - function-parameters
    - match: (?i:function)\b
      scope: keyword.declaration.function.php

###[ FUNCTION DECLARATIONS ]##################################################

  function-declarations:
    - match: (?=(?:(?i:{{access_modifier}}|{{function_modifier}}|static)\s+)*(?i:function)\b\s*(?:&\s*)?{{identifier_start}})
      push:
        - function-block
        - function-return-type
        - function-declaration-name
        - function-modifier

  function-modifier:
    - match: (?i:function)\b
      scope: keyword.declaration.function.php
      pop: 1
    - match: '{{function_modifier}}'
      scope: storage.modifier.php
    - include: access-modifiers
    - include: static-modifiers
    - include: attributes
    - include: comments
    - include: else-pop

  function-declaration-name:
    - include: reference-modifiers
    # https://wiki.php.net/rfc/constructor_promotion
    - match: __construct\b
      scope: entity.name.function.constructor.php support.function.magic.php
      set: constructor-parameters
    - match: __destruct\b
      scope: entity.name.function.destructor.php support.function.magic.php
      set: function-parameters
    - match: __(?:callStatic|call|get|set|isset|unset|toString|clone|set_state|sleep|wakeup|autoload|invoke|debugInfo)\b
      scope: entity.name.function.php support.function.magic.php
      set: function-parameters
    - match: '{{identifier}}'
      scope: entity.name.function.php
      set: function-parameters
    # fail gracefully if function name is missing
    - match: (?=\S)
      set: function-parameters

  constructor-parameters:
    - meta_include_prototype: false
    - match: (?=\()
      set:
        - constructor-parameters-body
        - function-parameter-variable
        - constructor-type-hint
        - group-begin
    - include: comments
    - include: else-pop

  constructor-parameters-body:
    - clear_scopes: 1
    - meta_scope: meta.function.parameters.php meta.group.php
    - match: ',|(?=[(?\\[:alpha:]])'  # handle missing comma gracefully
      scope: punctuation.separator.sequence.php
      push:
        - function-parameter-variable
        - constructor-type-hint
    - include: function-parameter-values
    - include: group-end
    - include: comments
    - include: else-pop

  constructor-type-hint:
    - match: '{{constructor_modifier}}'
      scope: storage.modifier.php
    - include: access-modifiers
    - include: static-modifiers
    - include: expect-type-hint

  function-parameters:
    - meta_include_prototype: false
    - match: (?=\()
      set:
        - function-parameters-body
        - function-parameter-variable
        - expect-type-hint
        - group-begin
    - include: comments
    - include: else-pop

  function-parameters-body:
    - clear_scopes: 1
    - meta_scope: meta.function.parameters.php meta.group.php
    - match: ',|(?=[(?\\[:alpha:]])'  # handle missing comma gracefully
      scope: punctuation.separator.sequence.php
      push:
        - function-parameter-variable
        - expect-type-hint
    - include: function-parameter-values
    - include: group-end
    - include: comments
    - include: else-pop

  function-parameter-variable:
    - match: (\$+){{identifier}}
      scope: variable.parameter.php
      captures:
        1: punctuation.definition.variable.php
      pop: 1
    - include: reference-modifiers
    - include: variadic-operators
    - include: comments
    - include: else-pop

  function-parameter-values:
    - match: =
      scope: keyword.operator.assignment.php
      push: single-expression

  function-use:
    - match: (?i:use)\b
      scope: meta.function.use.php keyword.declaration.use.php
      set: function-use-group
    - include: else-pop

  function-use-group:
    - clear_scopes: 1
    - meta_content_scope: meta.function.use.php
    - match: \(
      scope: punctuation.section.group.begin.php
      set: function-use-group-body
    - include: comments
    - include: else-pop

  function-use-group-body:
    - clear_scopes: 1
    - meta_scope: meta.function.use.php meta.group.php
    - include: group-body

  function-return-type:
    - match: ':'
      scope: punctuation.separator.colon.php
      set:
        - function-return-type-body
        - type-hint-simple-type
    - include: else-pop

  function-return-type-body:
    - clear_scopes: 1
    - meta_scope: meta.function.return-type.php
    - include: type-hint-body

  function-block:
    - meta_content_scope: meta.function.php
    - match: \{
      scope: punctuation.section.block.begin.php
      set: function-block-body
    - include: comments
    - include: else-pop

  function-block-body:
    - meta_scope: meta.function.php meta.block.php
    - include: block-body

###[ CODE BLOCKS ]############################################################

  blocks:
    - match: \{
      scope: punctuation.section.block.begin.php
      push: block-body

  block-body:
    - meta_scope: meta.block.php
    - include: block-end
    - include: declarations
    - include: statements
    - include: expressions

  block-end:
    - match: \}
      scope: punctuation.section.block.end.php
      pop: 1

  stray-braces:
    - match: \}
      scope: punctuation.section.block.end.php

###[ CONTROL FLOW STATEMENTS ]################################################

  control-statements:
    # Note: Only keywords are matched here, but each of them starts a statement.
    - include: conditional-statements
    - include: exception-statements
    - include: loop-statements
    - include: flow-statements
    - match: (?i:declare|enddeclare)\b
      scope: keyword.declaration.php

  conditional-statements:
    - match: (?i:if)\b
      scope: keyword.control.conditional.if.php
    - match: (?i:elseif)\b
      scope: keyword.control.conditional.elseif.php
    - match: (?i:else)\b
      scope: keyword.control.conditional.else.php
    - match: (?i:case)\b
      scope: keyword.control.conditional.case.php
    - match: (?i:default)\b
      scope: keyword.control.conditional.default.php
    - match: (?i:switch)\b
      scope: keyword.control.conditional.switch.php
    - match: (?i:end(?:if|switch))\b
      scope: keyword.control.conditional.end.php

  loop-statements:
    - include: for-statements
    - match: (?i:do)\b
      scope: keyword.control.loop.do-while.php
    - match: (?i:foreach)\b
      scope: keyword.control.loop.for.php
    - match: (?i:while)\b
      scope: keyword.control.loop.while.php
    - match: (?i:end(?:for(?:each)?|while))\b
      scope: keyword.control.loop.end.php

  flow-statements:
    - match: ^\s*({{guarded_identifier}})\s*(:(?!:))
      captures:
        1: entity.name.label.php
        2: punctuation.separator.colon.php
    - match: (?i:continue)\b
      scope: keyword.control.flow.continue.php
    - match: (?i:break)\b
      scope: keyword.control.flow.break.php
    - match: (?i:goto)\b
      scope: keyword.control.flow.goto.php
      push: goto-label
    - match: (?i:die|exit)\b
      scope: keyword.control.flow.panic.php
    - match: (?i:return)\b
      scope: keyword.control.flow.return.php
    - match: (?i:throw)\b
      scope: keyword.control.flow.throw.php

  goto-label:
    - match: '{{guarded_identifier}}'
      scope: variable.label.php
    - include: comments
    - include: else-pop

###[ EXCEPTION STATEMENTS ]###################################################

  exception-statements:
    - match: (?i:catch)\b
      scope: meta.catch.php keyword.control.exception.catch.php
      push: catch-arguments
    - match: (?i:finally)\b
      scope: keyword.control.exception.finally.php
    - match: (?i:try)\b
      scope: keyword.control.exception.try.php

  catch-arguments:
    - meta_content_scope: meta.catch.php
    - match: \(
      scope: punctuation.section.group.begin.php
      set:
        - catch-arguments-body
        - expect-type-hint
    - include: comments
    - include: else-pop

  catch-arguments-body:
    - meta_scope: meta.catch.arguments.php meta.group.php
    - match: (\$){{identifier}}
      scope: variable.other.php
      captures:
        1: punctuation.definition.variable.php
    - include: group-end
    - include: comments
    - include: else-pop

###[ FOR STATEMENTS ]#########################################################

  for-statements:
    - match: (?i:for)\b
      scope: keyword.control.loop.for.php
      push: for-statement-group

  for-statement-group:
    - match: \(
      scope: punctuation.section.group.begin.php
      set: for-statement-group-body
    - include: comments
    - include: else-pop

  for-statement-group-body:
    - meta_scope: meta.group.php
    - match: \)
      scope: punctuation.section.group.end.php
      pop: 1
    - include: punctuation-terminators
    - include: nested-expressions

###[ USE STATEMENTS ]#########################################################

  use-statements:
    - match: (?i:use)\b
      scope: keyword.declaration.use.php
      push: use-statement-body

  use-statement-body:
    - meta_scope: meta.use.php
    - include: comments
    - match: (?i:const)\b
      scope: keyword.declaration.constant.php
      set: use-statement-const
    - match: (?i:function)\b
      scope: keyword.declaration.function.php
      set: use-statement-function
    - match: (?=\S)
      set: use-statement-ns-class


  use-statement-const:
    - meta_content_scope: meta.use.php
    - match: \{
      scope: punctuation.section.sequence.begin.php
      push: use-statement-const-body
    - include: use-statement-const-common

  use-statement-const-body:
    - meta_scope: meta.sequence.list.php
    - match: \}
      scope: punctuation.section.sequence.end.php
      pop: 1
    - include: use-statement-const-common

  use-statement-const-common:
    - match: (?i:as)\b
      scope: keyword.other.as.php
      push: use-statement-const-alias
    - include: use-statement-common
    - include: punctuation-separators
    # Don't mark this as entity.name.constant since the name is pulled verbatim
    # and the indexer should find the name in the original source file.
    - include: constants

  use-statement-const-alias:
    - match: '{{guarded_identifier}}'
      scope: entity.name.constant.php
      pop: 1
    - include: attributes
    - include: comments
    - include: else-pop


  use-statement-function:
    - meta_content_scope: meta.use.php
    - match: \{
      scope: punctuation.section.sequence.begin.php
      push: use-statement-function-body
    - include: use-statement-function-common

  use-statement-function-body:
    - meta_scope: meta.sequence.list.php
    - match: \}
      scope: punctuation.section.sequence.end.php
      pop: 1
    - include: use-statement-function-common

  use-statement-function-common:
    - match: (?i:as)\b
      scope: keyword.other.as.php
      push: use-statement-function-alias
    - include: use-statement-common
    - include: use-function-names
    - include: punctuation-separators

  use-function-names:
    # Don't mark this as entity.name.function since the name is pulled verbatim
    # and the indexer should find the name in the original source file.
    - match: ({{identifier}})?(\\)
      captures:
        1: variable.namespace.php
        2: punctuation.accessor.namespace.php
      push: use-qualified-function-name
    - match: '{{identifier}}'
      scope: support.function.php

  use-qualified-function-name:
    - meta_include_prototype: false
    - meta_scope: meta.path.php
    - include: namespace-qualifiers
    - match: '{{identifier}}'
      scope: support.function.php
      pop: 1
    - include: immediately-pop

  use-statement-function-alias:
    - match: '{{guarded_identifier}}'
      scope: entity.name.function.php
      pop: 1
    - include: attributes
    - include: comments
    - include: else-pop


  use-statement-ns-class:
    - meta_content_scope: meta.use.php
    - match: \{
      scope: punctuation.section.sequence.begin.php
      push: use-statement-ns-class-body
    - include: use-statement-ns-class-common

  use-statement-ns-class-body:
    - meta_scope: meta.sequence.list.php
    - match: \}
      scope: punctuation.section.sequence.end.php
      pop: 1
    - include: use-statement-ns-class-common

  use-statement-ns-class-common:
    # We are going to assume the alias is for a class so that the identifier
    # gets put into the index. This will be incorrect sometimes (because it
    # will sometimes be a namespace identifier), but the distinction
    # shouldn't be a huge deal.
    - match: (?i:as)\b
      scope: keyword.other.as.php
      push: use-statement-ns-class-alias
    - include: use-statement-common
    - include: punctuation-separators
    - include: class-names

  use-statement-ns-class-alias:
    - match: '{{guarded_identifier}}'
      scope: entity.name.class.php
      pop: 1
    - include: attributes
    - include: comments
    - include: else-pop

  use-statement-common:
    - include: expression-end-pop
    - include: attributes
    - include: comments

###[ EXPRESSION GROUPS ]######################################################

  groups:
    - match: (\()\s*(\.\.\.)\s*(\))
      scope: meta.group.php
      captures:
        1: punctuation.section.group.begin.php
        2: constant.other.placeholder.php
        3: punctuation.section.group.end.php
    - match: \(
      scope: punctuation.section.group.begin.php
      push: group-body

  group-begin:
    - meta_include_prototype: false
    - match: \(
      scope: punctuation.section.group.begin.php
      pop: 1

  group-body:
    - meta_scope: meta.group.php
    - include: group-end
    - include: nested-expressions

  group-end:
    - match: \)
      scope: punctuation.section.group.end.php
      pop: 1

  stray-parens:
    - match: \)
      scope: punctuation.section.group.end.php

###[ DEFINE CALLS ]###########################################################

  define-calls:
    - match: (?:((\\)((?i:define)))|((?i:define)))\s*(?=\()
      scope: meta.function-call.identifier.php
      captures:
        1: meta.path.php
        2: punctuation.accessor.namespace.php
        3: support.function.builtin.php
        4: support.function.builtin.php
      push: define-call-arguments

  define-call-arguments:
    - meta_include_prototype: false
    - match: \(
      scope: punctuation.section.group.begin.php
      set:
        - function-call-arguments-body
        - quoted-constant-declaration-name
    - include: immediately-pop

  quoted-constant-declaration-name:
    - match: (")({{identifier}})(")
      scope: meta.string.php
      captures:
        1: string.quoted.double.php punctuation.definition.string.begin.php
        2: entity.name.constant.php
        3: string.quoted.double.php punctuation.definition.string.end.php
    - match: (')({{identifier}})(')
      scope: meta.string.php
      captures:
        1: string.quoted.single.php punctuation.definition.string.begin.php
        2: entity.name.constant.php
        3: string.quoted.single.php punctuation.definition.string.end.php
    - include: attributes
    - include: comments
    - include: else-pop

###[ FUNCTION CALLS ]#########################################################

  function-calls:
    # Functions in a user-defined namespace should only be highlighted as user,
    # any built-in function names should not be highlighted specially
    - match: \\?(?=(?:{{identifier}}\\)+{{identifier}}\s*\()
      scope: punctuation.accessor.namespace.php
      push:
        - maybe-item-access
        - function-call-arguments
        - function-call-identifier
        - qualified-function-name
    # Built-in functions which belong to reserved words are consumed
    # even if not followed by arguments list.
    - match: ((\\)({{builtin_functions}}))|({{builtin_functions}})
      captures:
        1: meta.path.php
        2: punctuation.accessor.namespace.php
        3: support.function.builtin.php
        4: support.function.builtin.php
      push:
        - maybe-item-access
        - function-call-arguments
        - function-call-identifier
    # Root namespace function calls may be a built-in or user
    - match: \\(?={{identifier}}\s*\()
      scope: punctuation.accessor.namespace.php
      push:
        - maybe-item-access
        - function-call-arguments
        - function-call-identifier
        - qualified-path-meta
        - unqualified-function-name
    # Unqualified function calls may be a built-in or user
    - match: (?={{identifier}}\s*\()
      scope: punctuation.accessor.namespace.php
      push:
        - maybe-item-access
        - function-call-arguments
        - function-call-identifier
        - unqualified-function-name
    # Function invocation with function name as variable
    - match: ((\$+){{identifier}})\s*(?=(?:\[.*?\]\s*)?\()
      scope: meta.function-call.identifier.php
      captures:
        1: variable.other.php
        2: punctuation.definition.variable.php
      push:
        - maybe-item-access
        - function-call-arguments
        - maybe-item-access

  qualified-path-meta:
    - meta_include_prototype: false
    - meta_scope: meta.path.php
    - include: immediately-pop

  qualified-function-name:
    - meta_include_prototype: false
    - meta_scope: meta.path.php
    - include: namespace-qualifiers
    - include: user-function-name
    - include: immediately-pop

  unqualified-function-name:
    - meta_include_prototype: false
    - include: support-function-name
    - include: user-function-name
    - include: immediately-pop

  user-function-name:
    - match: '{{identifier}}'
      scope: variable.function.php
      pop: 1

  function-call-identifier:
    - meta_include_prototype: false
    - meta_scope: meta.function-call.identifier.php
    - include: else-pop

  function-call-arguments:
    - meta_include_prototype: false
    - meta_content_scope: meta.function-call.identifier.php
    - match: (\()\s*(\.\.\.)\s*(\))
      scope: meta.function-call.arguments.php meta.group.php
      captures:
        1: punctuation.section.group.begin.php
        2: constant.other.placeholder.php
        3: punctuation.section.group.end.php
      pop: 1
    - match: \(
      scope: punctuation.section.group.begin.php
      set: function-call-arguments-body
    - include: immediately-pop

  function-call-arguments-body:
    - meta_scope: meta.function-call.arguments.php meta.group.php
    - match: \)
      scope: punctuation.section.group.end.php
      pop: 1
    - include: function-call-named-arguments
    - include: nested-expressions

  function-call-named-arguments:
    # https://wiki.php.net/rfc/named_params
    - match: ({{identifier}})\s*(:(?!:))
      captures:
        1: variable.parameter.named.php
        2: keyword.operator.assignment.php
      push: single-expression

###[ MATCHES ]################################################################

  matches:
    # https://www.php.net/manual/de/control-structures.match.php
    - match: (?i:match)\s*(?=\()
      scope: keyword.control.conditional.match.php
      push:
        - match-meta
        - match-block
        - match-arguments

  match-meta:
    - meta_include_prototype: false
    - meta_scope: meta.match.php
    - include: immediately-pop

  match-arguments:
    - meta_include_prototype: false
    - match: \(
      scope: punctuation.section.group.begin.php
      set: match-arguments-body
    - include: immediately-pop

  match-arguments-body:
    - clear_scopes: 1
    - meta_scope: meta.match.arguments.php meta.group.php
    - match: \)
      scope: punctuation.section.group.end.php
      pop: 1
    - include: nested-expressions

  match-block:
    - match: \{
      scope: punctuation.section.block.begin.php
      set: block-body
    - include: else-pop

###[ INCLUDES ]###############################################################

  includes:
    - match: '{{include_directives}}'
      scope: keyword.control.import.include.php
      push: include-expression

  include-expression:
    - meta_scope: meta.include.php
    - include: single-expression

###[ INSTANTIATIONS ]#########################################################

  instantiations:
    - match: (?i:new)\b
      scope: keyword.other.new.php
      push:
        - instantiation-meta
        - instantiation-body

  instantiation-meta:
    - meta_include_prototype: false
    - meta_scope: meta.instantiation.php
    - include: immediately-pop

  instantiation-body:
    - include: attributes
    - include: comments
    # such as "readonly" anonymous class
    - match: '{{storage_modifiers}}'
      scope: storage.modifier.php
    # anonymous class ( http://php.net/manual/en/language.oop5.anonymous.php )
    - match: (?i:class)\b
      scope: meta.class.php keyword.declaration.class.php
      set:
        - class-declaration-body
        - instantiation-arguments
    - match: (?=\S)
      set:
        - instantiation-arguments
        - instantiation-class

  instantiation-class:
    - meta_include_prototype: false
    - include: binding
    - include: class-name
    - include: variables
    - include: immediately-pop

  instantiation-arguments:
    - match: \(
      scope: punctuation.section.group.begin.php
      set: instantiation-arguments-body
    - include: comments
    - include: else-pop

  instantiation-arguments-body:
    - meta_scope: meta.group.php
    - include: function-call-arguments-body

###[ INTERPOLATIONS ]#########################################################

  interpolations:
    # PHP variable/expressions interpolated into foreign
    # source code without clearing any string scopes.
    #
    # Prevents: "c:\{$foo}"
    - match: \\\{
    # Handles: "foo{$bar}baz"
    - match: \{(?=\$)
      scope: punctuation.section.interpolation.begin.php
      push: interpolation-braced-expression
    # Handles: "foo${bar}baz"
    - match: \$\{
      scope: punctuation.definition.variable.begin.php
      push: interpolation-braced-variable
    # Handles: $foo, $foo[0], $foo[$bar], $foo->bar
    - match: (?=\${{identifier_start}})
      push: interpolation-literal-variable

  interpolation-braced-expression:
    - meta_include_prototype: false
    - meta_scope: meta.interpolation.php
    - match: \}
      scope: punctuation.section.interpolation.end.php
      pop: 1
    - include: expressions

  interpolation-braced-variable:
    - meta_include_prototype: false
    - meta_scope: meta.interpolation.php meta.variable.php
    - include: variable-body

  interpolation-literal-variable:
    - meta_include_prototype: false
    - meta_scope: meta.interpolation.php
    - match: (\$){{builtin_global_variables}}
      scope: variable.language.global.php
      captures:
        1: punctuation.definition.variable.php
    - match: (\$)this\b
      scope: variable.language.this.php
      captures:
        1: punctuation.definition.variable.php
    - match: (\$){{identifier}}
      scope: variable.other.php
      captures:
        1: punctuation.definition.variable.php
    - match: (\??)(->)({{identifier}})
      captures:
        1: punctuation.accessor.nullsafe.php
        2: punctuation.accessor.arrow.php
        3: variable.other.member.php
    - match: \[
      scope: punctuation.section.brackets.begin.php
      push: interpolation-item-access
    - include: dereference-operators
    - include: immediately-pop

  interpolation-item-access:
    - meta_scope: meta.item-access.php
    - match: \]
      scope: punctuation.section.brackets.end.php
      pop: 1
    - include: numbers
    - include: variables
    - include: constants
    - include: else-pop

###[ ARRAYS ]#################################################################

  arrays:
    - match: (\[)\s*(\])
      scope: meta.sequence.array.empty.php
      captures:
        1: punctuation.section.sequence.begin.php
        2: punctuation.section.sequence.end.php
    - match: \[
      scope: punctuation.section.sequence.begin.php
      push: array-body

  array-body:
    - meta_scope: meta.sequence.array.php
    - match: \]
      scope: punctuation.section.sequence.end.php
      pop: 1
    - include: nested-expressions

  maybe-item-access:
    - match: \[
      scope: punctuation.section.brackets.begin.php
      push: item-access-body
    - include: else-pop

  item-access-body:
    - meta_scope: meta.item-access.php
    - match: \]
      scope: punctuation.section.brackets.end.php
      pop: 1
    - include: nested-expressions

  stray-brackets:
    - match: \]
      scope: punctuation.section.brackets.end.php

###[ ATTRIBUTES ]#############################################################

  attributes:
    # https://wiki.php.net/rfc/attributes_v2
    # https://wiki.php.net/rfc/attribute_amendments
    # https://wiki.php.net/rfc/shorter_attribute_syntax
    # https://wiki.php.net/rfc/shorter_attribute_syntax_change
    - match: \#\[
      scope: punctuation.definition.annotation.begin.php
      push: attribute-body

  attribute-body:
    - meta_scope: meta.annotation.php
    - match: \]
      scope: punctuation.definition.annotation.end.php
      pop: 1
    - match: \(
      scope: punctuation.section.group.begin.php
      push: attribute-arguments-body
    - include: punctuation-separators
    - include: attribute-names
    - include: expression-end-pop

  attribute-arguments-body:
    - clear_scopes: 1
    - meta_scope: meta.annotation.arguments.php meta.group.php
    - include: function-call-arguments-body

  attribute-names:
    - match: ({{identifier}})?(\\)
      captures:
        1: variable.namespace.php
        2: punctuation.accessor.namespace.php
      push: qualified-attribute-name
    - match: (?={{identifier_start}})
      push: unqualified-attribute-name

  qualified-attribute-name:
    - clear_scopes: 1
    - meta_include_prototype: false
    - meta_scope: meta.annotation.identifier.php meta.path.php
    - include: namespace-qualifiers
    - include: unqualified-attribute-name

  unqualified-attribute-name:
    - clear_scopes: 1
    - meta_include_prototype: false
    - meta_scope: meta.annotation.identifier.php
    - match: '{{identifier}}'
      scope: variable.annotation.php
      pop: 1
    - include: immediately-pop

###[ TYPE CASTS ]#############################################################

  type-casts:
    # https://www.php.net/manual/en/language.types.type-juggling.php
    - match: (\()\s*((?i:{{storage_types}}|binary|unset))\s*(\))
      scope: meta.cast.php
      captures:
        1: punctuation.section.cast.begin.php
        2: storage.type.primitive.php
        3: punctuation.section.cast.end.php

###[ TYPE HINTS ]#############################################################

  expect-type-hint:
    - include: attributes
    - include: comments
    # https://wiki.php.net/rfc/union_types_v2
    - match: (?=\S)
      set:
        - type-hint-body
        - type-hint-simple-type

  type-hint-body:
    - meta_scope: meta.type.php
    - match: \(
      scope: punctuation.section.group.begin.php
      push:
        - type-hint-group-body
        - type-hint-simple-type
    - match: \|
      scope: punctuation.separator.type.union.php
      push: type-hint-simple-type
    - match: \&(?!\s*\$)  # references have precedence
      scope: punctuation.separator.type.intersection.php
      push: type-hint-simple-type
    - include: comments
    - include: else-pop

  type-hint-group-body:
    - meta_scope: meta.group.php
    - match: \)
      scope: punctuation.section.group.end.php
      pop: 1
    - include: type-hint-body

  type-hint-simple-type:
    # note that
    #   - "callable", "never" and "void" are not allowed in property type
    # but we allow them as general types for simplifying syntax definition
    - match: (?i:iterable|false|mixed|never|null|true|void|{{storage_types}})\b
      scope: storage.type.primitive.php
      pop: 1
    - match: (?=(?i:extends|implements)\b)
      pop: 1
    - include: expression-end-pop
    - match: \?
      scope: storage.type.nullable.php
    - include: binding
    - include: class-name
    - include: comments
    - include: else-pop

###[ CLASSES ]################################################################

  static-classes:
    - match: (?=[[:alnum:]_\\]+::)
      push: static-class-name

  static-class-name:
    - meta_include_prototype: false
    - include: binding
    - include: class-name
    - include: immediately-pop

  class-names:
    - match: ({{identifier}})?(\\)
      captures:
        1: variable.namespace.php
        2: punctuation.accessor.namespace.php
      push: qualified-class-name
    - match: (?={{identifier_start}})
      push: unqualified-class-name

  class-name:
    - match: ({{identifier}})?(\\)
      captures:
        1: variable.namespace.php
        2: punctuation.accessor.namespace.php
      set: qualified-class-name
    - match: (?={{identifier_start}})
      set: unqualified-class-name

  qualified-class-name:
    - meta_include_prototype: false
    - meta_scope: meta.path.php
    - include: namespace-qualifiers
    - include: unqualified-class-name

  unqualified-class-name:
    - meta_include_prototype: false
    - include: support-class-name
    - include: user-class-name
    - include: immediately-pop

  support-class-name:
    - match: '{{builtin_classes}}'
      scope: support.class.builtin.php
      pop: 1

  user-class-name:
    - match: '{{identifier}}'
      scope: support.class.php
      pop: 1

  inherited-class-names:
    - match: ({{identifier}})?(\\)
      captures:
        1: variable.namespace.php
        2: punctuation.accessor.namespace.php
      push: qualified-inherited-class-name
    - match: (?={{identifier_start}})
      push: unqualified-inherited-class-name

  inherited-class-name:
    - match: ({{identifier}})?(\\)
      captures:
        1: variable.namespace.php
        2: punctuation.accessor.namespace.php
      set: qualified-inherited-class-name
    - match: (?={{identifier_start}})
      set: unqualified-inherited-class-name

  qualified-inherited-class-name:
    - meta_include_prototype: false
    - meta_scope: meta.path.php
    - include: namespace-qualifiers
    - include: unqualified-inherited-class-name

  unqualified-inherited-class-name:
    - meta_include_prototype: false
    - include: inherited-support-class-name
    - include: inherited-user-class-name
    - include: immediately-pop

  inherited-support-class-name:
    - match: '{{builtin_classes}}'
      scope: entity.other.inherited-class.php support.class.builtin.php
      pop: 1

  inherited-user-class-name:
    - match: '{{identifier}}'
      scope: entity.other.inherited-class.php
      pop: 1

###[ CONSTANTS ]##############################################################

  constants:
    - match: (?i:true|false)\b
      scope: constant.language.boolean.php
    - match: (?i:null)\b
      scope: constant.language.null.php
    - match: (?i:__CLASS__|__DIR__|__FILE__|__FUNCTION__|__LINE__|__METHOD__|__NAMESPACE__)\b
      scope: constant.language.builtin.php
    - match: ({{identifier}})?(\\)
      captures:
        1: variable.namespace.php
        2: punctuation.accessor.namespace.php
      push:
        - maybe-item-access
        - qualified-constant
    - match: (?={{identifier_start}})
      push:
        - maybe-item-access
        - unqualified-constant

  qualified-constant:
    - meta_include_prototype: false
    - meta_scope: meta.path.php
    - include: namespace-qualifiers
    - include: unqualified-constant

  unqualified-constant:
    - meta_include_prototype: false
    - include: support-constant-name
    - include: user-constant-name
    - include: immediately-pop

  support-constant-name:
    - match: '{{constants_core}}'
      scope: support.constant.core.php
      pop: 1
    - match: '{{constants_std}}'
      scope: support.constant.std.php
      pop: 1
    - match: '{{constants_ext}}'
      scope: support.constant.ext.php
      pop: 1
    - match: '{{constants_parser_tokens}}'
      scope: support.constant.parser-token.php
      pop: 1

  user-constant-name:
    # In PHP, any identifier which is not a variable is taken to be a constant.
    # However, if there is no constant defined with the given name then a notice
    # is generated and the constant is assumed to have the value of its name.
    - match: '{{identifier}}'
      scope: constant.other.php
      pop: 1

###[ LITERALS ]###############################################################

  bindings:
    # Note: `static` is skipped as this context is included in global
    # `expressions` which the keyword is to be scoped `storage.modifier` in.
    # https://www.php.net/manual/en/language.oop5.late-static-bindings.php
    - match: (?i:parent)\b
      scope: variable.language.super.php
    - match: (?i:self)\b
      scope: variable.language.this.php

  binding:
    - match: (?i:parent)\b
      scope: variable.language.super.php
      pop: 1
    - match: (?i:self)\b
      scope: variable.language.this.php
      pop: 1
    - match: (?i:static)\b
      scope: variable.language.static.php
      pop: 1

  keywords:
    # fallback patterns incase no other expression matches
    - match: (?i:as)\b
      scope: keyword.other.as.php
    - match: (?i:clone)\b
      scope: keyword.other.clone.php
    - match: (?i:insteadof)\b
      scope: keyword.other.insteadof.php
    # yield from ( http://php.net/manual/en/language.generators.syntax.php#control-structures.yield.from )
    - match: (?i:yield)\b
      scope: keyword.control.flow.yield.php
      push: yield-from

  yield-from:
    - match: (?i:from)\b
      scope: keyword.control.flow.yield.php
      pop: 1
    - include: comments
    - include: else-pop

  # Trailing underscores are allowed to prevent numbers from flickering while typing
  # The underscore is for PHP 7.4: https://wiki.php.net/rfc/numeric_literal_separator
  numbers:
    - match: (0[bB])((?!_)(?:[01]|_(?!_))*)\b
      scope: meta.number.integer.binary.php
      captures:
        1: constant.numeric.base.php
        2: constant.numeric.value.php
    - match: (0[oO])((?!_)(?:\h|_(?!_))*)\b
      scope: meta.number.integer.octal.php
      captures:
        1: constant.numeric.base.php
        2: constant.numeric.value.php
    - match: (0[xX])((?!_)(?:\h|_(?!_))*)\b
      scope: meta.number.integer.hexadecimal.php
      captures:
        1: constant.numeric.base.php
        2: constant.numeric.value.php
    - match: |-
        (?x:
          (?:
            (?# such as 123.4 or .123)
            (?:\b(?!_)(?:\d|_(?!_))+|\B)(\.)(?!_)(?:\d|_(?!_))+
            |
            (?# such as 123.)
            \b(?!_)(?:\d|_(?!_))+(\.)
          )(?:[eE][+-]?(?!_)(?:\d|_(?!_))+)?\b
          |
          (?# such as 123e-4)
          \b(?!_)(?:\d|_(?!_))+(?:[eE][+-]?(?!_)(?:\d|_(?!_))+)\b
        )
      scope: meta.number.float.decimal.php constant.numeric.value.php
      captures:
        1: punctuation.separator.decimal.php
        2: punctuation.separator.decimal.php
    - match: (?!_)(?:\d|_(?!_))+\b
      scope: meta.number.integer.decimal.php constant.numeric.value.php

  modifiers:
    - include: global-modifiers
    - include: storage-modifiers

  access-modifiers:
    - match: '{{access_modifier}}'
      scope: storage.modifier.access.php

  global-modifiers:
    - match: '{{global_modifier}}'
      scope: storage.modifier.namespace.php

  static-modifiers:
    - match: '{{static_modifier}}'
      scope: storage.modifier.namespace.php

  storage-modifiers:
    - match: (?i:extends)\b
      scope: storage.modifier.extends.php
    - match: (?i:implements)\b
      scope: storage.modifier.implements.php
    - match: '{{storage_modifiers}}'
      scope: storage.modifier.php

  types:
    - match: '{{storage_types}}'
      scope: storage.type.primitive.php

###[ MEMBER ACCESS ]##########################################################

  members:
    - match: (\??)(->)
      captures:
        1: punctuation.accessor.nullsafe.php
        2: punctuation.accessor.arrow.php
      push:
        - maybe-item-access
        - object-member
    - match: '::'
      scope: punctuation.accessor.double-colon.php
      push:
        - maybe-item-access
        - static-member

  object-member:
    - meta_include_prototype: false
    - include: method-call
    - include: member-variable
    - include: immediately-pop

  static-member:
    - meta_include_prototype: false
    - match: (?i:class)\b
      scope: variable.language.class.java
      pop: 1
    - include: method-call
    - include: member-constant
    - include: member-variable
    - include: immediately-pop

  member-constant:
    - match: '{{guarded_identifier}}'
      scope: constant.other.member.php
      pop: 1

  member-variable:
    - match: \$?\{
      scope: punctuation.definition.variable.begin.php
      set: variable-body
    - match: (\$?){{identifier}}
      scope: variable.other.member.php
      captures:
        1: punctuation.definition.variable.php
      pop: 1
    - include: dereference-operators

  method-call:
    # Ensure not to scope members as `support.function`
    - match: ({{identifier}})\s*(?=\()
      scope: meta.function-call.identifier.php
      captures:
        1: variable.function.php
      set: function-call-arguments
    - match: ((\$+){{identifier}})\s*(?=\()
      scope: meta.function-call.identifier.php
      captures:
        1: variable.other.member.php
        2: punctuation.definition.variable.php
      set: function-call-arguments

###[ HEREDOCS ]###############################################################

  heredocs:
    - match: (?=<<<\s*'?({{identifier}})'?\s*$)
      push: heredoc-content

  heredoc-content:
    - match: ^\s*(\1)\b(?:(;)(\s*$\n?))?
      captures:
        1: meta.tag.heredoc.php entity.name.tag.heredoc.php
        2: punctuation.terminator.statement.php
        3: meta.heredoc-end.php
      pop: 1
    - include: heredoc-css
    - include: heredoc-html
    - include: heredoc-javascript
    - include: heredoc-json
    - include: heredoc-sql
    - include: heredoc-xml
    - include: heredoc-yaml
    - include: heredoc-plain

  heredoc-css:
    - match: (<<<)\s*(?i:(CSS))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php entity.name.tag.heredoc.php
      embed: scope:source.css.interpolated.php
      embed_scope: meta.embedded.css source.css.embedded.php
      escape: '{{heredoc_unquoted_end}}'
    - match: (<<<)\s*((')(?i:(CSS))('))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php
        3: punctuation.definition.tag.begin.php
        4: entity.name.tag.heredoc.php
        5: punctuation.definition.tag.end.php
      embed: scope:source.css
      embed_scope: meta.embedded.css source.css.embedded.php
      escape: '{{heredoc_quoted_end}}'

  heredoc-html:
    - match: (<<<)\s*(?i:(HTML))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php entity.name.tag.heredoc.php
      embed: scope:text.html.interpolated.php
      embed_scope: meta.embedded.html text.html.embedded.php
      escape: '{{heredoc_unquoted_end}}'
    - match: (<<<)\s*((')(?i:(HTML))('))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php
        3: punctuation.definition.tag.begin.php
        4: entity.name.tag.heredoc.php
        5: punctuation.definition.tag.end.php
      embed: scope:text.html.basic
      embed_scope: meta.embedded.html text.html.embedded.php
      escape: '{{heredoc_quoted_end}}'

  heredoc-javascript:
    - match: (<<<)\s*(?i:(JAVASCRIPT|JS))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php entity.name.tag.heredoc.php
      embed: scope:source.js.interpolated.php
      embed_scope: meta.embedded.js source.js.embedded.php
      escape: '{{heredoc_unquoted_end}}'
    - match: (<<<)\s*((')(?i:(JAVASCRIPT|JS))('))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php
        3: punctuation.definition.tag.begin.php
        4: entity.name.tag.heredoc.php
        5: punctuation.definition.tag.end.php
      embed: scope:source.js
      embed_scope: meta.embedded.js source.js.embedded.php
      escape: '{{heredoc_quoted_end}}'

  heredoc-json:
    - match: (<<<)\s*(?i:(JSON))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php entity.name.tag.heredoc.php
      embed: scope:source.json.interpolated.php
      embed_scope: meta.embedded.json source.json.embedded.php
      escape: '{{heredoc_unquoted_end}}'
    - match: (<<<)\s*((')(?i:(JSON))('))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php
        3: punctuation.definition.tag.begin.php
        4: entity.name.tag.heredoc.php
        5: punctuation.definition.tag.end.php
      embed: scope:source.json
      embed_scope: meta.embedded.json source.json.embedded.php
      escape: '{{heredoc_quoted_end}}'

  heredoc-sql:
    - match: (<<<)\s*(?i:(SQL))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php entity.name.tag.heredoc.php
      embed: scope:source.sql.interpolated.php
      embed_scope: meta.embedded.sql source.sql.embedded.php
      escape: '{{heredoc_unquoted_end}}'
    - match: (<<<)\s*((')(?i:(SQL))('))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php
        3: punctuation.definition.tag.begin.php
        4: entity.name.tag.heredoc.php
        5: punctuation.definition.tag.end.php
      embed: scope:source.sql
      embed_scope: meta.embedded.sql source.sql.embedded.php
      escape: '{{heredoc_quoted_end}}'

  heredoc-yaml:
    - match: (<<<)\s*(?i:(YA?ML))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php entity.name.tag.heredoc.php
      embed: scope:source.yaml.interpolated.php
      embed_scope: meta.embedded.yaml source.yaml.embedded.php
      escape: '{{heredoc_unquoted_end}}'
    - match: (<<<)\s*((')(?i:(YA?ML))('))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php
        3: punctuation.definition.tag.begin.php
        4: entity.name.tag.heredoc.php
        5: punctuation.definition.tag.end.php
      embed: scope:source.yaml
      embed_scope: meta.embedded.yaml source.yaml.embedded.php
      escape: '{{heredoc_quoted_end}}'

  heredoc-xml:
    - match: (<<<)\s*(?i:(XML))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php entity.name.tag.heredoc.php
      embed: scope:text.xml.interpolated.php
      embed_scope: meta.embedded.xml text.xml.embedded.php
      escape: '{{heredoc_unquoted_end}}'
    - match: (<<<)\s*((')(?i:(XML))('))\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php
        3: punctuation.definition.tag.begin.php
        4: entity.name.tag.heredoc.php
        5: punctuation.definition.tag.end.php
      embed: scope:text.xml
      embed_scope: meta.embedded.xml text.xml.embedded.php
      escape: '{{heredoc_quoted_end}}'

  heredoc-plain:
    - match: (<<<)\s*({{identifier}})\s*$\n?
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php entity.name.tag.heredoc.php
      push: heredoc-plain-interpolated-content
    - match: (<<<)\s*((')({{identifier}})('))
      captures:
        1: keyword.operator.heredoc.php
        2: meta.string.heredoc.php meta.tag.heredoc.php
        3: punctuation.definition.tag.begin.php
        4: entity.name.tag.heredoc.php
        5: punctuation.definition.tag.end.php
      push: heredoc-plain-content

  heredoc-plain-interpolated-content:
    - meta_content_scope: meta.string.heredoc.php string.unquoted.heredoc.php
    - match: '{{heredoc_unquoted_end}}'
      pop: 1
    - include: string-escapes
    - include: string-placeholders
    - include: string-interpolations

  heredoc-plain-content:
    - meta_content_scope: meta.string.heredoc.php string.unquoted.heredoc.php
    - match: '{{heredoc_quoted_end}}'
      pop: 1
    - include: string-placeholders

###[ STRINGS ]################################################################

  strings:
    - include: strings-backtick-quoted
    - include: strings-double-quoted
    - include: strings-single-quoted


  strings-backtick-quoted:
    - match: \`
      scope: punctuation.definition.string.begin.php
      push: string-backtick-quoted-content

  string-backtick-quoted-content:
    - meta_scope: meta.string.php string.quoted.other.php
    - match: \`
      scope: punctuation.definition.string.end.php
      pop: 1
    - include: string-escapes
    - include: string-interpolations
    - match: \\.
      scope: constant.character.escape.php


  strings-double-quoted:
    - match: (?="/)
      branch_point: branch-point-double-quoted
      branch:
        - string-double-quoted-regexp
        - string-double-quoted-plain
    - match: \"
      scope: string.quoted.double.php punctuation.definition.string.begin.php
      push: string-double-quoted-content

  string-double-quoted-end:
    - match: \"
      scope: string.quoted.double.php punctuation.definition.string.end.php
      pop: 1

  string-double-quoted-content:
    - meta_include_prototype: false
    - meta_scope: meta.string.php
    - meta_content_scope: string.quoted.double.php
    - match: (?={{sql_indicator}})
      set:
        - nested-sql-expressions
        - string-double-quoted-sql-content
    - match: (?=\S)
      set: string-double-quoted-plain-content

  string-double-quoted-regexp:
    - match: (")(/)
      captures:
        1: punctuation.definition.string.begin.php
        2: punctuation.definition.string.regex-delimiter.begin.php
      set: string-double-quoted-regexp-content

  string-double-quoted-regexp-content:
    - meta_scope: meta.string.php string.quoted.double.php
    - match: (/)({{regex_modifier}})(")
      captures:
        1: punctuation.definition.string.regex-delimiter.end.php
        2: meta.regex.modifier.php
        3: punctuation.definition.string.end.php
      pop: 1
    - match: \"
      fail: branch-point-double-quoted
    - match: ''
      push: scope:source.regexp.php
      with_prototype:
        - match: (?=/{{regex_modifier}}"|")
          pop: 1
        - match: \s((#)[^"]*$\n?)
          captures:
            1: comment.regexp.php
            2: punctuation.definition.comment.regexp.php
        - include: string-escapes
        - include: regexp-interpolations

  string-double-quoted-plain:
    - match: \"
      scope: string.quoted.double.php punctuation.definition.string.begin.php
      set: string-double-quoted-plain-content

  string-double-quoted-plain-content:
    - meta_include_prototype: false
    - meta_scope: meta.string.php
    - meta_content_scope: string.quoted.double.php
    - include: string-double-quoted-end
    - include: string-escapes
    - include: string-placeholders
    - include: string-interpolations

  string-double-quoted-sql-content:
    - match: ''
      pop: 1
      embed: scope:source.sql.interpolated.php
      embed_scope: meta.string.php source.sql.embedded.php
      escape: '{{no_escape_behind}}"'
      escape_captures:
        0: meta.string.php string.quoted.double.php punctuation.definition.string.end.php


  strings-single-quoted:
    - match: (?='/)
      branch_point: branch-point-single-quoted
      branch:
        - string-single-quoted-regexp
        - string-single-quoted-plain
    - match: \'
      scope: string.quoted.single.php punctuation.definition.string.begin.php
      push: string-single-quoted-content

  string-single-quoted-end:
    - match: \'
      scope: string.quoted.single.php punctuation.definition.string.end.php
      pop: 1

  string-single-quoted-content:
    - meta_include_prototype: false
    - meta_scope: meta.string.php
    - meta_content_scope: string.quoted.single.php
    - include: string-single-quoted-end
    - match: (?={{sql_indicator}})
      set:
        - nested-sql-expressions
        - string-single-quoted-sql-content
    - match: (?=\S)
      scope: punctuation.definition.string.begin.php
      set: string-single-quoted-plain-content

  string-single-quoted-regexp:
    - match: (')(/)
      captures:
        1: punctuation.definition.string.begin.php
        2: punctuation.definition.string.regex-delimiter.begin.php
      set: string-single-quoted-regexp-content

  string-single-quoted-regexp-content:
    - meta_scope: meta.string.php string.quoted.single.php
    - match: (/)({{regex_modifier}})(')
      captures:
        1: punctuation.definition.string.regex-delimiter.end.php
        2: meta.regex.modifier.php
        3: punctuation.definition.string.end.php
      pop: 1
    - match: \'
      fail: branch-point-single-quoted
    - match: ''
      push: scope:source.regexp.php
      with_prototype:
        - match: (?=/{{regex_modifier}}'|')
          pop: 1
        - match: \s((#)[^']*$\n?)
          captures:
            1: comment.regexp.php
            2: punctuation.definition.comment.regexp.php
        - match: \\'
          scope: constant.character.escape.php

  string-single-quoted-plain:
    - match: \'
      scope: string.quoted.single.php punctuation.definition.string.begin.php
      set: string-single-quoted-plain-content

  string-single-quoted-plain-content:
    - meta_include_prototype: false
    - meta_scope: meta.string.php
    - meta_content_scope: string.quoted.single.php
    - include: string-single-quoted-end
    - include: string-single-quoted-placeholders
    - match: \\[\\'']
      scope: constant.character.escape.php

  string-single-quoted-sql-content:
    - match: ''
      pop: 1
      embed: scope:source.sql.embedded.php  # no interpolation
      embed_scope: meta.string.php source.sql.embedded.php
      escape: "{{no_escape_behind}}'"
      escape_captures:
        0: meta.string.php string.quoted.single.php punctuation.definition.string.end.php

  nested-sql-expressions:
    - match: \"
      scope: meta.string.php string.quoted.double.php punctuation.definition.string.begin.php
      embed: scope:source.sql.interpolated.php
      embed_scope: meta.string.php source.sql.embedded.php
      escape: '{{no_escape_behind}}"'
      escape_captures:
        0: meta.string.php string.quoted.double.php punctuation.definition.string.end.php
    - match: \'
      scope: meta.string.php string.quoted.single.php punctuation.definition.string.begin.php
      embed: scope:source.sql.embedded.php  # no interpolation
      embed_scope: meta.string.php source.sql.embedded.php
      escape: "{{no_escape_behind}}'"
      escape_captures:
        0: meta.string.php string.quoted.single.php punctuation.definition.string.end.php
    - include: single-expression

  string-escapes:
    - match: \\[0-7]{1,3}
      scope: constant.character.escape.octal.php
    - match: \\x[0-9A-Fa-f]{1,2}
      scope: constant.character.escape.hex.php
    - match: \\u\{[0-9A-Fa-f]+\}
      scope: constant.character.escape.unicodepoint.php
    - match: \\[nrt\\\$\"]
      scope: constant.character.escape.php

  string-placeholders:
    # https://www.php.net/manual/en/function.printf.php
    # https://www.php.net/manual/en/function.strftime
    - match: '%%'
      scope: constant.character.escape.php
    # %[argnum$][flags][width][.precision]specifier
    - match: |-
        (?x)
        (%)                         # punctuation
        (?: \d+\$ )?                # argnum
        [-+]? (?: [ 0] | '. )?      # flags
        \d*                         # width
        (?: (\.) \d* )?             # precision
        [ABCDEFGHIMPRSTUVWXYZabcdefghjklmnoprstuwxyz] # specifier
      scope: constant.other.placeholder.php
      captures:
        1: punctuation.definition.placeholder.php
        2: punctuation.separator.decimal.php

  string-single-quoted-placeholders:
    # https://www.php.net/manual/en/function.printf.php
    # https://www.php.net/manual/en/function.strftime
    - match: '%%'
      scope: constant.character.escape.php
    # %[argnum$][flags][width][.precision]specifier
    - match: |-
        (?x)
        (%)                         # punctuation
        (?: \d+\$ )?                # argnum
        [-+]? (?: [ 0] | \\'. )?    # flags
        \d*                         # width
        (?: (\.) \d* )?             # precision
        [ABCDEFGHIMPRSTUVWXYZabcdefghjklmnoprstuwxyz] # specifier
      scope: constant.other.placeholder.php
      captures:
        1: punctuation.definition.placeholder.php
        2: punctuation.separator.decimal.php

  string-interpolations:
    # PHP variable/expressions interpolated into string contexts
    # by clearing the last scope on stack (hopefully the string scope).
    # Can be PHP's or embedded source code's strings.
    #
    # Prevents: "c:\{$foo}"
    - match: \\\{
    # Handles: "foo{$bar}baz"
    - match: \{(?=\$)
      scope: punctuation.section.interpolation.begin.php
      push: string-interpolation-braced-expression
    # Handles: "foo${bar}baz"
    - match: \$\{
      scope: punctuation.definition.variable.begin.php
      push: string-interpolation-braced-variable
    # Handles: $foo, $foo[0], $foo[$bar], $foo->bar
    - match: (?=\${{identifier_start}})
      push: string-interpolation-literal-variable

  string-interpolation-braced-expression:
    - clear_scopes: 1
    - meta_include_prototype: false
    - meta_scope: meta.interpolation.php
    - include: interpolation-braced-expression

  string-interpolation-braced-variable:
    - clear_scopes: 1
    - meta_include_prototype: false
    - meta_scope: meta.interpolation.php meta.variable.php
    - include: interpolation-braced-variable

  string-interpolation-literal-variable:
    - clear_scopes: 1
    - meta_include_prototype: false
    - meta_scope: meta.interpolation.php
    - include: interpolation-literal-variable

  regexp-interpolations:
    # PHP variable/expressions interpolated into regular expression contexts
    # by clearing the last two scopes on stack (string and source.regexp scope).
    # To clear string scope source.regexp scope needs to be removed, too.
    #
    # Prevents: "c:\{$foo}"
    - match: \\\{
    # Handles: "foo{$bar}baz"
    - match: \{(?=\$)
      scope: punctuation.section.interpolation.begin.php
      push: regexp-interpolation-braced-expression
    # Handles: "foo${bar}baz"
    - match: \$\{
      scope: punctuation.definition.variable.begin.php
      push: regexp-interpolation-braced-variable
    # Handles: $foo, $foo[0], $foo[$bar], $foo->bar
    - match: (?=\${{identifier_start}})
      push: regexp-interpolation-literal-variable

  regexp-interpolation-braced-expression:
    - clear_scopes: 2
    - meta_include_prototype: false
    - meta_scope: source.regexp.php meta.interpolation.php
    - include: interpolation-braced-expression

  regexp-interpolation-braced-variable:
    - clear_scopes: 2
    - meta_include_prototype: false
    - meta_scope: source.regexp.php meta.interpolation.php meta.variable.php
    - include: interpolation-braced-variable

  regexp-interpolation-literal-variable:
    - clear_scopes: 2
    - meta_include_prototype: false
    - meta_scope: source.regexp.php meta.interpolation.php
    - include: interpolation-literal-variable

###[ OPERATORS ]##############################################################

  operators:
    - include: variadic-operators
    - match: <\?(?i:php\b|(?!php)ph?|=)?
      scope: punctuation.section.embedded.begin.php
    - match: =>
      scope: punctuation.separator.key-value.php
    - match: (?:\+|-|\*|/|%|&|\||\^|>>|<<|\.|\?\?)=
      scope: keyword.operator.assignment.augmented.php
    - match: (?:(=)(&))|(&(?=[[:alpha:]$_]))
      captures:
        1: keyword.operator.assignment.php
        2: keyword.operator.reference.php
        3: keyword.operator.reference.php
    - match: \|\||&&
      scope: keyword.operator.logical.php
    - match: <<|>>|~|\^|&|\|
      scope: keyword.operator.bitwise.php
    - match: ===|!==|<=>|==|!=|<=|>=|<>|<|>
      scope: keyword.operator.comparison.php
    - match: \?\?
      scope: keyword.operator.null-coalescing.php
    # single char operators
    - match: '[-+*/%]'
      scope: keyword.operator.arithmetic.php
    - match: =
      scope: keyword.operator.assignment.php
    - match: \@
      scope: keyword.operator.error-control.php
    - match: \!
      scope: keyword.operator.logical.php
    - match: \.
      scope: keyword.operator.concatenation.php
    - match: \?(?!>)
      scope: keyword.operator.ternary.php
      push: ternary-expression
    - match: ':(?!:)'
      scope: punctuation.separator.colon.php
    - include: punctuation-separators
    # word-like operators
    - match: '{{logical_operators}}'
      scope: keyword.operator.logical.php
    - match: (?i:instanceof)\b
      scope: keyword.other.instanceof.php
      push: instanceof-operand

  dereference-operators:
    - match: \$(?=\$)
      scope: keyword.operator.dereference.php
    - match: \$
      scope: punctuation.definition.variable.php

  instanceof-operand:
    - include: binding
    - include: class-name
    - include: attributes
    - include: comments
    - include: else-pop

  ternary-expression:
    - match: ':(?!:)'
      scope: keyword.operator.ternary.php
      pop: 1
    - include: nested-expressions

  variadic-operators:
    - match: \.\.\.
      scope: keyword.operator.variadic.php

  punctuation-separators:
    - match: ','
      scope: punctuation.separator.sequence.php

  punctuation-terminators:
    - match: ;
      scope: punctuation.terminator.statement.php

  reference-modifiers:
    - match: '&'
      scope: keyword.operator.reference.php

###[ VARIABLES ]##############################################################

  variables:
    - match: \$\{
      scope: punctuation.definition.variable.begin.php
      push: [maybe-item-access, variable-body]
    - match: (\$){{builtin_global_variables}}
      scope: variable.language.global.php
      captures:
        1: punctuation.definition.variable.php
      push: maybe-item-access
    - match: (\$)this\b
      scope: variable.language.this.php
      captures:
        1: punctuation.definition.variable.php
      push: maybe-item-access
    - match: (\$){{identifier}}
      scope: variable.other.php
      captures:
        1: punctuation.definition.variable.php
      push: maybe-item-access
    - include: dereference-operators

  variable-body:
    - meta_scope: meta.variable.php
    - match: \}
      scope: punctuation.definition.variable.end.php
      pop: 1
    - include: expressions

###[ PROTOTYPES ]#############################################################

  else-pop:
    - match: (?=\S)
      pop: 1

  eol-pop:
    - match: $
      pop: 1

  expression-end-pop:
    - match: '{{expression_end}}'
      pop: 1

  immediately-pop:
    - match: ''
      pop: 1

###[ BUILTINS ]###############################################################

  support-function-name:
    - match: |-
        (?xi:
          apc_add | apc_bin_dump | apc_bin_dumpfile | apc_bin_load | apc_bin_loadfile | apc_cache_info | apc_cas | apc_clear_cache |
          apc_compile_file | apc_dec | apc_define_constants | apc_delete | apc_delete_file | apc_exists | apc_fetch | apc_inc |
          apc_load_constants | apc_sma_info | apc_store
        )\b
      scope: support.function.apc.php
    - match: |-
        (?xi:
          array | array_change_key_case | array_chunk | array_column | array_combine | array_count_values | array_diff | array_diff_assoc |
          array_diff_key | array_diff_uassoc | array_diff_ukey | array_fill | array_fill_keys | array_filter | array_flip | array_intersect |
          array_intersect_assoc | array_intersect_key | array_intersect_uassoc | array_intersect_ukey | array_is_list | array_key_exists |
          array_key_first | array_key_last | array_keys | array_map | array_merge | array_merge_recursive | array_multisort | array_pad |
          array_pop | array_product | array_push | array_rand | array_reduce | array_replace | array_replace_recursive | array_reverse |
          array_search | array_shift | array_slice | array_splice | array_sum | array_udiff | array_udiff_assoc | array_udiff_uassoc |
          array_uintersect | array_uintersect_assoc | array_uintersect_uassoc | array_unique | array_unshift | array_values | array_walk |
          array_walk_recursive | arsort | asort | compact | count | current | each | end | extract | in_array | key | krsort | ksort | list |
          natcasesort | natsort | next | pos | prev | range | reset | rsort | shuffle | sizeof | sort | uasort | uksort | usort
        )\b
      scope: support.function.array.php
    - match: |-
        (?xi:
          __halt_compiler | connection_aborted | connection_status | connection_timeout | constant | define | defined | die |
          eval | exit | get_browser | highlight_file | highlight_string | ignore_user_abort | pack | php_check_syntax |
          php_strip_whitespace | show_source | sleep | sys_getloadavg | time_nanosleep | time_sleep_until | uniqid | unpack |
          usleep
        )\b
      scope: support.function.basic_functions.php
    - match: |-
        (?xi:
          bcadd | bccomp | bcdiv | bcmod | bcmul | bcpow | bcpowmod | bcscale |
          bcsqrt | bcsub
        )\b
      scope: support.function.bcmath.php
    - match: |-
        (?xi:
          bzclose | bzcompress | bzdecompress | bzerrno | bzerror | bzerrstr | bzflush | bzopen |
          bzread | bzwrite
        )\b
      scope: support.function.bz2.php
    - match: |-
        (?xi:
          FrenchToJD | GregorianToJD | JDDayOfWeek | JDMonthName | JDToFrench | JDToGregorian | JDToJulian | JewishToJD |
          JulianToJD | cal_days_in_month | cal_from_jd | cal_info | cal_to_jd | easter_date | easter_days | jdtojewish |
          jdtounix | unixtojd
        )\b
      scope: support.function.calendar.php
    - match: |-
        (?xi:
          call_user_method | call_user_method_array | class_alias | class_exists | get_called_class | get_class | get_class_methods | get_class_vars |
          get_declared_classes | get_declared_interfaces | get_object_vars | get_parent_class | interface_exists | is_a | is_subclass_of | method_exists |
          property_exists
        )\b
      scope: support.function.classobj.php
    - match: |-
        (?xi:
          com_addref | com_create_guid | com_event_sink | com_get | com_get_active_object | com_invoke | com_isenum | com_load |
          com_load_typelib | com_message_pump | com_print_typeinfo | com_propget | com_propput | com_propset | com_release | com_set |
          variant_abs | variant_add | variant_and | variant_cast | variant_cat | variant_cmp | variant_date_from_timestamp | variant_date_to_timestamp |
          variant_div | variant_eqv | variant_fix | variant_get_type | variant_idiv | variant_imp | variant_int | variant_mod |
          variant_mul | variant_neg | variant_not | variant_or | variant_pow | variant_round | variant_set | variant_set_type |
          variant_sub | variant_xor
        )\b
      scope: support.function.com.php
    - match: |-
        (?xi:
          random_bytes | random_int
        )\b
      scope: support.function.csprng.php
    - match: |-
        (?xi:
          ctype_alnum | ctype_alpha | ctype_cntrl | ctype_digit | ctype_graph | ctype_lower | ctype_print | ctype_punct |
          ctype_space | ctype_upper | ctype_xdigit
        )\b
      scope: support.function.ctype.php
    - match: |-
        (?xi:
          curl_close | curl_copy_handle | curl_errno | curl_error | curl_exec | curl_getinfo | curl_init | curl_multi_add_handle |
          curl_multi_close | curl_multi_exec | curl_multi_getcontent | curl_multi_info_read | curl_multi_init | curl_multi_remove_handle | curl_multi_select | curl_setopt |
          curl_setopt_array | curl_version
        )\b
      scope: support.function.curl.php
    - match: |-
        (?xi:
          checkdate | date | date_add | date_create | date_create_from_format | date_date_set | date_default_timezone_get | date_default_timezone_set |
          date_diff | date_format | date_get_last_errors | date_interval_create_from_date_string | date_interval_format | date_isodate_set | date_modify | date_offset_get |
          date_parse | date_parse_from_format | date_sub | date_sun_info | date_sunrise | date_sunset | date_time_set | date_timestamp_get |
          date_timestamp_set | date_timezone_get | date_timezone_set | getdate | gettimeofday | gmdate | gmmktime | gmstrftime |
          hrtime | idate | localtime | microtime | mktime | strftime | strptime | strtotime |
          time | timezone_abbreviations_list | timezone_identifiers_list | timezone_location_get | timezone_name_from_abbr | timezone_name_get | timezone_offset_get | timezone_open |
          timezone_transitions_get | timezone_version_get
        )\b
      scope: support.function.datetime.php
    - match: |-
        (?xi:
          dba_close | dba_delete | dba_exists | dba_fetch | dba_firstkey | dba_handlers | dba_insert | dba_key_split |
          dba_list | dba_nextkey | dba_open | dba_optimize | dba_popen | dba_replace | dba_sync
        )\b
      scope: support.function.dba.php
    - match: |-
        (?xi:
          dbx_close | dbx_compare | dbx_connect | dbx_error | dbx_escape_string | dbx_fetch_row | dbx_query | dbx_sort
        )\b
      scope: support.function.dbx.php
    - match: |-
        (?xi:
          chdir | chroot | closedir | dir | getcwd | opendir | readdir | rewinddir |
          scandir
        )\b
      scope: support.function.dir.php
    - match: |-
        (?xi:
          domxml_new_doc | domxml_open_file | domxml_open_mem | domxml_version | domxml_xmltree | domxml_xslt_stylesheet | domxml_xslt_stylesheet_doc | domxml_xslt_stylesheet_file |
          domxml_xslt_version | xpath_eval | xpath_eval_expression | xpath_new_context | xpath_register_ns | xpath_register_ns_auto | xptr_eval | xptr_new_context
        )\b
      scope: support.function.domxml.php
    - match: |-
        (?xi:
          dotnet_load
        )\b
      scope: support.function.dotnet.php
    - match: |-
        (?xi:
          enchant_broker_describe | enchant_broker_dict_exists | enchant_broker_free | enchant_broker_free_dict | enchant_broker_get_error | enchant_broker_init | enchant_broker_list_dicts | enchant_broker_request_dict |
          enchant_broker_request_pwl_dict | enchant_broker_set_ordering | enchant_dict_add_to_personal | enchant_dict_add_to_session | enchant_dict_check | enchant_dict_describe | enchant_dict_get_error | enchant_dict_is_in_session |
          enchant_dict_quick_check | enchant_dict_store_replacement | enchant_dict_suggest
        )\b
      scope: support.function.enchant.php
    - match: |-
        (?xi:
          ereg | ereg_replace | eregi | eregi_replace | split | spliti | sql_regcase
        )\b
      scope: support.function.ereg.php
    - match: |-
        (?xi:
          debug_backtrace | debug_print_backtrace | error_clear_last | error_get_last | error_log | error_reporting | restore_error_handler | restore_exception_handler |
          set_error_handler | set_exception_handler | trigger_error | user_error
        )\b
      scope: support.function.errorfunc.php
    - match: |-
        (?xi:
          escapeshellarg | escapeshellcmd | exec | passthru | proc_close | proc_get_status | proc_nice | proc_open |
          proc_terminate | shell_exec | system
        )\b
      scope: support.function.exec.php
    - match: |-
        (?xi:
          exif_imagetype | exif_read_data | exif_tagname | exif_thumbnail | read_exif_data
        )\b
      scope: support.function.exif.php
    - match: |-
        (?xi:
          basename | chgrp | chmod | chown | clearstatcache | copy | delete | dirname |
          disk_free_space | disk_total_space | diskfreespace | fclose | fdatasync | feof | fflush | fgetc | fgetcsv |
          fgets | fgetss | file | file_exists | file_get_contents | file_put_contents | fileatime | filectime |
          filegroup | fileinode | filemtime | fileowner | fileperms | filesize | filetype | flock |
          fnmatch | fopen | fpassthru | fputcsv | fputs | fread | fscanf | fseek |
          fstat | fsync | ftell | ftruncate | fwrite | glob | is_dir | is_executable | is_file |
          is_link | is_readable | is_uploaded_file | is_writable | is_writeable | lchgrp | lchown | link |
          linkinfo | lstat | mkdir | move_uploaded_file | parse_ini_file | parse_ini_string | pathinfo | pclose |
          popen | readfile | readlink | realpath | realpath_cache_get | realpath_cache_size | rename | rewind |
          rmdir | set_file_buffer | stat | symlink | tempnam | tmpfile | touch | umask |
          unlink
        )\b
      scope: support.function.file.php
    - match: |-
        (?xi:
          finfo_buffer | finfo_close | finfo_file | finfo_open | finfo_set_flags | mime_content_type
        )\b
      scope: support.function.fileinfo.php
    - match: |-
        (?xi:
          filter_has_var | filter_id | filter_input | filter_input_array | filter_list | filter_var | filter_var_array
        )\b
      scope: support.function.filter.php
    - match: |-
        (?xi:
          call_user_func | call_user_func_array | create_function | forward_static_call | forward_static_call_array | func_get_arg | func_get_args | func_num_args |
          function_exists | get_defined_functions | register_shutdown_function | register_tick_function | unregister_tick_function
        )\b
      scope: support.function.funchand.php
    - match: |-
        (?xi:
          bind_textdomain_codeset | bindtextdomain | dcgettext | dcngettext | dgettext | dngettext | gettext | ngettext |
          textdomain
        )\b
      scope: support.function.gettext.php
    - match: |-
        (?xi:
          gmp_abs | gmp_add | gmp_and | gmp_binomial | gmp_clrbit | gmp_cmp | gmp_com | gmp_div |
          gmp_fact | gmp_gcd | gmp_gcdext | gmp_hamdist | gmp_init | gmp_intval | gmp_invert | gmp_jacobi |
          gmp_kronecker | gmp_kronecker_q | gmp_kronecker_qr | gmp_kronecker_r | gmp_kroneckerexact | gmp_lcm | gmp_legendre | gmp_mod |
          gmp_mul | gmp_neg | gmp_nextprime | gmp_or | gmp_perfect_power | gmp_perfect_square | gmp_popcount | gmp_pow |
          gmp_powm | gmp_prob_prime | gmp_random | gmp_scan0 | gmp_scan1 | gmp_setbit | gmp_sign | gmp_sqrt |
          gmp_sqrtrem | gmp_strval | gmp_sub | gmp_testbit | gmp_xor
        )\b
      scope: support.function.gmp.php
    - match: |-
        (?xi:
          hash | hash_algos | hash_copy | hash_file | hash_final | hash_hkdf | hash_hmac | hash_hmac_file |
          hash_init | hash_update | hash_update_file | hash_update_stream
        )\b
      scope: support.function.hash.php
    - match: |-
        (?xi:
          http_build_cookie | http_build_str | http_build_url | http_cache_etag | http_cache_last_modified | http_chunked_decode | http_date | http_deflate |
          http_get | http_get_request_body | http_get_request_body_stream | http_get_request_headers | http_head | http_inflate | http_match_etag | http_match_modified |
          http_match_request_header | http_negotiate_charset | http_negotiate_content_type | http_negotiate_language | http_parse_cookie | http_parse_headers | http_parse_message | http_parse_params |
          http_persistent_handles_clean | http_persistent_handles_count | http_persistent_handles_ident | http_post_data | http_post_fields | http_put_data | http_put_file | http_put_stream |
          http_redirect | http_request | http_request_body_encode | http_request_method_exists | http_request_method_name | http_request_method_register | http_request_method_unregister | http_response_code |
          http_send_content_disposition | http_send_content_type | http_send_data | http_send_file | http_send_last_modified | http_send_status | http_send_stream | http_support |
          http_throttle | ob_deflatehandler | ob_etaghandler | ob_inflatehandler
        )\b
      scope: support.function.http.php
    - match: |-
        (?xi:
          iconv | iconv_get_encoding | iconv_mime_decode | iconv_mime_decode_headers | iconv_mime_encode | iconv_set_encoding | iconv_strlen | iconv_strpos |
          iconv_strrpos | iconv_substr | ob_iconv_handler
        )\b
      scope: support.function.iconv.php
    - match: |-
        (?xi:
          iis_add_server | iis_get_dir_security | iis_get_script_map | iis_get_server_by_comment | iis_get_server_by_path | iis_get_server_rights | iis_get_service_state | iis_remove_server |
          iis_set_app_settings | iis_set_dir_security | iis_set_script_map | iis_set_server_rights | iis_start_server | iis_start_service | iis_stop_server | iis_stop_service
        )\b
      scope: support.function.iisfunc.php
    - match: |-
        (?xi:
          gd_info | getimagesize | image2wbmp | image_type_to_extension | image_type_to_mime_type | imagealphablending | imageantialias | imagearc |
          imagechar | imagecharup | imagecolorallocate | imagecolorallocatealpha | imagecolorat | imagecolorclosest | imagecolorclosestalpha | imagecolorclosesthwb |
          imagecolordeallocate | imagecolorexact | imagecolorexactalpha | imagecolormatch | imagecolorresolve | imagecolorresolvealpha | imagecolorset | imagecolorsforindex |
          imagecolorstotal | imagecolortransparent | imageconvolution | imagecopy | imagecopymerge | imagecopymergegray | imagecopyresampled | imagecopyresized |
          imagecreate | imagecreatefromgd | imagecreatefromgd2 | imagecreatefromgd2part | imagecreatefromgif | imagecreatefromjpeg | imagecreatefrompng | imagecreatefromstring |
          imagecreatefromwbmp | imagecreatefromxbm | imagecreatefromxpm | imagecreatetruecolor | imagedashedline | imagedestroy | imageellipse | imagefill |
          imagefilledarc | imagefilledellipse | imagefilledpolygon | imagefilledrectangle | imagefilltoborder | imagefilter | imagefontheight | imagefontwidth |
          imageftbbox | imagefttext | imagegammacorrect | imagegd | imagegd2 | imagegif | imagegrabscreen | imagegrabwindow |
          imageinterlace | imageistruecolor | imagejpeg | imagelayereffect | imageline | imageloadfont | imagepalettecopy | imagepng |
          imagepolygon | imagepsbbox | imagepsencodefont | imagepsextendfont | imagepsfreefont | imagepsloadfont | imagepsslantfont | imagepstext |
          imagerectangle | imagerotate | imagesavealpha | imagesetbrush | imagesetpixel | imagesetstyle | imagesetthickness | imagesettile |
          imagestring | imagestringup | imagesx | imagesy | imagetruecolortopalette | imagettfbbox | imagettftext | imagetypes |
          imagewbmp | imagexbm | iptcembed | iptcparse | jpeg2wbmp | png2wbmp
        )\b
      scope: support.function.image.php
    - match: |-
        (?xi:
          assert | assert_options | cli_get_process_title | cli_set_process_title | dl | extension_loaded |
          gc_collect_cycles | gc_disable | gc_enable | gc_enabled | gc_mem_caches | gc_status | get_cfg_var |
          get_current_user | get_defined_constants | get_extension_funcs | get_include_path | get_included_files |
          get_loaded_extensions | get_magic_quotes_gpc | get_magic_quotes_runtime | get_required_files | getenv |
          getlastmod | getmygid | getmyinode | getmypid | getmyuid | getopt | getrusage | ini_alter | ini_get |
          ini_get_all | ini_restore | ini_set | magic_quotes_runtime | main | memory_get_peak_usage | memory_get_usage |
          php_ini_loaded_file | php_ini_scanned_files | php_logo_guid | php_sapi_name | php_uname | phpcredits |
          phpinfo | phpversion | putenv | restore_include_path | set_include_path | set_magic_quotes_runtime |
          set_time_limit | sys_get_temp_dir | version_compare | zend_logo_guid | zend_thread_id | zend_version
        )\b
      scope: support.function.info.php
    - match: |-
        (?xi:
          ibase_add_user | ibase_affected_rows | ibase_backup | ibase_blob_add | ibase_blob_cancel | ibase_blob_close | ibase_blob_create | ibase_blob_echo |
          ibase_blob_get | ibase_blob_import | ibase_blob_info | ibase_blob_open | ibase_close | ibase_commit | ibase_commit_ret | ibase_connect |
          ibase_db_info | ibase_delete_user | ibase_drop_db | ibase_errcode | ibase_errmsg | ibase_execute | ibase_fetch_assoc | ibase_fetch_object |
          ibase_fetch_row | ibase_field_info | ibase_free_event_handler | ibase_free_query | ibase_free_result | ibase_gen_id | ibase_maintain_db | ibase_modify_user |
          ibase_name_result | ibase_num_fields | ibase_num_params | ibase_param_info | ibase_pconnect | ibase_prepare | ibase_query | ibase_restore |
          ibase_rollback | ibase_rollback_ret | ibase_server_info | ibase_service_attach | ibase_service_detach | ibase_set_event_handler | ibase_timefmt | ibase_trans |
          ibase_wait_event
        )\b
      scope: support.function.interbase.php
    - match: |-
        (?xi:
          collator_asort | collator_compare | collator_create | collator_get_attribute | collator_get_error_code | collator_get_error_message | collator_get_locale | collator_get_sort_key |
          collator_get_strength | collator_set_attribute | collator_set_strength | collator_sort | collator_sort_with_sort_keys | datefmt_create | datefmt_format | datefmt_get_calendar |
          datefmt_get_datetype | datefmt_get_error_code | datefmt_get_error_message | datefmt_get_locale | datefmt_get_pattern | datefmt_get_timetype | datefmt_get_timezone_id | datefmt_is_lenient |
          datefmt_localtime | datefmt_parse | datefmt_set_calendar | datefmt_set_lenient | datefmt_set_pattern | datefmt_set_timezone_id | grapheme_extract | grapheme_stripos |
          grapheme_stristr | grapheme_strlen | grapheme_strpos | grapheme_strripos | grapheme_strrpos | grapheme_strstr | grapheme_substr | idn_to_ascii |
          idn_to_unicode | idn_to_utf8 | intl_error_name | intl_get_error_code | intl_get_error_message | intl_is_failure | locale_accept_from_http | locale_compose |
          locale_filter_matches | locale_get_all_variants | locale_get_default | locale_get_display_language | locale_get_display_name | locale_get_display_region | locale_get_display_script | locale_get_display_variant |
          locale_get_keywords | locale_get_primary_language | locale_get_region | locale_get_script | locale_lookup | locale_parse | locale_set_default | msgfmt_create |
          msgfmt_format | msgfmt_format_message | msgfmt_get_error_code | msgfmt_get_error_message | msgfmt_get_locale | msgfmt_get_pattern | msgfmt_parse | msgfmt_parse_message |
          msgfmt_set_pattern | normalizer_is_normalized | normalizer_normalize | numfmt_create | numfmt_format | numfmt_format_currency | numfmt_get_attribute | numfmt_get_error_code |
          numfmt_get_error_message | numfmt_get_locale | numfmt_get_pattern | numfmt_get_symbol | numfmt_get_text_attribute | numfmt_parse | numfmt_parse_currency | numfmt_set_attribute |
          numfmt_set_pattern | numfmt_set_symbol | numfmt_set_text_attribute | resourcebundle_count | resourcebundle_create | resourcebundle_get | resourcebundle_get_error_code | resourcebundle_get_error_message |
          resourcebundle_locales | transliterator_create | transliterator_create_from_rules | transliterator_create_inverse | transliterator_get_error_code | transliterator_get_error_message | transliterator_list_ids | transliterator_transliterate
        )\b
      scope: support.function.intl.php
    - match: |-
        (?xi:
          json_decode | json_encode | json_last_error
        )\b
      scope: support.function.json.php
    - match: |-
        (?xi:
          ldap_8859_to_t61 | ldap_add | ldap_bind | ldap_close | ldap_compare | ldap_connect | ldap_count_entries | ldap_delete |
          ldap_dn2ufn | ldap_err2str | ldap_errno | ldap_error | ldap_explode_dn | ldap_first_attribute | ldap_first_entry | ldap_first_reference |
          ldap_free_result | ldap_get_attributes | ldap_get_dn | ldap_get_entries | ldap_get_option | ldap_get_values | ldap_get_values_len | ldap_list |
          ldap_mod_add | ldap_mod_del | ldap_mod_replace | ldap_modify | ldap_next_attribute | ldap_next_entry | ldap_next_reference | ldap_parse_reference |
          ldap_parse_result | ldap_read | ldap_rename | ldap_sasl_bind | ldap_search | ldap_set_option | ldap_set_rebind_proc | ldap_sort |
          ldap_start_tls | ldap_t61_to_8859 | ldap_unbind
        )\b
      scope: support.function.ldap.php
    - match: |-
        (?xi:
          libxml_clear_errors | libxml_disable_entity_loader | libxml_get_errors | libxml_get_last_error | libxml_set_streams_context | libxml_use_internal_errors
        )\b
      scope: support.function.libxml.php
    - match: |-
        (?xi:
          ezmlm_hash | mail
        )\b
      scope: support.function.mail.php
    - match: |-
        (?xi:
          abs | acos | acosh | asin | asinh | atan | atan2 | atanh |
          base_convert | bindec | ceil | cos | cosh | decbin | dechex | decoct |
          deg2rad | exp | expm1 | fdiv | floor | fmod | getrandmax | hexdec | hypot |
          intdiv | is_finite | is_infinite | is_nan | lcg_value | log | log10 | log1p |
          max | min | mt_getrandmax | mt_rand | mt_srand | octdec | pi | pow |
          rad2deg | rand | round | sin | sinh | sqrt | srand | tan |
          tanh
        )\b
      scope: support.function.math.php
    - match: |-
        (?xi:
          mb_check_encoding | mb_convert_case | mb_convert_encoding | mb_convert_kana | mb_convert_variables | mb_decode_mimeheader | mb_decode_numericentity | mb_detect_encoding |
          mb_detect_order | mb_encode_mimeheader | mb_encode_numericentity | mb_encoding_aliases | mb_ereg | mb_ereg_match | mb_ereg_replace | mb_ereg_search |
          mb_ereg_search_getpos | mb_ereg_search_getregs | mb_ereg_search_init | mb_ereg_search_pos | mb_ereg_search_regs | mb_ereg_search_setpos | mb_eregi | mb_eregi_replace |
          mb_get_info | mb_http_input | mb_http_output | mb_internal_encoding | mb_language | mb_list_encodings | mb_output_handler | mb_parse_str |
          mb_preferred_mime_name | mb_regex_encoding | mb_regex_set_options | mb_send_mail | mb_split | mb_strcut | mb_strimwidth | mb_stripos |
          mb_stristr | mb_strlen | mb_strpos | mb_strrchr | mb_strrichr | mb_strripos | mb_strrpos | mb_strstr |
          mb_strtolower | mb_strtoupper | mb_strwidth | mb_substitute_character | mb_substr | mb_substr_count
        )\b
      scope: support.function.mbstring.php
    - match: |-
        (?xi:
          mcrypt_cbc | mcrypt_cfb | mcrypt_create_iv | mcrypt_decrypt | mcrypt_ecb | mcrypt_enc_get_algorithms_name | mcrypt_enc_get_block_size | mcrypt_enc_get_iv_size |
          mcrypt_enc_get_key_size | mcrypt_enc_get_modes_name | mcrypt_enc_get_supported_key_sizes | mcrypt_enc_is_block_algorithm | mcrypt_enc_is_block_algorithm_mode | mcrypt_enc_is_block_mode | mcrypt_enc_self_test | mcrypt_encrypt |
          mcrypt_generic | mcrypt_generic_deinit | mcrypt_generic_end | mcrypt_generic_init | mcrypt_get_block_size | mcrypt_get_cipher_name | mcrypt_get_iv_size | mcrypt_get_key_size |
          mcrypt_list_algorithms | mcrypt_list_modes | mcrypt_module_close | mcrypt_module_get_algo_block_size | mcrypt_module_get_algo_key_size | mcrypt_module_get_supported_key_sizes | mcrypt_module_is_block_algorithm | mcrypt_module_is_block_algorithm_mode |
          mcrypt_module_is_block_mode | mcrypt_module_open | mcrypt_module_self_test | mcrypt_ofb | mdecrypt_generic
        )\b
      scope: support.function.mcrypt.php
    - match: |-
        (?xi:
          memcache_debug
        )\b
      scope: support.function.memcache.php
    - match: |-
        (?xi:
          mhash | mhash_count | mhash_get_block_size | mhash_get_hash_name | mhash_keygen_s2k
        )\b
      scope: support.function.mhash.php
    - match: |-
        (?xi:
          bson_decode | bson_encode
        )\b
      scope: support.function.mongo.php
    - match: |-
        (?xi:
          mysql_affected_rows | mysql_client_encoding | mysql_close | mysql_connect | mysql_create_db | mysql_data_seek | mysql_db_name | mysql_db_query |
          mysql_drop_db | mysql_errno | mysql_error | mysql_escape_string | mysql_fetch_array | mysql_fetch_assoc | mysql_fetch_field | mysql_fetch_lengths |
          mysql_fetch_object | mysql_fetch_row | mysql_field_flags | mysql_field_len | mysql_field_name | mysql_field_seek | mysql_field_table | mysql_field_type |
          mysql_free_result | mysql_get_client_info | mysql_get_host_info | mysql_get_proto_info | mysql_get_server_info | mysql_info | mysql_insert_id | mysql_list_dbs |
          mysql_list_fields | mysql_list_processes | mysql_list_tables | mysql_num_fields | mysql_num_rows | mysql_pconnect | mysql_ping | mysql_query |
          mysql_real_escape_string | mysql_result | mysql_select_db | mysql_set_charset | mysql_stat | mysql_tablename | mysql_thread_id | mysql_unbuffered_query
        )\b
      scope: support.function.mysql.php
    - match: |-
        (?xi:
          mysqli_affected_rows | mysqli_autocommit | mysqli_bind_param | mysqli_bind_result | mysqli_change_user | mysqli_character_set_name | mysqli_client_encoding | mysqli_close |
          mysqli_commit | mysqli_connect | mysqli_connect_errno | mysqli_connect_error | mysqli_data_seek | mysqli_debug | mysqli_disable_reads_from_master | mysqli_disable_rpl_parse |
          mysqli_dump_debug_info | mysqli_embedded_server_end | mysqli_embedded_server_start | mysqli_enable_reads_from_master | mysqli_enable_rpl_parse | mysqli_errno | mysqli_error | mysqli_escape_string |
          mysqli_execute | mysqli_fetch | mysqli_fetch_all | mysqli_fetch_array | mysqli_fetch_assoc | mysqli_fetch_column | mysqli_fetch_field | mysqli_fetch_field_direct | mysqli_fetch_fields |
          mysqli_fetch_lengths | mysqli_fetch_object | mysqli_fetch_row | mysqli_field_count | mysqli_field_seek | mysqli_field_tell | mysqli_free_result | mysqli_get_cache_stats |
          mysqli_get_charset | mysqli_get_client_info | mysqli_get_client_stats | mysqli_get_client_version | mysqli_get_connection_stats | mysqli_get_host_info | mysqli_get_metadata | mysqli_get_proto_info |
          mysqli_get_server_info | mysqli_get_server_version | mysqli_get_warnings | mysqli_info | mysqli_init | mysqli_insert_id | mysqli_kill | mysqli_master_query |
          mysqli_more_results | mysqli_multi_query | mysqli_next_result | mysqli_num_fields | mysqli_num_rows | mysqli_options | mysqli_param_count | mysqli_ping |
          mysqli_poll | mysqli_prepare | mysqli_query | mysqli_real_connect | mysqli_real_escape_string | mysqli_real_query | mysqli_reap_async_query | mysqli_report |
          mysqli_rollback | mysqli_rpl_parse_enabled | mysqli_rpl_probe | mysqli_rpl_query_type | mysqli_select_db | mysqli_send_long_data | mysqli_send_query | mysqli_set_charset |
          mysqli_set_local_infile_default | mysqli_set_local_infile_handler | mysqli_set_opt | mysqli_slave_query | mysqli_sqlstate | mysqli_ssl_set | mysqli_stat | mysqli_stmt_affected_rows |
          mysqli_stmt_attr_get | mysqli_stmt_attr_set | mysqli_stmt_bind_param | mysqli_stmt_bind_result | mysqli_stmt_close | mysqli_stmt_data_seek | mysqli_stmt_errno | mysqli_stmt_error |
          mysqli_stmt_execute | mysqli_stmt_fetch | mysqli_stmt_field_count | mysqli_stmt_free_result | mysqli_stmt_get_result | mysqli_stmt_get_warnings | mysqli_stmt_init | mysqli_stmt_insert_id |
          mysqli_stmt_num_rows | mysqli_stmt_param_count | mysqli_stmt_prepare | mysqli_stmt_reset | mysqli_stmt_result_metadata | mysqli_stmt_send_long_data | mysqli_stmt_sqlstate | mysqli_stmt_store_result |
          mysqli_store_result | mysqli_thread_id | mysqli_thread_safe | mysqli_use_result | mysqli_warning_count
        )\b
      scope: support.function.mysqli.php
    - match: |-
        (?xi:
          mysqlnd_ms_get_stats | mysqlnd_ms_query_is_select | mysqlnd_ms_set_user_pick_server
        )\b
      scope: support.function.mysqlnd-ms.php
    - match: |-
        (?xi:
          mysqlnd_qc_change_handler | mysqlnd_qc_clear_cache | mysqlnd_qc_get_cache_info | mysqlnd_qc_get_core_stats | mysqlnd_qc_get_handler | mysqlnd_qc_get_query_trace_log | mysqlnd_qc_set_user_handlers
        )\b
      scope: support.function.mysqlnd-qc.php
    - match: |-
        (?xi:
          checkdnsrr | closelog | define_syslog_variables | dns_check_record | dns_get_mx | dns_get_record | fsockopen | gethostbyaddr |
          gethostbyname | gethostbynamel | gethostname | getmxrr | getprotobyname | getprotobynumber | getservbyname | getservbyport |
          header | header_remove | headers_list | headers_sent | inet_ntop | inet_pton | ip2long | long2ip |
          openlog | pfsockopen | setcookie | setrawcookie | socket_get_status | socket_set_blocking | socket_set_timeout | syslog
        )\b
      scope: support.function.network.php
    - match: |-
        (?xi:
          nsapi_request_headers | nsapi_response_headers | nsapi_virtual
        )\b
      scope: support.function.nsapi.php
    - match: |-
        (?xi:
          aggregate | aggregate_info | aggregate_methods | aggregate_methods_by_list | aggregate_methods_by_regexp | aggregate_properties | aggregate_properties_by_list | aggregate_properties_by_regexp |
          aggregation_info | deaggregate
        )\b
      scope: support.function.objaggregation.php
    - match: |-
        (?xi:
          oci_bind_array_by_name | oci_bind_by_name | oci_cancel | oci_client_version | oci_close | oci_commit | oci_connect | oci_define_by_name |
          oci_error | oci_execute | oci_fetch | oci_fetch_all | oci_fetch_array | oci_fetch_assoc | oci_fetch_object | oci_fetch_row |
          oci_field_is_null | oci_field_name | oci_field_precision | oci_field_scale | oci_field_size | oci_field_type | oci_field_type_raw | oci_free_statement |
          oci_internal_debug | oci_lob_copy | oci_lob_is_equal | oci_new_collection | oci_new_connect | oci_new_cursor | oci_new_descriptor | oci_num_fields |
          oci_num_rows | oci_parse | oci_password_change | oci_pconnect | oci_result | oci_rollback | oci_server_version | oci_set_action |
          oci_set_call_timeout | oci_set_client_identifier | oci_set_client_info | oci_set_db_operation | oci_set_edition | oci_set_module_name | oci_set_prefetch | oci_statement_type |
          ocibindbyname | ocicancel | ocicloselob | ocicollappend | ocicollassign | ocicollassignelem | ocicollgetelem | ocicollmax |
          ocicollsize | ocicolltrim | ocicolumnisnull | ocicolumnname | ocicolumnprecision | ocicolumnscale | ocicolumnsize | ocicolumntype |
          ocicolumntyperaw | ocicommit | ocidefinebyname | ocierror | ociexecute | ocifetch | ocifetchinto | ocifetchstatement |
          ocifreecollection | ocifreecursor | ocifreedesc | ocifreestatement | ociinternaldebug | ociloadlob | ocilogoff | ocilogon |
          ocinewcollection | ocinewcursor | ocinewdescriptor | ocinlogon | ocinumcols | ociparse | ociplogon | ociresult |
          ocirollback | ocirowcount | ocisavelob | ocisavelobfile | ociserverversion | ocisetprefetch | ocistatementtype | ociwritelobtofile |
          ociwritetemporarylob
        )\b
      scope: support.function.oci8.php
    - match: |-
        (?xi:
          openssl_cipher_iv_length | openssl_csr_export | openssl_csr_export_to_file | openssl_csr_get_public_key | openssl_csr_get_subject | openssl_csr_new | openssl_csr_sign | openssl_decrypt |
          openssl_dh_compute_key | openssl_digest | openssl_encrypt | openssl_error_string | openssl_free_key | openssl_get_cipher_methods | openssl_get_md_methods | openssl_get_privatekey |
          openssl_get_publickey | openssl_open | openssl_pkcs12_export | openssl_pkcs12_export_to_file | openssl_pkcs12_read | openssl_pkcs7_decrypt | openssl_pkcs7_encrypt | openssl_pkcs7_sign |
          openssl_pkcs7_verify | openssl_pkey_derive | openssl_pkey_export | openssl_pkey_export_to_file | openssl_pkey_free | openssl_pkey_get_details | openssl_pkey_get_private | openssl_pkey_get_public |
          openssl_pkey_new | openssl_private_decrypt | openssl_private_encrypt | openssl_public_decrypt | openssl_public_encrypt | openssl_random_pseudo_bytes | openssl_seal | openssl_sign |
          openssl_verify | openssl_x509_check_private_key | openssl_x509_checkpurpose | openssl_x509_export | openssl_x509_export_to_file | openssl_x509_free | openssl_x509_parse | openssl_x509_read
        )\b
      scope: support.function.openssl.php
    - match: |-
        (?xi:
          flush | ob_clean | ob_end_clean | ob_end_flush | ob_flush | ob_get_clean | ob_get_contents | ob_get_flush |
          ob_get_length | ob_get_level | ob_get_status | ob_gzhandler | ob_implicit_flush | ob_list_handlers | ob_start | output_add_rewrite_var |
          output_reset_rewrite_vars
        )\b
      scope: support.function.output.php
    - match: |-
        (?xi:
          overload
        )\b
      scope: support.function.overload.php
    - match: |-
        (?xi:
          pcntl_alarm | pcntl_async_signals | pcntl_exec | pcntl_fork | pcntl_getpriority | pcntl_setpriority | pcntl_signal | pcntl_signal_dispatch | pcntl_sigprocmask |
          pcntl_sigtimedwait | pcntl_sigwaitinfo | pcntl_wait | pcntl_waitpid | pcntl_wexitstatus | pcntl_wifexited | pcntl_wifsignaled | pcntl_wifstopped |
          pcntl_wstopsig | pcntl_wtermsig
        )\b
      scope: support.function.pcntl.php
    - match: |-
        (?xi:
          pg_affected_rows | pg_cancel_query | pg_client_encoding | pg_close | pg_connect | pg_connection_busy | pg_connection_reset | pg_connection_status |
          pg_convert | pg_copy_from | pg_copy_to | pg_dbname | pg_delete | pg_end_copy | pg_escape_bytea | pg_escape_string |
          pg_execute | pg_fetch_all | pg_fetch_all_columns | pg_fetch_array | pg_fetch_assoc | pg_fetch_object | pg_fetch_result | pg_fetch_row |
          pg_field_is_null | pg_field_name | pg_field_num | pg_field_prtlen | pg_field_size | pg_field_table | pg_field_type | pg_field_type_oid |
          pg_free_result | pg_get_notify | pg_get_pid | pg_get_result | pg_host | pg_insert | pg_last_error | pg_last_notice |
          pg_last_oid | pg_lo_close | pg_lo_create | pg_lo_export | pg_lo_import | pg_lo_open | pg_lo_read | pg_lo_read_all |
          pg_lo_seek | pg_lo_tell | pg_lo_unlink | pg_lo_write | pg_meta_data | pg_num_fields | pg_num_rows | pg_options |
          pg_parameter_status | pg_pconnect | pg_ping | pg_port | pg_prepare | pg_put_line | pg_query | pg_query_params |
          pg_result_error | pg_result_error_field | pg_result_seek | pg_result_status | pg_select | pg_send_execute | pg_send_prepare | pg_send_query |
          pg_send_query_params | pg_set_client_encoding | pg_set_error_verbosity | pg_trace | pg_transaction_status | pg_tty | pg_unescape_bytea | pg_untrace |
          pg_update | pg_version
        )\b
      scope: support.function.pgsql.php
    - match: |-
        (?xi:
          apache_child_terminate | apache_get_modules | apache_get_version | apache_getenv | apache_lookup_uri | apache_note | apache_request_headers | apache_reset_timeout |
          apache_response_headers | apache_setenv | getallheaders | virtual
        )\b
      scope: support.function.php_apache.php
    - match: |-
        (?xi:
          dom_import_simplexml
        )\b
      scope: support.function.php_dom.php
    - match: |-
        (?xi:
          ftp_alloc | ftp_cdup | ftp_chdir | ftp_chmod | ftp_close | ftp_connect | ftp_delete | ftp_exec |
          ftp_fget | ftp_fput | ftp_get | ftp_get_option | ftp_login | ftp_mdtm | ftp_mkdir | ftp_nb_continue |
          ftp_nb_fget | ftp_nb_fput | ftp_nb_get | ftp_nb_put | ftp_nlist | ftp_pasv | ftp_put | ftp_pwd |
          ftp_quit | ftp_raw | ftp_rawlist | ftp_rename | ftp_rmdir | ftp_set_option | ftp_site | ftp_size |
          ftp_ssl_connect | ftp_systype
        )\b
      scope: support.function.php_ftp.php
    - match: |-
        (?xi:
          imap_8bit | imap_alerts | imap_append | imap_base64 | imap_binary | imap_body | imap_bodystruct | imap_check |
          imap_clearflag_full | imap_close | imap_create | imap_createmailbox | imap_delete | imap_deletemailbox | imap_errors | imap_expunge |
          imap_fetch_overview | imap_fetchbody | imap_fetchheader | imap_fetchmime | imap_fetchstructure | imap_fetchtext | imap_gc | imap_get_quota |
          imap_get_quotaroot | imap_getacl | imap_getmailboxes | imap_getsubscribed | imap_header | imap_headerinfo | imap_headers | imap_last_error |
          imap_list | imap_listmailbox | imap_listscan | imap_listsubscribed | imap_lsub | imap_mail | imap_mail_compose | imap_mail_copy |
          imap_mail_move | imap_mailboxmsginfo | imap_mime_header_decode | imap_msgno | imap_num_msg | imap_num_recent | imap_open | imap_ping |
          imap_qprint | imap_rename | imap_renamemailbox | imap_reopen | imap_rfc822_parse_adrlist | imap_rfc822_parse_headers | imap_rfc822_write_address | imap_savebody |
          imap_scan | imap_scanmailbox | imap_search | imap_set_quota | imap_setacl | imap_setflag_full | imap_sort | imap_status |
          imap_subscribe | imap_thread | imap_timeout | imap_uid | imap_undelete | imap_unsubscribe | imap_utf7_decode | imap_utf7_encode |
          imap_utf8
        )\b
      scope: support.function.php_imap.php
    - match: |-
        (?xi:
          mssql_bind | mssql_close | mssql_connect | mssql_data_seek | mssql_execute | mssql_fetch_array | mssql_fetch_assoc | mssql_fetch_batch |
          mssql_fetch_field | mssql_fetch_object | mssql_fetch_row | mssql_field_length | mssql_field_name | mssql_field_seek | mssql_field_type | mssql_free_result |
          mssql_free_statement | mssql_get_last_message | mssql_guid_string | mssql_init | mssql_min_error_severity | mssql_min_message_severity | mssql_next_result | mssql_num_fields |
          mssql_num_rows | mssql_pconnect | mssql_query | mssql_result | mssql_rows_affected | mssql_select_db
        )\b
      scope: support.function.php_mssql.php
    - match: |-
        (?xi:
          odbc_autocommit | odbc_binmode | odbc_close | odbc_close_all | odbc_columnprivileges | odbc_columns | odbc_commit | odbc_connect |
          odbc_cursor | odbc_data_source | odbc_do | odbc_error | odbc_errormsg | odbc_exec | odbc_execute | odbc_fetch_array |
          odbc_fetch_into | odbc_fetch_object | odbc_fetch_row | odbc_field_len | odbc_field_name | odbc_field_num | odbc_field_precision | odbc_field_scale |
          odbc_field_type | odbc_foreignkeys | odbc_free_result | odbc_gettypeinfo | odbc_longreadlen | odbc_next_result | odbc_num_fields | odbc_num_rows |
          odbc_pconnect | odbc_prepare | odbc_primarykeys | odbc_procedurecolumns | odbc_procedures | odbc_result | odbc_result_all | odbc_rollback |
          odbc_setoption | odbc_specialcolumns | odbc_statistics | odbc_tableprivileges | odbc_tables
        )\b
      scope: support.function.php_odbc.php
    - match: |-
        (?xi:
          preg_filter | preg_grep | preg_last_error | preg_match | preg_match_all | preg_quote | preg_replace | preg_replace_callback |
          preg_replace_callback_array | preg_split
        )\b
      scope: support.function.php_pcre.php
    - match: |-
        (?xi:
          class_implements | class_parents | class_uses | iterator_apply | iterator_count | iterator_to_array | spl_autoload | spl_autoload_call | spl_autoload_extensions |
          spl_autoload_functions | spl_autoload_register | spl_autoload_unregister | spl_classes | spl_object_hash | spl_object_id
        )\b
      scope: support.function.php_spl.php
    - match: |-
        (?xi:
          zip_close | zip_entry_close | zip_entry_compressedsize | zip_entry_compressionmethod | zip_entry_filesize | zip_entry_name | zip_entry_open | zip_entry_read |
          zip_open | zip_read
        )\b
      scope: support.function.php_zip.php
    - match: |-
        (?xi:
          posix_access | posix_ctermid | posix_errno | posix_get_last_error | posix_getcwd | posix_getegid | posix_geteuid | posix_getgid |
          posix_getgrgid | posix_getgrnam | posix_getgroups | posix_getlogin | posix_getpgid | posix_getpgrp | posix_getpid | posix_getppid |
          posix_getpwnam | posix_getpwuid | posix_getrlimit | posix_getsid | posix_getuid | posix_initgroups | posix_isatty | posix_kill |
          posix_mkfifo | posix_mknod | posix_setegid | posix_seteuid | posix_setgid | posix_setpgid | posix_setsid | posix_setuid |
          posix_strerror | posix_times | posix_ttyname | posix_uname
        )\b
      scope: support.function.posix.php
    - match: |-
        (?xi:
          setproctitle | setthreadtitle
        )\b
      scope: support.function.proctitle.php
    - match: |-
        (?xi:
          pspell_add_to_personal | pspell_add_to_session | pspell_check | pspell_clear_session | pspell_config_create | pspell_config_data_dir | pspell_config_dict_dir | pspell_config_ignore |
          pspell_config_mode | pspell_config_personal | pspell_config_repl | pspell_config_runtogether | pspell_config_save_repl | pspell_new | pspell_new_config | pspell_new_personal |
          pspell_save_wordlist | pspell_store_replacement | pspell_suggest
        )\b
      scope: support.function.pspell.php
    - match: |-
        (?xi:
          readline | readline_add_history | readline_callback_handler_install | readline_callback_handler_remove | readline_callback_read_char | readline_clear_history | readline_completion_function | readline_info |
          readline_list_history | readline_on_new_line | readline_read_history | readline_redisplay | readline_write_history
        )\b
      scope: support.function.readline.php
    - match: |-
        (?xi:
          recode | recode_file | recode_string
        )\b
      scope: support.function.recode.php
    - match: |-
        (?xi:
          rrd_create | rrd_error | rrd_fetch | rrd_first | rrd_graph | rrd_info | rrd_last | rrd_lastupdate |
          rrd_restore | rrd_tune | rrd_update | rrd_xport
        )\b
      scope: support.function.rrd.php
    - match: |-
        (?xi:
          ftok | msg_get_queue | msg_queue_exists | msg_receive | msg_remove_queue | msg_send | msg_set_queue | msg_stat_queue |
          sem_acquire | sem_get | sem_release | sem_remove | shm_attach | shm_detach | shm_get_var | shm_has_var |
          shm_put_var | shm_remove | shm_remove_var
        )\b
      scope: support.function.sem.php
    - match: |-
        (?xi:
          session_cache_expire | session_cache_limiter | session_commit | session_decode | session_destroy | session_encode | session_get_cookie_params | session_id |
          session_is_registered | session_module_name | session_name | session_regenerate_id | session_register | session_save_path | session_set_cookie_params | session_set_save_handler |
          session_start | session_unregister | session_unset | session_write_close
        )\b
      scope: support.function.session.php
    - match: |-
        (?xi:
          shmop_close | shmop_delete | shmop_open | shmop_read | shmop_size | shmop_write
        )\b
      scope: support.function.shmop.php
    - match: |-
        (?xi:
          simplexml_import_dom | simplexml_load_file | simplexml_load_string
        )\b
      scope: support.function.simplexml.php
    - match: |-
        (?xi:
          snmp2_get | snmp2_getnext | snmp2_real_walk | snmp2_set | snmp2_walk | snmp3_get | snmp3_getnext | snmp3_real_walk |
          snmp3_set | snmp3_walk | snmp_get_quick_print | snmp_get_valueretrieval | snmp_read_mib | snmp_set_enum_print | snmp_set_oid_numeric_print | snmp_set_oid_output_format |
          snmp_set_quick_print | snmp_set_valueretrieval | snmpget | snmpgetnext | snmprealwalk | snmpset | snmpwalk | snmpwalkoid
        )\b
      scope: support.function.snmp.php
    - match: |-
        (?xi:
          is_soap_fault | use_soap_error_handler
        )\b
      scope: support.function.soap.php
    - match: |-
        (?xi:
          socket_accept | socket_bind | socket_clear_error | socket_close | socket_connect | socket_create | socket_create_listen | socket_create_pair |
          socket_export_stream | socket_get_option | socket_getpeername | socket_getsockname | socket_last_error | socket_listen | socket_read | socket_recv |
          socket_recvfrom | socket_select | socket_send | socket_sendto | socket_set_block | socket_set_nonblock | socket_set_option | socket_shutdown |
          socket_strerror | socket_write
        )\b
      scope: support.function.sockets.php
    - match: |-
        (?xi:
          sqlite_array_query | sqlite_busy_timeout | sqlite_changes | sqlite_close | sqlite_column | sqlite_create_aggregate | sqlite_create_function | sqlite_current |
          sqlite_error_string | sqlite_escape_string | sqlite_exec | sqlite_factory | sqlite_fetch_all | sqlite_fetch_array | sqlite_fetch_column_types | sqlite_fetch_object |
          sqlite_fetch_single | sqlite_fetch_string | sqlite_field_name | sqlite_has_more | sqlite_has_prev | sqlite_key | sqlite_last_error | sqlite_last_insert_rowid |
          sqlite_libencoding | sqlite_libversion | sqlite_next | sqlite_num_fields | sqlite_num_rows | sqlite_open | sqlite_popen | sqlite_prev |
          sqlite_query | sqlite_rewind | sqlite_seek | sqlite_single_query | sqlite_udf_decode_binary | sqlite_udf_encode_binary | sqlite_unbuffered_query | sqlite_valid
        )\b
      scope: support.function.sqlite.php
    - match: |-
        (?xi:
          stats_absolute_deviation | stats_cdf_beta | stats_cdf_binomial | stats_cdf_cauchy | stats_cdf_chisquare | stats_cdf_exponential | stats_cdf_f | stats_cdf_gamma |
          stats_cdf_laplace | stats_cdf_logistic | stats_cdf_negative_binomial | stats_cdf_noncentral_chisquare | stats_cdf_noncentral_f | stats_cdf_poisson | stats_cdf_t | stats_cdf_uniform |
          stats_cdf_weibull | stats_covariance | stats_den_uniform | stats_dens_beta | stats_dens_cauchy | stats_dens_chisquare | stats_dens_exponential | stats_dens_f |
          stats_dens_gamma | stats_dens_laplace | stats_dens_logistic | stats_dens_negative_binomial | stats_dens_normal | stats_dens_pmf_binomial | stats_dens_pmf_hypergeometric | stats_dens_pmf_poisson |
          stats_dens_t | stats_dens_weibull | stats_harmonic_mean | stats_kurtosis | stats_rand_gen_beta | stats_rand_gen_chisquare | stats_rand_gen_exponential | stats_rand_gen_f |
          stats_rand_gen_funiform | stats_rand_gen_gamma | stats_rand_gen_ibinomial | stats_rand_gen_ibinomial_negative | stats_rand_gen_int | stats_rand_gen_ipoisson | stats_rand_gen_iuniform | stats_rand_gen_noncenral_chisquare |
          stats_rand_gen_noncentral_f | stats_rand_gen_noncentral_t | stats_rand_gen_normal | stats_rand_gen_t | stats_rand_get_seeds | stats_rand_phrase_to_seeds | stats_rand_ranf | stats_rand_setall |
          stats_skew | stats_standard_deviation | stats_stat_binomial_coef | stats_stat_correlation | stats_stat_gennch | stats_stat_independent_t | stats_stat_innerproduct | stats_stat_noncentral_t |
          stats_stat_paired_t | stats_stat_percentile | stats_stat_powersum | stats_variance
        )\b
      scope: support.function.stats.php
    - match: |-
        (?xi:
          set_socket_blocking | stream_bucket_append | stream_bucket_make_writeable | stream_bucket_new | stream_bucket_prepend | stream_context_create | stream_context_get_default | stream_context_get_options |
          stream_context_get_params | stream_context_set_default | stream_context_set_option | stream_context_set_params | stream_copy_to_stream | stream_encoding | stream_filter_append | stream_filter_prepend |
          stream_filter_register | stream_filter_remove | stream_get_contents | stream_get_filters | stream_get_line | stream_get_meta_data | stream_get_transports | stream_get_wrappers |
          stream_is_local | stream_notification_callback | stream_register_wrapper | stream_resolve_include_path | stream_select | stream_set_blocking | stream_set_read_buffer | stream_set_timeout |
          stream_set_write_buffer | stream_socket_accept | stream_socket_client | stream_socket_enable_crypto | stream_socket_get_name | stream_socket_pair | stream_socket_recvfrom | stream_socket_sendto |
          stream_socket_server | stream_socket_shutdown | stream_supports_lock | stream_wrapper_register | stream_wrapper_restore | stream_wrapper_unregister
        )\b
      scope: support.function.streamsfuncs.php
    - match: |-
        (?xi:
          addcslashes | addslashes | bin2hex | chop | chr | chunk_split | convert_cyr_string | convert_uudecode |
          convert_uuencode | count_chars | crc32 | crypt | echo | explode | fprintf | get_html_translation_table |
          hebrev | hebrevc | html_entity_decode | htmlentities | htmlspecialchars | htmlspecialchars_decode | implode | join |
          lcfirst | levenshtein | localeconv | ltrim | md5 | md5_file | metaphone | money_format |
          nl2br | nl_langinfo | number_format | ord | parse_str | print | printf | quoted_printable_decode |
          quoted_printable_encode | quotemeta | rtrim | setlocale | sha1 | sha1_file | similar_text | soundex |
          sprintf | sscanf | str_contains | str_ends_with | str_getcsv | str_ireplace | str_pad | str_repeat | str_replace | str_rot13 |
          str_shuffle | str_split | str_starts_with | str_word_count | strcasecmp | strchr | strcmp | strcoll | strcspn |
          strip_tags | stripcslashes | stripos | stripslashes | stristr | strlen | strnatcasecmp | strnatcmp |
          strncasecmp | strncmp | strpbrk | strpos | strrchr | strrev | strripos | strrpos |
          strspn | strstr | strtok | strtolower | strtoupper | strtr | substr | substr_compare |
          substr_count | substr_replace | trim | ucfirst | ucwords | vfprintf | vprintf | vsprintf |
          wordwrap
        )\b
      scope: support.function.string.php
    - match: |-
        (?xi:
          sybase_affected_rows | sybase_close | sybase_connect | sybase_data_seek | sybase_deadlock_retry_count | sybase_fetch_array | sybase_fetch_assoc | sybase_fetch_field |
          sybase_fetch_object | sybase_fetch_row | sybase_field_seek | sybase_free_result | sybase_get_last_message | sybase_min_client_severity | sybase_min_error_severity | sybase_min_message_severity |
          sybase_min_server_severity | sybase_num_fields | sybase_num_rows | sybase_pconnect | sybase_query | sybase_result | sybase_select_db | sybase_set_message_handler |
          sybase_unbuffered_query
        )\b
      scope: support.function.sybase.php
    - match: |-
        (?xi:
          ob_tidyhandler | tidy_access_count | tidy_clean_repair | tidy_config_count | tidy_diagnose | tidy_error_count | tidy_get_body | tidy_get_config |
          tidy_get_error_buffer | tidy_get_head | tidy_get_html | tidy_get_html_ver | tidy_get_opt_doc | tidy_get_output | tidy_get_release | tidy_get_root |
          tidy_get_status | tidy_getopt | tidy_is_xhtml | tidy_is_xml | tidy_load_config | tidy_parse_file | tidy_parse_string | tidy_repair_file |
          tidy_repair_string | tidy_reset_config | tidy_save_config | tidy_set_encoding | tidy_setopt | tidy_warning_count
        )\b
      scope: support.function.tidy.php
    - match: |-
        (?xi:
          token_get_all | token_name
        )\b
      scope: support.function.tokenizer.php
    - match: |-
        (?xi:
          base64_decode | base64_encode | get_headers | get_meta_tags | http_build_query | parse_url | rawurldecode | rawurlencode |
          urldecode | urlencode
        )\b
      scope: support.function.url.php
    - match: |-
        (?xi:
          boolval | debug_zval_dump | doubleval | empty | floatval | get_debug_type | get_defined_vars | get_resource_id | get_resource_type | gettype |
          import_request_variables | intval | is_array | is_bool | is_callable | is_countable | is_double | is_float |
          is_int | is_integer | is_iterable | is_long | is_null | is_numeric | is_object | is_real |
          is_resource | is_scalar | is_string | isset | print_r | serialize | settype | strval |
          unserialize | unset | var_dump | var_export
        )\b
      scope: support.function.var.php
    - match: |-
        (?xi:
          wddx_add_vars | wddx_deserialize | wddx_packet_end | wddx_packet_start | wddx_serialize_value | wddx_serialize_vars
        )\b
      scope: support.function.wddx.php
    - match: |-
        (?xi:
          xhprof_disable | xhprof_enable | xhprof_sample_disable | xhprof_sample_enable
        )\b
      scope: support.function.xhprof.php
    - match: |-
        (?xi:
          utf8_decode | utf8_encode | xml_error_string | xml_get_current_byte_index | xml_get_current_column_number | xml_get_current_line_number | xml_get_error_code | xml_parse |
          xml_parse_into_struct | xml_parser_create | xml_parser_create_ns | xml_parser_free | xml_parser_get_option | xml_parser_set_option | xml_set_character_data_handler | xml_set_default_handler |
          xml_set_element_handler | xml_set_end_namespace_decl_handler | xml_set_external_entity_ref_handler | xml_set_notation_decl_handler | xml_set_object | xml_set_processing_instruction_handler | xml_set_start_namespace_decl_handler | xml_set_unparsed_entity_decl_handler
        )\b
      scope: support.function.xml.php
    - match: |-
        (?xi:
          xmlrpc_decode | xmlrpc_decode_request | xmlrpc_encode | xmlrpc_encode_request | xmlrpc_get_type | xmlrpc_is_fault | xmlrpc_parse_method_descriptions | xmlrpc_server_add_introspection_data |
          xmlrpc_server_call_method | xmlrpc_server_create | xmlrpc_server_destroy | xmlrpc_server_register_introspection_callback | xmlrpc_server_register_method | xmlrpc_set_type
        )\b
      scope: support.function.xmlrpc.php
    - match: |-
        (?xi:
          xmlwriter_end_attribute | xmlwriter_end_cdata | xmlwriter_end_comment | xmlwriter_end_document | xmlwriter_end_dtd | xmlwriter_end_dtd_attlist | xmlwriter_end_dtd_element | xmlwriter_end_dtd_entity |
          xmlwriter_end_element | xmlwriter_end_pi | xmlwriter_flush | xmlwriter_full_end_element | xmlwriter_open_memory | xmlwriter_open_uri | xmlwriter_output_memory | xmlwriter_set_indent |
          xmlwriter_set_indent_string | xmlwriter_start_attribute | xmlwriter_start_attribute_ns | xmlwriter_start_cdata | xmlwriter_start_comment | xmlwriter_start_document | xmlwriter_start_dtd | xmlwriter_start_dtd_attlist |
          xmlwriter_start_dtd_element | xmlwriter_start_dtd_entity | xmlwriter_start_element | xmlwriter_start_element_ns | xmlwriter_start_pi | xmlwriter_text | xmlwriter_write_attribute | xmlwriter_write_attribute_ns |
          xmlwriter_write_cdata | xmlwriter_write_comment | xmlwriter_write_dtd | xmlwriter_write_dtd_attlist | xmlwriter_write_dtd_element | xmlwriter_write_dtd_entity | xmlwriter_write_element | xmlwriter_write_element_ns |
          xmlwriter_write_pi | xmlwriter_write_raw
        )\b
      scope: support.function.xmlwriter.php
    - match: |-
        (?xi:
          xslt_backend_info | xslt_backend_name | xslt_backend_version | xslt_create | xslt_errno | xslt_error | xslt_free | xslt_getopt |
          xslt_process | xslt_set_base | xslt_set_encoding | xslt_set_error_handler | xslt_set_log | xslt_set_object | xslt_set_sax_handler | xslt_set_sax_handlers |
          xslt_set_scheme_handler | xslt_set_scheme_handlers | xslt_setopt
        )\b
      scope: support.function.xslt.php
    - match: |-
        (?xi:
          gzclose | gzcompress | gzdecode | gzdeflate | gzencode | gzeof | gzfile | gzgetc |
          gzgets | gzgetss | gzinflate | gzopen | gzpassthru | gzputs | gzread | gzrewind |
          gzseek | gztell | gzuncompress | gzwrite | readgzfile | zlib_get_coding_type
        )\b
      scope: support.function.zlib.php
    - match: |-
        (?xi:
          is_int | is_integer
        )\b
      scope: support.function.alias.php
