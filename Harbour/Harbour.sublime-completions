{
	"scope": "source.harbour - variable.other.harbour",
	"completions":
	[
		"Harbour",
/* A */
		{ "trigger": "aadd", 	"contents": "aadd(${1:aArray}, ${2:value})" },
		{ "trigger": "abs", 	"contents": "abs(${1:number})" },
		{ "trigger": "achoice", "contents": "achoice(${1:nTop}, ${2:nLeft}, ${3:nBottom}, ${4:nRight}, ${5:aItems})" },
		{ "trigger": "aclone", 	"contents": "aclone(${1:aArray})" },
		{ "trigger": "acopy", 	"contents": "acopy(${1:aSource}, ${2:aTarget})" },
		{ "trigger": "adel", 	"contents": "adel(${1:aArray}, ${2:nPos})" },
		{ "trigger": "adir", 	"contents": "adir(${1:cFileMask}, ${2:aName}, ${3:aSizes}, ${4:aDate}, ${5:aTime}, ${6:aAttr})" },
		{ "trigger": "aeval", 	"contents": "aeval(${1:aArray}, \\{|${2:elem}| ${3:elem }\\}, ${4:nStart}, ${5:nCount})" },
		{ "trigger": "afields",	"contents": "afields(${1:aNames}, ${2:aTypes}, ${3:aLens}, ${4:aDecs})" },
		{ "trigger": "afill", 	"contents": "afill(${1:aArray}, ${2:value})" },
		{ "trigger": "ains", 	"contents": "ains(${1:aArray}, ${2:nPos})" },
		{ "trigger": "alert", 	"contents": "alert(${1:message})" },
		{ "trigger": "alias", 	"contents": "alias(${1:nWorkArea})" },
		{ "trigger": "alltrim", "contents": "alltrim(${1:cString})" },
		{ "trigger": "altd",    "contents": "altd(${1:[nAction]})" },
		{ "trigger": "array", 	"contents": "array(${1:number})" },
		{ "trigger": "asc", 	"contents": "asc(${1:cCharacter})" },
		{ "trigger": "ascpos",	"contents": "ascpos(${1:cCharacter},${2:[nPos]})" },
		{ "trigger": "ascan", 	"contents": "ascan(${1:aArray}, ${2:expSearch})" },
		{ "trigger": "asin", 	"contents": "asin(${1:nRadians})" },
		{ "trigger": "asize", 	"contents": "asize(${1:aArray}, ${2:nLen})" },
		{ "trigger": "asizealloc", "contents": "asizealloc(${1:aArray}, ${2:nCount})" },
		{ "trigger": "asort", 	"contents": "asort(${1:aArray}, ${2:nStart}, ${3:nCount}, \\{|${4:x},${5:y}| ${4:x} < ${5:y}\\})" },
		{ "trigger": "at", 	    "contents": "at(${1:cSearch}, ${2:cString})" },
		{ "trigger": "atail", 	"contents": "atail(${1:aArray})" },
		{ "trigger": "atan", 	"contents": "atan(${1:nRadians})" },
		{ "trigger": "atn2", 	"contents": "atn2(${1:nSine},${2:nCosine})" },
		{ "trigger": "atnum", 	"contents": "atnum(${1:cSearch},${2:cString},${3:[nCount]},${4:[nSkipChars]})" },
		{ "trigger": "addascii","contents": "addascii(${1:cString},${2:nValue},${3:[nPos]})" },
/* B */
		{ "trigger": "bin2i",   "contents": "bin2i(${1:cBuffer})" },
		{ "trigger": "bin2l",   "contents": "bin2l(${1:cBuffer})" },
		{ "trigger": "bin2u",   "contents": "bin2u(${1:cBuffer})" },
		{ "trigger": "bin2w",   "contents": "bin2w(${1:cBuffer})" },
		{ "trigger": "bof",     "contents": "bof()" },
		{ "trigger": "break",   "contents": "break(${1:xExp})" },
		{ "trigger": "browse",  "contents": "browse(${1:nTop}, ${2:nLeft}, ${3:nBottom}, ${4:nRight})" },
/* C */
		{ "trigger": "cdow",    "contents": "cdow(${1:dDate})" },
		{ "trigger": "chr", 	"contents": "chr(${1:ascii})" },
		{ "trigger": "clipinit","contents": "clipinit()" },
		{ "trigger": "cmonth",  "contents": "cmonth(${1:dDate})" },
		{ "trigger": "col",     "contents": "col()" },
		{ "trigger": "copy", 	"contents": "copy(${1:source}, ${2:dest})" },
		{ "trigger": "cos", 	"contents": "cos(${1:arg})" },
		{ "trigger": "count", 	"contents": "count()" },
		{ "trigger": "ctod",    "contents": "ctod(${1:cDateString})" },
		{ "trigger": "curdir",  "contents": "curdir(${1:cDrive})" },
/* D */
		{ "trigger": "date", 	"contents": "date()" },
		{ "trigger": "day",     "contents": "day(${1:cDate})" },
		{ "trigger": "days",    "contents": "days(${1:nSecs})" },
		{ "trigger": "dbappend","contents": "dbappend(${1:lLock})" },
		{ "trigger": "dbclearfilter", "contents": "dbclearfilter()" },
		{ "trigger": "dbcloseall",    "contents": "dbcloseall()" },
		{ "trigger": "dbclosearea",   "contents": "dbclosearea()" },
		{ "trigger": "dbcommit","contents": "dbcommit()" },
		{ "trigger": "dbcreate","contents": "dbcreate( ${1:cDbf}, ${2:aStruct}, ${3:[cDriver]}, ${4:[lOpen]}, ${5:[cAlias]} )" },
		{ "trigger": "dbdelete","contents": "dbdelete()" },
		{ "trigger": "dbedit",  "contents": "dbedit( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]}, ${5:[aColumns]}, ${6:[xUserFunc]}, ${7:[xColumnSayPictures]}, ${8:[xColumnHeaders]}, ${9:[xHeadingSeparators]}, ${10:[xColumnSeparators]}, ${11:[xFootingSeparators]}, ${12:[xColumnFootings]} )" },
		{ "trigger": "dbeval",  "contents": "dbeval( ${1:bBlock}, ${2:[bFor]}, ${3:[bWhile]}, ${4:[nNext]}, ${5:[nRecord]}, ${6:[lRest]} )" },
		{ "trigger": "dbf",     "contents": "dbf()" },
		{ "trigger": "dbfilter","contents": "dbfilter()" },
		{ "trigger": "dbgobottom","contents": "dbgobottom()" },
		{ "trigger": "dbgoto",    "contents": "dbgoto(${1:nRecord})" },
		{ "trigger": "dbgotop", "contents": "dbgotop()" },
		{ "trigger": "dbrecall","contents": "dbrecall()" },
		{ "trigger": "dbrlock", "contents": "dbrlock(${1:[nRecord]})" },
		{ "trigger": "dbrlocklist","contents": "dbrlocklist()" },
		{ "trigger": "dbrunlock","contents": "dbrunlock()" },
		{ "trigger": "dbseek",   "contents": "dbseek( ${1:expKey}, ${2:[lSoftSeek]}, ${3:[lFindLast]} )" },
		{ "trigger": "dbselectarea", "contents": "dbselectarea(${1:[xArea]})" },
		{ "trigger": "dbsetdriver", "contents": "dbsetdriver(${1:[cDriver]})" },
		{ "trigger": "dbsetfilter", "contents": "dbsetfilter( ${1:bCondition}, ${2:[cCondition]} )" },
		{ "trigger": "dbskip",    "contents": "dbskip(${1:nRecords})" },
		{ "trigger": "dbstruct",  "contents": "dbstruct()" },
		{ "trigger": "dbunlock",  "contents": "dbunlock()" },
		{ "trigger": "dbunlockall","contents": "dbunlockall()" },
		{ "trigger": "dbusearea",  "contents": "dbusearea( ${1:[lNewArea]}, ${2:[cDriver]}, ${3:cName}, ${4:[xAlias]}, ${5:[lShared]}, ${6:[lReadonly]} )" },
		{ "trigger": "deleted",  "contents": "deleted()" },
		{ "trigger": "descend",  "contents": "descend(${1:xExp})" },
		{ "trigger": "dirchange", "contents": "dirchange(${1:cDirectory})" },
		{ "trigger": "diskspace", "contents": "diskspace(${1:nDrive})" },
		{ "trigger": "do",        "contents": "do( ${1:xFuncProc}, ${2:[xArguments]} )" },
		{ "trigger": "dow",       "contents": "dow(${1:dDate})" },
		{ "trigger": "dtoc",      "contents": "dtoc(${1:dDate})" },
		{ "trigger": "dtos",      "contents": "dtos(${1:dDate})" },
/* E */ 
		{ "trigger": "elaptime",  "contents": "elaptime( ${1:cStartTime}, ${2:cEndTime} )" },
		{ "trigger": "empty",     "contents": "empty(${1:xExpr})" },
		{ "trigger": "eof",       "contents": "eof()" },
		{ "trigger": "errorsys",  "contents": "errorsys()" },
		{ "trigger": "empty",     "contents": "empty(${1:xExpr})" },
		{ "trigger": "eval",      "contents": "eval( ${1:bBlock}, ${2:[xVal]} )" },
		{ "trigger": "exp",       "contents": "exp(${1:nNumber})" },
/* F */
		{ "trigger": "fclose",    "contents": "fclose(${1:nHandle})" },
		{ "trigger": "fcount",    "contents": "fcount()" },
		{ "trigger": "fcreate",   "contents": "fcreate( ${1:cFile}, ${2:[nAttribute]} )" },
		{ "trigger": "ferase",    "contents": "ferase(${1:cFile})" },
		{ "trigger": "ferror",    "contents": "ferror()" },
		{ "trigger": "fieldblock","contents": "fieldblock(${1:cFieldName})" },
		{ "trigger": "fieldget",  "contents": "fieldget(${1:nField})" },
		{ "trigger": "fieldname", "contents": "fieldname(${1:nPosition})" },
		{ "trigger": "fieldpos",  "contents": "fieldpos(${1:cFieldName})" },
		{ "trigger": "fieldput",  "contents": "fieldput( ${1:nField}, ${2:expAssign} )" },
		{ "trigger": "fieldwblock", "contents": "fieldwblock( ${1:cFieldName}, ${2:nWorkArea} )" },
		{ "trigger": "file",      "contents": "file(${1:cFile})" },
		{ "trigger": "flock",     "contents": "flock()" },
		{ "trigger": "fopen",     "contents": "fopen( ${1:cFile}, ${2:[nMode]} )" },
		{ "trigger": "found",     "contents": "found()" },
		{ "trigger": "fread",     "contents": "fread( ${1:nHandle}, @${2:cBuffer}, ${3:nBytes} )" },
		{ "trigger": "freadstr",  "contents": "freadstr( ${1:nHandle}, ${2:nBytes} )" },
		{ "trigger": "frename",   "contents": "frename( ${1:cOldFile}, ${2:cNewFile} )" },
		{ "trigger": "fseek",     "contents": "fseek( ${1:nHandle}, ${2:nOffset}, ${3:[nOrigin]} )" },
		{ "trigger": "fwrite",    "contents": "fwrite( ${1:nHandle}, ${2:cBuffer}, ${3:[nBytes]} )" },
/* G */
		{ "trigger": "getenv",    "contents": "getenv( ${1:cEnviroment}, ${2:cDefaultValue} )" },
/* H */
/* I */
		{ "trigger": "i2bin", 		"contents": "i2bin(${1:number})" },
		{ "trigger": "if", 			"contents": "if(${1:lCondition}, ${2:exprTrue}, ${3:exprFalse})" },
		{ "trigger": "iif", 		"contents": "iif(${1:lCondition}, ${2:exprTrue}, ${3:exprFalse})" },
		{ "trigger": "indexext",	"contents": "indexext()" },
		{ "trigger": "indexord", 	"contents": "indexord()" },
		{ "trigger": "indexkey",	"contents": "indexkey(${1:nOrder})" },
		{ "trigger": "inkey",		"contents": "inkey(${1:nWaitSeconds}, ${2:nEventMask})" },
		{ "trigger": "int",			"contents": "int(${1:nNumber})" },
		{ "trigger": "invertattr", 	"contents": "invertattr(${1:xColor})" },
		{ "trigger": "invertwin", 	"contents": "invertwin(${1:nTop}, ${2:nLeft}, ${3:nBottom}, ${4:nRight})" },
		{ "trigger": "isaffirm", 	"contents": "isaffirm(${1:cChar})" },
		{ "trigger": "isalnum", 	"contents": "isalnum(${1:cString})" },
		{ "trigger": "isalpha", 	"contents": "isalpha(${1:cString})" },
		{ "trigger": "iscntrl", 	"contents": "iscntrl(${1:cString})" },
		{ "trigger": "iscolor", 	"contents": "iscolor()" },
		{ "trigger": "isdefcolor", 	"contents": "isdefcolor()" },
		{ "trigger": "isdigit", 	"contents": "isdigit(${1:cString})" },
		{ "trigger": "isdir", 		"contents": "isdir(${1:cDirSpec})" },
		{ "trigger": "isdirectory", "contents": "isdirectory(${1:cDirName})" },
		{ "trigger": "isdisk", 		"contents": "isdisk(${1:cDrive})" },
		{ "trigger": "isgraph", 	"contents": "isgraph(${1:cString})" },
		{ "trigger": "islower",		"contents": "islower(${1:cString})" },
		{ "trigger": "isnegative", 	"contents": "isnegative(${1:cChar})" },
		{ "trigger": "isprinter", 	"contents": "isprinter(${1:cPrinterName})" },
		{ "trigger": "isquick", 	"contents": "isquick(${1:cString})" },
		{ "trigger": "isshortcut", 	"contents": "isshortcut(${1:cString})" },
		{ "trigger": "isupper",		"contents": "isupper(${1:cString})" },
		{ "trigger": "isvalidthread", 	"contents": "isvalidthread(${1:xValue})" },
		{ "trigger": "isxdigit",	"contents": "isxdigit(${1:cString})" },
/* J */
		{ "trigger": "jointhread",	"contents": "jointhread(${1:pThreadHandle})" },
		{ "trigger": "justleft", 	"contents": "justleft(${1:cString}, ${2:[xChar}]})" },
/* K */
		{ "trigger": "kbdstat",		"contents": "kbdstat()" },
		{ "trigger": "keysec",		"contents": "keysec( ${1:nkey}, ${2:ntime}, ${3:[ncounter]}, ${4:[lmode]} )" },
		{ "trigger": "keytime",		"contents": "keytime( ${1:nkey}, ${2:ctime} )" },
		{ "trigger": "killallthreads",	"contents": "killallthreads()" },
		{ "trigger": "killthread",	"contents": "killthread( ${1:pthreadhandle} )" },
		{ "trigger": "ksetcaps",	"contents": "ksetcaps( ${1:[lnewmode]} )" },
		{ "trigger": "ksetins",		"contents": "ksetins( ${1:[lnewmode]} )" },
		{ "trigger": "ksetnum",		"contents": "ksetnum( ${1:[lnewmode]} )" },
		{ "trigger": "ksetscroll2",	"contents": "ksetscroll2( ${1:lnewmode} )" },
/* L */
		{ "trigger": "l2bin",		"contents": "l2bin( ${1:nExp} )" },
		{ "trigger": "lastkey",		"contents": "lastkey()" },
		{ "trigger": "lastrec",	    "contents": "lastrec()" },
		{ "trigger": "left",		"contents": "left( ${1:cString}, ${2:nCount} )" },
		{ "trigger": "len",			"contents": "len( ${1:value} )" },
		{ "trigger": "log",			"contents": "log( ${1:nExp} )" },
		{ "trigger": "lower",		"contents": "lower( ${1:cString} )" },
		{ "trigger": "ltrim",		"contents": "ltrim( ${1:cString} )" },
		{ "trigger": "lupdate",		"contents": "lupdate()" },
/* M */
		{ "trigger": "max",			"contents": "max( ${1:value1}, ${2:value2} )" },
		{ "trigger": "maxcol",		"contents": "maxcol()" },
		{ "trigger": "maxrow",		"contents": "maxrow()" },
		{ "trigger": "memoedit",	"contents": "memoedit( ${1:[cString]}, ${2:[nTop]}, ${3:[nLeft]}, ${4:[nBottom]}, ${5:[nRight]}, ${6:[lEditMode]}, ${7:[cUsrFunction]}, ${8:[nLineLength]}, ${9:[nTabSize]}, ${10:[nTxtBufferRow]}, ${11:[nTxtBufferCol]}, ${12:[nWindowRow]}, ${13:[nWindowCol]} )" },
		{ "trigger": "memoline",	"contents": "memoline( ${1:cString}, ${2:[nLineLength]}, ${3:[nLineNumber]}, ${4:[nTabSize]}, ${5:[lWrap]} )" },
		{ "trigger": "memoread",	"contents": "memoread( ${1:cFile} )" },
		{ "trigger": "memory",		"contents": "memory( ${1:nExp} )" },
		{ "trigger": "memotran",	"contents": "memotran( ${1:cString}, ${2:[cReplaceHardCR]}, ${3:[cReplaceSoftCR]} )" },
		{ "trigger": "memowrit",	"contents": "memowrit( ${1:cFile}, ${2:cString} )" },
		{ "trigger": "memvarblock",	"contents": "memvarblock( ${1:cMemVarName} )" },
		{ "trigger": "min",			"contents": "min( ${1:value1}, ${2:value2} )" },
		{ "trigger": "mlcount",		"contents": "mlcount( ${1:cString}, ${2:[nLineLength]}, ${3:[nTabSize]}, ${4:[lWrap]} )" },
		{ "trigger": "mlctopos",	"contents": "mlctopos( ${1:cString}, ${2:nWidth}, ${3:nLine}, ${4:nCol}, ${5:[nTabSize]}, ${6:[lWrap]} )" },
		{ "trigger": "mlpos",		"contents": "mlpos( ${1:cString}, ${2:nLineLength}, ${3:nLine}, ${4:[nTabSize]}, ${5:[lWrap]} )" },
		{ "trigger": "mod",			"contents": "mod( ${1:nDividend}, ${2:nDivisor} )" },
		{ "trigger": "month",		"contents": "month( ${1:dDate} )" },
		{ "trigger": "mpostolc",	"contents": "mpostolc( ${1:cString}, ${2:nWidth}, ${3:nPos}, ${4:[nTabSize]}, ${5:[lWrap]} )" },
/* N */
		{ "trigger": "nationmsg",	"contents": "nationmsg( ${1:nMsg} )" },
		{ "trigger": "neterr",		"contents": "neterr( ${1:[lNewError]} )" },
		{ "trigger": "netname",		"contents": "netname()" },
		{ "trigger": "nextkey",		"contents": "nextkey()" },
		{ "trigger": "nosnow",		"contents": "nosnow( ${1:lToggle} )" },
/* O */
		{ "trigger": "ordbagext",	"contents": "ordbagext()" },
		{ "trigger": "ordbagname",	"contents": "ordbagname( ${1:orderNumOrName} )" },
		{ "trigger": "ordcondset",	"contents": "ordconset( ${1:[cForCondition]}, ${2:[bForCondition]}, ${3:[lAll]}, ${4:[bWhileCondition]}, ${5:[bEval]}, ${6:[nInterval]}, ${7:[nStart]}, ${8:[nNext]}, ${9:[nRecord]}, ${10:[lRest]}, ${11:[lDescend]}, ${12:[lAdditive]}, ${13:[lCurrent]}, ${14:[lCustom]}, ${15:[lNoOptimize]} )" },
		{ "trigger": "ordcreate",	"contents": "ordcreate( ${1:cOrderBagName}, ${2:[cOrderName]}, ${3:[bExpKey]}, ${4:[lUnique]} )" },
		{ "trigger": "orddestroy",	"contents": "orddestroy( ${1:cOrderName}, ${2:[cOrderBagName]} )" },
		{ "trigger": "ordfor",		"contents": "ordfor( ${1:orderNumOrName}, ${2:[cOrderBagName]} )" },
		{ "trigger": "ordkey",		"contents": "ordkey( ${1:orderNumOrName}, ${2:[cOrderBagName]} )" },
		{ "trigger": "ordlistadd",	"contents": "ordlistadd( ${1:cOrderBagName}, ${2:[cOrderName]} )" },
		{ "trigger": "ordlistclear","contents": "ordlistclear()" },
		{ "trigger": "ordlistrebuild","contents": "ordlistrebuild()" },
		{ "trigger": "ordname",		"contents": "ordname( ${1:nOrder}, ${2:[cOrderBagName]} )" },
		{ "trigger": "ordnumber",	"contents": "ordnumber( ${1:cOrderName}, ${2:[cOrderBagName]} )" },
		{ "trigger": "ordsetfocus",	"contents": "ordsetfocus( ${1:[orderNumOrName]}, ${2:[cOrderBagName]} )" },
		{ "trigger": "os",			"contents": "os()" },
		{ "trigger": "outerr",		"contents": "outerr( ${1:expList} )" },
		{ "trigger": "outstd",		"contents": "outstd( ${1:expList} )" },
/* P */
		{ "trigger": "padc",		"contents": "padc( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
		{ "trigger": "padl",		"contents": "padl( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
		{ "trigger": "padr",		"contents": "padr( ${1:exp}, ${2:nLength}, ${3:[cFillChar]} )" },
		{ "trigger": "pcol",		"contents": "pcol()" },
		{ "trigger": "pcount",		"contents": "pcount()" },
		{ "trigger": "procline",	"contents": "procline( ${1:[nActivation]} )" },
		{ "trigger": "procname",	"contents": "procname( ${1:[nActivation]} )" },
		{ "trigger": "prow",		"contents": "prow()" },
/* Q */
		{ "trigger": "qout",		"contents": "qout( ${1:[explist]} )" },
		{ "trigger": "qqout",		"contents": "qqout( ${1:[explist]} )" },
/* R */
		{ "trigger": "rat",			"contents": "rat( ${1:cSearch}, ${2:cTarget} )" },
		{ "trigger": "readexit",	"contents": "readexit( ${1:[lToggle]} )" },
		{ "trigger": "readinsert",	"contents": "readinsert( ${1:[lToggle]} )" },
		{ "trigger": "readkey",		"contents": "readkey()" },
		{ "trigger": "readmodal",	"contents": "readmodal( ${1:aGetList} )" },
		{ "trigger": "readvar",		"contents": "readvar()" },
		{ "trigger": "reccount",	"contents": "reccount()" },
		{ "trigger": "recno",		"contents": "recno()" },
		{ "trigger": "recsize",		"contents": "recsize()" },
		{ "trigger": "replicate",	"contents": "replicate( ${1:cString}, ${2:nCount} )" },
		{ "trigger": "restscreen",	"contents": "restscreen( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]}, ${5:cScreen} )" },
		{ "trigger": "right",		"contents": "right( ${1:cString}, ${2:nCount} )" },
		{ "trigger": "rlock",		"contents": "rlock()" },
		{ "trigger": "round",		"contents": "round( ${1:nNumber}, ${2:nDecimals} )" },
		{ "trigger": "row",			"contents": "row()" },
		{ "trigger": "rtrim",		"contents": "rtrim( ${1:cString} )" },
/* S */
		{ "trigger": "savescreen",	"contents": "savescreen( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]} )" },
		{ "trigger": "scroll",		"contents": "scroll( ${1:[nTop]}, ${2:[nLeft]}, ${3:[nBottom]}, ${4:[nRight]}, ${5:[nVert]}, ${6:[nHoriz]} )" },
		{ "trigger": "seconds",		"contents": "seconds()" },
		{ "trigger": "select",		"contents": "select( ${1:[cAlias]} )" },
		{ "trigger": "set",			"contents": "set( ${1:nSpecifier}, ${2:[expNewSetting]}, ${3:[lOpenMode]} )" },
		{ "trigger": "setblink",	"contents": "setblink( ${1:[lToggle]} )" },
		{ "trigger": "setcancel",	"contents": "setcancel( ${1:[lToggle]} )" },
		{ "trigger": "setcolor",	"contents": "setcolor( ${1:[cColorString]} )" },
		{ "trigger": "setcursor",	"contents": "setcursor( ${1:[nCursorShape]} )" },
		{ "trigger": "setkey",		"contents": "setkey( ${1:nKeyCode}, ${2:[bAction]} )" },
		{ "trigger": "setmode",		"contents": "setmode( ${1:nRows}, ${2:nCols} )" },
		{ "trigger": "setpos",		"contents": "setpos( ${1:nRow}, ${2:nCol} )" },
		{ "trigger": "setprc",		"contents": "setprc( ${1:nRow}, ${2:nCol} )" },
		{ "trigger": "soundex",		"contents": "soundex( ${1:cString} )" },
		{ "trigger": "space",		"contents": "space( ${1:nCount} )" },
		{ "trigger": "sqrt",		"contents": "sqrt( ${1:nNumber} )" },
		{ "trigger": "str",			"contents": "str( ${1:nNumber}, ${2:[nLength]}, ${3:[nDecimals]} )" },
		{ "trigger": "strtran",		"contents": "strtran( ${1:cString}, ${2:cSearch}, ${3:[cReplace]}, ${4:[nStart]}, ${5:[nCount]} )" },
		{ "trigger": "stuff",		"contents": "stuff( ${1:cString}, ${2:nStart}, ${3:nDelete}, ${4:cInsert} )" },
		{ "trigger": "substr",		"contents": "substr( ${1:cString}, ${2:nStart}, ${3:[nCount]} )" }
/* T */
/* U */
/* V */
/* W */
/* X */
/* Y */
/* Z */
	]
}

