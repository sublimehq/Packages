%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: D
comment: D language
file_extensions:
  - d
  - di
first_line_match: ^#!.*\bg?dmd\b.
scope: source.d
variables:
  name: '[[:alpha:]_][[:alnum:]_]*'
  identifier: '{{name}}(?:\.{{name}})*'
  std_identifier: '(?:std|core)\.{{identifier}}'
  identifier_ref: '\.?{{identifier}}'
  type_look_ahead: '(?=\b({{identifier_ref}}))'
  string_postfix: '[cwd]?'
  escape_sequence: '\\([''"?\\0abfnrtv]|x{{hex_char}}{2}|[0-7]{1,3}|u{{hex_char}}{4}|U{{hex_char}}{8}|&\w+;)'
  hex_char: '[0-9a-fA-F]'
  type_ctor: 'const|immutable|inout|shared'
  type2_look_ahead: '(?=\*|\[|\bdelegate\b|\bfunction\b)'

  attributes: 'static|abstract|final|override|synchronized|auto|scope|const|immutable|inout|shared|__gshared|nothrow|pure|ref|return'
  at_attributes: 'disable|nogc|property|safe|system|trusted'

  basic_types: 'bool|byte|ubyte|short|ushort|int|uint|long|ulong|cent|ucent|char|wchar|dchar|float|double|real|ifloat|idouble|ireal|cfloat|cdouble|creal|void'
contexts:
  main:
    - match: '^#!.*$'
      scope: comment.line.shebang.d
      set: main-after-shebang-in
    - match: '(?=.)'
      set: main-after-shebang-in
  main-after-shebang-in:
    - include: comment-in
    - include: attribute-specifier
    - match: '\b(module)\s+({{identifier}})(;)'
      scope: meta.module.d
      captures:
        1: keyword.control.module.d
        2: entity.name.namespace.d
        3: punctuation.terminator.d
      set: module-context-in
    - match: '\s'
    - match: (?=.)
      set: module-context-in
  module-context-in:
    - match: '\b(module)\b'
    # - match: /\*\*/
    #   scope: comment.block.empty.d punctuation.definition.comment.d
    # - include: scope:text.html.javadoc
    - include: attribute-specifier
    - include: comment-in
    - include: declaration-in
    - include: all-types-in
    - match: |-
        (?x)^\s*
        ((?:\b(private|package|protected|public|export|static|final|native|synchronized|abstract)\b\s*)*) # modifier
        (class|interface)\s+
        (\w+)\s* # identifier
        (?:\(\s*([^\)]+)\s*\)|)\s* # Template type
        (?:
          \s*(:)\s*
          (\w+)
          (?:\s*,\s*(\w+))?
          (?:\s*,\s*(\w+))?
          (?:\s*,\s*(\w+))?
          (?:\s*,\s*(\w+))?
          (?:\s*,\s*(\w+))?
          (?:\s*,\s*(\w+))?
        )? # super class
      captures:
        1: storage.modifier.d
        3: storage.type.d
        4: entity.name.type.class.d
        5: storage.type.template.d
        6: punctuation.separator.inheritance.d
        7: entity.other.inherited-class.d
        8: entity.other.inherited-class.d
        9: entity.other.inherited-class.d
        10: entity.other.inherited-class.d
        11: entity.other.inherited-class.d
        12: entity.other.inherited-class.d
        13: entity.other.inherited-class.d
      push:
        - meta_scope: meta.class.d
        - match: \b(_|:)\b
          captures:
            1: storage.modifier.d
          push:
            - meta_scope: meta.definition.class.extends.d
            - match: "(?={)"
              captures:
                1: storage.modifier.d
              pop: true
            - include: all-types-in
        - match: '(?<=\})'
          pop: true
        - include: $top_level_main
    - match: |-
        (?x)^\s*
        ((?:\b(private|package|protected|public|export|static|final|native|synchronized|abstract|const)\b\s*)*) # modifier
        (struct)\s+
        (\w+)\s* # identifier
        (?:\(\s*([^\)]+)\s*\)|)\s* # Template type
      captures:
        1: storage.modifier.d
        3: storage.type.d
        4: entity.name.type.struct.d
        5: storage.type.template.d
      push:
        - meta_scope: meta.definition.struct.d
        - match: "(?={|//|;)"
          pop: true
        - match: \b(_|:)\b
          captures:
            1: storage.modifier.d
          push:
            - meta_scope: meta.definition.class.extends.d
            - match: "(?={)"
              captures:
                1: storage.modifier.d
              pop: true
            - include: all-types-in
    - match: |-
        (?x)^\s*
        ((?:\b(private|package|protected|public|export|static|final|native|synchronized|abstract|threadsafe|transient|shared|__gshared)\b\s*)*) # modifier
        (\b(this))\s* # identifier
        (?!.*;)  # abort if line has a ;
        (?=\()
      captures:
        1: storage.modifier.d
        3: entity.name.function.constructor.d
      push:
        - meta_scope: meta.function.d meta.function.constructor.d
        - include: function_assertions
        - include: $top_level_main
    - match: |-
        (?x)
                    (?:  ^                                 # begin-of-line
                      |  (?: (?<!else|new|=) )             #  or word + space before name
                    )
                  ((?:\b(?:private|package|protected|public|export|static|final|native|synchronized|abstract|threadsafe|transient|override)\b\s*)*) # modifier
                    (~this) # actual name
                     \s*(\()                           # start bracket or end-of-line

      captures:
        1: storage.modifier.d
        2: entity.name.function.destructor.d
      push:
        - meta_scope: meta.function.d meta.function.destructor.d
        - include: function_assertions
        - include: $top_level_main
    # - match: |-
    #     (?x)^\s*
    #     (?!else(?:\s+static)?\s+if\b)
    #     ((?:\b(?:private|package|protected|public|export|static|final|native|lazy|synchronized|abstract|threadsafe|transient|override|pure|nothrow)\b\s*)*+) # modifier
    #     (\b(?:void|boolean|byte|char|short|int|float|long|double|[\w_]+[\w0-9_]*|(?:\w+\.)*[A-Z]\w+)\b(?:<(?:(?:(?:\w+\.)*[A-Z]\w+)(?:\s*,\s*)?)+>|(?:\[\s*\])*)?|typeof\(.*?\)|const\(.*?\)\*?)\s* # type
    #     (\w+)\s* # identifier
    #     (?!.*;)  # abort if line has a ;
    #     (?=\()
    #   captures:
    #     1: storage.modifier.d
    #     2: storage.type.d
    #     3: entity.name.function.d
    #   push:
    #     - meta_scope: meta.function.d
    #     - include: function_assertions
    #     - include: $top_level_main
    - match: '\{'
      push:
        - meta_scope: meta.block.d
        - match: '\}'
          pop: true
        - include: $top_level_main
    - match: '\b([A-Z][A-Z0-9_]+)\b'
      scope: constant.other.d
    - match: \b(auto|static|override|final|const|abstract|volatile|synchronized|lazy|immutable|shared|__gshared|pure|nothrow|ref)\b
      scope: storage.modifier.d
    - match: \b(template|interface|class|enum|struct|union)\b
      scope: storage.type.d
    - match: \b(ushort|int|uint|long|ulong|float|void|byte|ubyte|double|bit|char|wchar|ucent|cent|short|bool|dchar|real|ireal|ifloat|idouble|creal|cfloat|cdouble|string)\b
      scope: storage.type.d
    - match: \b(try|catch|finally|throw)\b
      scope: keyword.control.exception.d
    - match: \b(return|break|case|continue|default|do|while|for|switch|if|else)\b
      scope: keyword.control.d
    - match: \b(if|else|switch|iftype)\b
      scope: keyword.control.conditional.d
    - match: \b(goto|break|continue)\b
      scope: keyword.control.branch.d
    - match: \b(while|for|foreach(_reverse)?)\b
      scope: keyword.control.repeat.d
    - match: \b(version|return|with|invariant|body|scope|in|out|inout|asm|mixin|function|delegate)\b
      scope: keyword.control.statement.d
    - match: \b(alias|typedef)\b
      scope: keyword.control.alias.d
    - match: \b(true|false)\b
      scope: constant.language.boolean.d
    - match: \b(__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|null)\b
      scope: constant.language.d
    - match: \b(this|super)\b
      scope: variable.language.d
    - include: number-in
    - include: character-in
    - include: string-in
    - match: (==|!=|<=|>=|<>|<|>)
      scope: keyword.operator.comparison.d
    - match: (\-\-|\+\+)
      scope: keyword.operator.increment-decrement.d
    - match: (\-|\+|\*|\/|~|%)
      scope: keyword.operator.arithmetic.d
    - match: (!|&&|\|\|)
      scope: keyword.operator.logical.d
    - match: \b(opNeg|opCom|opPostInc|opPostDec|opCast|opAdd|opSub|opSub_r|opMul|opDiv|opDiv_r|opMod|opMod_r|opAnd|opOr|opXor|opShl|opShl_r|opShr|opShr_r|opUShr|opUShr_r|opCat|opCat_r|opEquals|opEquals|opCmp|opCmp|opCmp|opCmp|opAddAssign|opSubAssign|opMulAssign|opDivAssign|opModAssign|opAndAssign|opOrAssign|opXorAssign|opShlAssign|opShrAssign|opUShrAssign|opCatAssign|opIndex|opIndexAssign|opCall|opSlice|opSliceAssign|opPos|opAdd_r|opMul_r|opAnd_r|opOr_r|opXor_r)\b
      scope: keyword.operator.overload.d
    - match: \b(new|delete|typeof|typeid|cast|align|is)\b
      scope: keyword.other.d
    - match: \b(new|throws)\b
      scope: keyword.other.class-fns.d
    - match: \b(deprecated|unittest|debug)\b
      scope: keyword.other.debug.d
    - match: \b(u_char|u_short|u_int|u_long|ushort|uint|u_quad_t|quad_t|qaddr_t|caddr_t|daddr_t|dev_t|fixpt_t|blkcnt_t|blksize_t|gid_t|in_addr_t|in_port_t|ino_t|key_t|mode_t|nlink_t|id_t|pid_t|off_t|segsz_t|swblk_t|uid_t|id_t|clock_t|size_t|ssize_t|time_t|useconds_t|suseconds_t)\b
      scope: support.type.sys-types.c
    - match: \b(pthread_attr_t|pthread_cond_t|pthread_condattr_t|pthread_mutex_t|pthread_mutexattr_t|pthread_once_t|pthread_rwlock_t|pthread_rwlockattr_t|pthread_t|pthread_key_t)\b
      scope: support.type.pthread.c
    - match: \b(int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|int_least8_t|int_least16_t|int_least32_t|int_least64_t|uint_least8_t|uint_least16_t|uint_least32_t|uint_least64_t|int_fast8_t|int_fast16_t|int_fast32_t|int_fast64_t|uint_fast8_t|uint_fast16_t|uint_fast32_t|uint_fast64_t|intptr_t|uintptr_t|intmax_t|intmax_t|uintmax_t|uintmax_t)\b
      scope: support.type.stdint.c
  all-types-in:
    - include: support-type-built-ins-in
    - include: support-type-in
    - include: storage-type-d-in
  constant_placeholder-in:
    - match: '(?i:%(\([a-z_]+\))?#?0?\-?[ ]?\+?([0-9]*|\*)(\.([0-9]*|\*))?[hL]?[a-z%])'
      scope: constant.other.placeholder.d
  function_assertions-in:
    - match: '(in|out)\s*(?=\{)'
      captures:
        1: keyword.control.statement.d
      push:
        - match: '\{' # Push onto the stack for blocks so that } pops functions/methods/classes properly
          push:
            - meta_scope: meta.block.d
            - match: '\}'
              pop: true
            - include: $top_level_main
        - match: (in|out)
          scope: keyword.control.statement.d
        - match: (?=body|do)
          pop: true
    - match: '(?<=\})'
      pop: true
  statement-remainder-in:
    - match: \(
      push:
        - meta_scope: meta.definition.param-list.d
        - match: (?=\))
          pop: true
        - include: all-types-in
    - match: (throws)
      captures:
        1: keyword.other.class-fns.d
      push:
        - meta_scope: meta.definition.throws.d
        - match: "(?={)"
          captures:
            1: keyword.other.class-fns.d
          pop: true
        - include: all-types-in
  storage-type-d-in:
    - match: '\b(void|byte|short|char|int|long|float|double|boolean|([a-z]\w+\.)*[A-Z]\w+(?![\(\.]))\b'
      scope: storage.type.d

  function-context-in:
    - include: comment-in
    - include: declaration-in
  comment-in:
    - match: /\*
      scope: punctuation.definition.comment.d
      push:
        - meta_scope: comment.block.d
        - match: \*/
          scope: punctuation.definition.comment.d
          pop: true
    - match: (//).*$
      scope: comment.line.double-slash.d
      captures:
        1: punctuation.definition.comment.d
    - include: nested-comment
  nested-comment:
    - match: /\+
      scope: punctuation.definition.comment.d
      push:
        - meta_scope: comment.block.nested.d
        - match: \+/
          scope: punctuation.definition.comment.d
          pop: true
        - include: nested-comment
  number-in:
    # TODO: Hex floats
    - match: |-
        (?x)
        (
          (\b0[xX]{{hex_char}}+(_{{hex_char}}+)*)            # 0x0, 0X0, 0x000_000
          |
          (\b0[bB][01]+(_[01]+)*)
          |
          (
            (\b[0-9]+(_[0-9]+)*\.?([0-9]+_[0-9]+)?[0-9]*)  # 0.0, 0_0.0, 0.0_0
            |
            (\.[0-9]+(_[0-9]+)*)                           # .0, .0_0
          )((e|E)(\+|-)?[0-9]+)?                           # 0e+5
        )
        (L[uU]|[uU]L|[LuU])?                                # 0l, 0U, 0Lu, 0UL
        \b
      captures:
        1: constant.numeric.d
        15: storage.type.integer.d
  character-in:
    - match: \'(?:({{escape_sequence}})|[^\\'])\'
      scope: string.quoted.single.d
      captures:
        1: constant.character.escape.d
    - match: \'.*\'
      scope: invalid.illegal.d
  string-in:
    # Regular string
    - match: '"'
      scope: punctuation.definition.string.begin.d
      push:
        - meta_scope: string.quoted.double.d
        - match: '(")({{string_postfix}})'
          captures:
            1: punctuation.definition.string.end.d
            2: storage.type.string.d
          pop: true
        - match: '{{escape_sequence}}'
          scope: constant.character.escape.d
        - match: \\.
          scope: invalid.illegal.unknown-escape.d
    # Wysiwyg string
    - match: r"
      scope:  punctuation.definition.string.begin.d
      push:
        - meta_scope: string.quoted.double.raw.d
        - match: '(")({{string_postfix}})'
          captures:
            1: punctuation.definition.string.end.d
            2: storage.type.string.d
          pop: true
    # Alternate Wysiwyg string
    - match: "`"
      scope: punctuation.definition.string.begin.d
      push:
        - meta_scope: string.quoted.double.raw.backtick.d
        - match: '(`)({{string_postfix}})'
          captures:
            1: punctuation.definition.string.end.d
            2: storage.type.string.d
          pop: true
    # Deprecated Hex string
    - match: x"
      scope: punctuation.definition.string.begin.d
      push:
        - meta_scope: string.quoted.double.raw.d
        - match: '(")({{string_postfix}})'
          captures:
            1: punctuation.definition.string.end.d
            2: storage.type.string.d
          pop: true
        - match: '{{hex_char}}\s*{{hex_char}}'
          scope: constant.character.escape.d
        - match: '[^\s]'
          scope: invalid.illegal.unknown-escape.d
    # Deliminated string with custom identifier
    - match: 'q"({{name}})(.*)$'
      scope: punctuation.definition.string.begin.d
      captures:
        2: invalid.illegal.d
      push:
        - meta_scope: string.quoted.double.raw.d
        - match: '(^\1")({{string_postfix}})'
          captures:
            1: punctuation.definition.string.end.d
            2: storage.type.string.d
          pop: true
    # Nested Deliminated string
    - match: 'q"\['
      scope: punctuation.definition.string.begin.d
      push:
        - meta_scope: string.quoted.double.raw.d
        - match: '(\]")({{string_postfix}})'
          captures:
            1: punctuation.definition.string.end.d
            2: storage.type.string.d
          pop: true
    - match: 'q"\('
      scope: punctuation.definition.string.begin.d
      push:
        - meta_scope: string.quoted.double.raw.d
        - match: '(\)")({{string_postfix}})'
          captures:
            1: punctuation.definition.string.end.d
            2: storage.type.string.d
          pop: true
    - match: 'q"<'
      scope: punctuation.definition.string.begin.d
      push:
        - meta_scope: string.quoted.double.raw.d
        - match: '(>")({{string_postfix}})'
          captures:
            1: punctuation.definition.string.end.d
            2: storage.type.string.d
          pop: true
    - match: 'q"{'
      scope: punctuation.definition.string.begin.d
      push:
        - meta_scope: string.quoted.double.raw.d
        - match: '(}")({{string_postfix}})'
          captures:
            1: punctuation.definition.string.end.d
            2: storage.type.string.d
          pop: true
    # Other deliminated string
    - match: 'q"(.)'
      scope: punctuation.definition.string.begin.d
      push:
        - meta_scope: string.quoted.double.raw.d
        - match: '(\1"|\1(.))({{string_postfix}})'
          captures:
            1: punctuation.definition.string.end.d
            2: invalid.illegal.d
            3: storage.type.string.d
          pop: true
    # Token string
    - match: 'q{'
      scope: punctuation.definition.string.begin.d
      push:
        - meta_scope: string.unquoted.embedded.d.d
        - meta_content_scope: source.d
        - match: '}'
          scope: punctuation.definition.string.end.d
          pop: true
        - include: module-context-in
  attribute-specifier-in:
    - include: attribute-in
    - match: ':'
      scope: punctuation.section.d
  attribute-in:
    - match: '\b({{attributes}})\b'
      scope: storage.modifier.d
    - match: '(@)'
      scope: punctuation.definition.annotation.begin.d
      push: at-attribute
    - match: '\b(extern)\s*(\()'
      captures:
        1: keyword.other.external.d
        2: punctuation.definition.annotation.begin.d
      push: extern-attribute
    - match: '\b(align)\s*(\()'
      captures:
        1: keyword.other.alignment.d
        2: punctuation.definition.annotation.begin.d
      push: align-attribute
    - match: '\b(deprecated)\s*(\()'
      captures:
        1: keyword.other.deprecated.d
        2: punctuation.definition.annotation.begin.d
      push: deprecated-attribute
    - match: '\b(deprecated)\b'
      scope: keyword.other.deprecated.d
    - include: visibility-attributes
    - match: '\b(pragma)\s*(\()'
      captures:
        1: keyword.other.pragma.d
        2: punctuation.definition.annotation.begin.d
      push: pragma-attribute
  at-attribute:
    - match: '({{at_attributes}})\b'
      scope: storage.attribute.d
      pop: true
    - match: '\('
      scope: punctuation.definition.annotation.begin.d
      set: uda
    - match: '({{name}})\s*(\()'
      captures:
        1: variable.function.d
        2: punctuation.definition.annotation.begin.d
      set: uda
    - match: '({{name}})\b'
      scope:  variable.other.constant.d
      pop: true
  uda:
    - include: module-context-in
    - match: '\)'
      scope: punctuation.definition.annotation.end.d
      pop: true
  extern-attribute:
    - match: '(C\+\+|C|D|Windows|System|Objective-C)'
      scope: string.other.d
    - match: '{{identifier}}'
      scope: string.other.d
    - match: ','
      scope: punctuation.separator.sequence.d
    - match: '\)'
      scope: punctuation.definition.annotation.end.d
      pop: true
    - match: '[^\s]'
      scope: invalid.illegal.d
  align-attribute:
    - include: module-context-in
    - match: '\)'
      scope: punctuation.definition.annotation.end.d
      pop: true
  deprecated-attribute:
    - include: module-context-in
    - match: '\)'
      scope: punctuation.definition.annotation.end.d
      pop: true
  visibility-attributes:
    - match: '\b(private|protected|public|export)\b'
      scope: storage.modifier.access-control.d
    - match: '\b(package)\s*(\()'
      captures:
        1: storage.modifier.access-control.d
        2: punctuation.definition.annotation.begin.d
      push:
        - match: '{{identifier}}'
          scope: variable.other.constant.d
        - match: '\)'
          scope: punctuation.definition.annotation.end.d
          pop: true
        - match: '.'
          scope: invalid.illegal.d
    - match: '\b(package)\b'
      scope: storage.modifier.access-control.d
  pragma-attribute:
    - match: '\b({{name}})\b'
      scope: variable.function.d
      set:
        - include: module-context-in
        - match: '\)'
          scope: punctuation.definition.annotation.end.d
          pop: true
    - match: '[^\s]'
      scope: invalid.illegal.d
  import-in:
    - match: '\b(import)\b'
      scope: keyword.control.import.d
      push: import-list
  import-list:
    - match: '\b(?:({{std_identifier}})|({{identifier}}))\b'
      captures:
        1: support.module.d
        2: variable.other.constant.d
      set:
        - match: ':'
          scope: punctuation.separator.import-binding.d
          set: import-binding-list
        - match: ';'
          scope: punctuation.terminator.d
          pop: true
        - match: ','
          scope: punctuation.separator.sequence.d
          set: import-list
        - match: '='
          scope: keyword.operator.assignment.d
          set:
            - match: '\b(?:({{std_identifier}})|({{identifier}}))\b'
              captures:
                1: support.module.d
                2: variable.other.constant.d
              set:
                - match: ';'
                  scope: punctuation.terminator.d
                  pop: true
                - match: ','
                  scope: punctuation.separator.sequence.d
                  set: import-list

                - match: '[^\s]'
                  scope: invalid.illegal.d
            - match: '[^\s]'
              scope: invalid.illegal.d
        - match: '[^\s]'
          scope: invalid.illegal.d
    - match: '[^\s]'
      scope: invalid.illegal.d
  import-binding-list:
    - match: '\b({{identifier}})\b'
      scope: variable.other.constant.d
      set:
        - match: ';'
          scope: punctuation.terminator.d
          pop: true
        - match: ','
          scope: punctuation.separator.sequence.d
          set: import-binding-list
        - match: '='
          scope: keyword.operator.assignment.d
          set:
            - match: '\b({{identifier}})\b'
              scope: variable.other.constant.d
              set:
                - match: ';'
                  scope: punctuation.terminator.d
                  pop: true
                - match: ','
                  scope: punctuation.separator.sequence.d
                  set: import-binding-list

                - match: '[^\s]'
                  scope: invalid.illegal.d
            - match: '[^\s]'
              scope: invalid.illegal.d
        - match: '[^\s]'
          scope: invalid.illegal.d
    - match: '[^\s]'
      scope: invalid.illegal.d
  type:
    - match: '\b({{type_ctor}})\b'
      scope: storage.modifier.d
      set:
        - match: '\('
          scope: punctuation.section.group.begin.d
          set: [basic-type2, type-storage-modifier-end, type]
        - match: '(?=[^\s])'
          set: type
    - match: '(?=[^\s])'
      set: basic-type
  type-storage-modifier-end:
    - match: '\)'
      scope: punctuation.section.group.end.d
      pop: true
    - match: '(?=[^\s])'
      scope: invalid.illegal.d
  basic-type:
    - match: '\b({{identifier_ref}})\b'
      scope: storage.type.d
      set:
        - match: '{{type2_look_ahead}}'
          set: basic-type2
        - match: '(?=[^\s])'
          pop: true
    # TODO: More basic types
    - match: '(?=[^\s])'
      pop: true
  basic-type2:
    - match: '\*'
      scope: keyword.operator.pointer.d
    - match: '\['
      scope: keyword.operator.other.d
      push:
        # TODO: Ranges
        - match: '{{type_look_ahead}}'
          push: type
        - include: value-in
        - match: '\]'
          scope: keyword.operator.other.d
          pop: true
    - match: '\b(delegate|function)\b'
      scope: keyword.other.d
      push: function-pointer-type
    - match: '(?=[^\s])'
      pop: true
  function-pointer-type:
    # TODO
    - match: '.'
      pop: true
  declaration-in:
    - include: import-in
    - include: function-or-variable-in
  function-or-variable-in:
    - match: '{{type_look_ahead}}'
      push: [function-or-variable-after-type, type]
  function-or-variable-after-type:
    - match: '\b({{name}})\s*(=)'
      captures:
        1: variable.other.d
        2: keyword.operator.assignment.d
      set:
        - include: value-in
        - match: '\;'
          scope: punctuation.terminator.d
          pop: true
    - match: '\b({{name}})\s*(;)'
      captures:
        1: variable.other.d
        2: punctuation.terminator.d
      pop: true
    - match: '\b({{name}})\s*(?=\(|$)'
      captures:
        1: entity.name.function.d
      set: [function-definition, function-argument-definition-list]
    - match: '(?=[^\s])'
      pop: true
  function-definition:
    - match: '{'
      scope: punctuation.section.block.begin.d
      set:
        - include: function-context-in
        - match: '}'
          scope: punctuation.section.block.end.d
          pop: true
    - match: ';'
      pop: true
  value-in:
    - include: number-in
    - include: string-in
  function-argument-definition-list:
    - match: '\('
      scope: punctuation.section.group.start.d
      set:
        - match: '{{type_look_ahead}}'
          set: [function-argument, type]
    - match: '(?=[^\s])'
      pop: true
  function-argument:
    - match: '\b{{name}}\b'
      scope: variable.parameter.d
      set:
        - match: ','
          set: [function-argument, type]
        - match: '='
          # TODO
        - match: '\)'
          scope: punctuation.section.group.end.d
          pop: true
        - match: '[^\s]'
          scope: invalid.illegal.d
    # - match: '\.\.\.' # TODO
    - match: ','
      push: type
    - match: '\)'
      scope: punctuation.section.group.end.d
      pop: true
    - match: '[^\s]'
      scope: invalid.illegal.d
  support-type-built-ins-classes-in:
    - match: \b(AbstractServer|ArchiveMember|ArgParser|Barrier|BomSniffer|Buffer|BufferInput|BufferOutput|BufferSlice|BufferedFile|BufferedStream|BzipInput|BzipOutput|CFile|CacheInvalidatee|CacheInvalidator|CacheServer|CacheThread|Certificate|CertificateStore|CertificateStoreCtx|ChunkInput|ChunkOutput|ClassInfo|Cluster|ClusterCache|ClusterQueue|ClusterThread|CmdParser|ComObject|Compress|Condition|Conduit|Cookie|CookieParser|CookieStack|CounterInput|CounterOutput|DataFileInput|DataFileOutput|DataInput|DataOutput|Database|DatagramConduit|DeviceConduit|DigestInput|DigestOutput|DocPrinter|Document|DummyInputStream|DummyOutputStream|EndianInput|EndianOutput|EndianProtocol|EndianStream|EventSeekInputStream|EventSeekOutputStream|FTPConnection|Fiber|Field|File|FileConduit|FileFolder|FileGroup|FileInput|FileOutput|FilePath|FileScan|FilterStream|Foo|FormatOutput|GreedyInput|GreedyOutput|Gregorian|GrowBuffer|HeapCopy|HeapSlice|Hierarchy|HttpClient|HttpCookies|HttpCookiesView|HttpGet|HttpHeaders|HttpHeadersView|HttpParams|HttpPost|HttpStack|HttpTokens|HttpTriplet|IPv4Address|IUnknown|InputFilter|InternetAddress|InternetHost|Layout|LineInput|LineIterator|LinkedFolder|Log|MapInput|MapOutput|MappedBuffer|Md2|Md4|MemoryQueue|MemoryStream|MmFile|MmFileStream|ModuleInfo|MulticastConduit|Mutex|NativeProtocol|NetCall|NetHost|NetworkAlert|NetworkCache|NetworkCall|NetworkClient|NetworkCombo|NetworkMessage|NetworkQueue|NetworkRegistry|NetworkTask|NotImplemented|Object|Observer|OutBuffer|OutputFilter|PersistQueue|Pipe|PipeConduit|Print|PrivateKey|Process|Properties|Protocol|ProtocolReader|ProtocolWriter|PublicKey|PullParser|QueueFile|QueueServer|QueueThread|QueuedCache|QuoteIterator|Random|Range|ReadWriteMutex|Reader|Record|RegExp|RegExpT|RegexIterator|RollCall|SSLCtx|SSLServerSocket|SSLSocketConduit|SaxParser|SelectionKey|Semaphore|ServerSocket|ServerThread|Service|SimpleIterator|SliceInputStream|SliceSeekInputStream|SliceSeekOutputStream|SliceStream|SnoopInput|SnoopOutput|Socket|SocketConduit|SocketListener|SocketSet|SocketStream|Sprint|Stream|StreamIterator|TArrayStream|TaskServer|TaskThread|TcpSocket|Telnet|TempFile|Text|TextFileInput|TextFileOutput|TextView|Thread|ThreadGroup|ThreadLocal|ThreadPool|Token|TypeInfo|TypeInfo_AC|TypeInfo_Aa|TypeInfo_Ab|TypeInfo_Ac|TypeInfo_Ad|TypeInfo_Ae|TypeInfo_Af|TypeInfo_Ag|TypeInfo_Ah|TypeInfo_Ai|TypeInfo_Aj|TypeInfo_Ak|TypeInfo_Al|TypeInfo_Am|TypeInfo_Ao|TypeInfo_Ap|TypeInfo_Aq|TypeInfo_Ar|TypeInfo_Array|TypeInfo_As|TypeInfo_AssociativeArray|TypeInfo_At|TypeInfo_Au|TypeInfo_Av|TypeInfo_Aw|TypeInfo_C|TypeInfo_Class|TypeInfo_D|TypeInfo_Delegate|TypeInfo_Enum|TypeInfo_Function|TypeInfo_Interface|TypeInfo_P|TypeInfo_Pointer|TypeInfo_StaticArray|TypeInfo_Struct|TypeInfo_Tuple|TypeInfo_Typedef|TypeInfo_a|TypeInfo_b|TypeInfo_c|TypeInfo_d|TypeInfo_e|TypeInfo_f|TypeInfo_g|TypeInfo_h|TypeInfo_i|TypeInfo_j|TypeInfo_k|TypeInfo_l|TypeInfo_m|TypeInfo_o|TypeInfo_p|TypeInfo_q|TypeInfo_r|TypeInfo_s|TypeInfo_t|TypeInfo_u|TypeInfo_v|TypeInfo_w|TypedInput|TypedOutput|URIerror|UdpSocket|UnCompress|UniText|UnicodeBom|UnicodeFile|UnknownAddress|Uri|UtfInput|UtfOutput|VirtualFolder|WrapSeekInputStream|WrapSeekOutputStream|Writer|XmlPrinter|ZipArchive|ZipBlockReader|ZipBlockWriter|ZipEntry|ZipEntryVerifier|ZipFile|ZipFileGroup|ZipFolder|ZipSubFolder|ZipSubFolderEntry|ZipSubFolderGroup|ZlibInput|ZlibOutput)\b
      scope: support.type.built-ins.classes.d
  support-type-built-ins-in:
    - include: support-type-built-ins-exceptions-in
    - include: support-type-built-ins-classes-in
    - include: support-type-built-ins-interfaces-in
    - include: support-type-built-ins-structs-in
  support-type-built-ins-exceptions-in:
    - match: \b(AddressException|ArrayBoundsError|ArrayBoundsException|AssertError|AssertException|Base64CharException|Base64Exception|BzipClosedException|BzipException|ClusterEmptyException|ClusterFullException|ConvError|ConvOverflowError|ConversionException|CorruptedIteratorException|DatabaseException|DateParseError|Exception|FTPException|FiberException|FileException|FinalizeException|FormatError|HostException|IOException|IllegalArgumentException|IllegalElementException|InvalidKeyException|InvalidTypeException|LocaleException|ModuleCtorError|NoSuchElementException|OpenException|OpenRJException|OutOfMemoryException|PlatformException|ProcessCreateException|ProcessException|ProcessForkException|ProcessKillException|ProcessWaitException|ReadException|RegExpException|RegexException|RegistryException|SeekException|SharedLibException|SocketAcceptException|SocketException|StdioException|StreamException|StreamFileException|StringException|SwitchError|SwitchException|SyncException|TextException|ThreadError|ThreadException|UnboxException|UnicodeException|UtfException|VariantTypeMismatchException|Win32Exception|WriteException|XmlException|ZipChecksumException|ZipException|ZipExhaustedException|ZipNotSupportedException|ZlibClosedException|ZlibException|OurUnwindException|SysError)\b
      scope: support.type.built-ins.exceptions.d
  support-type-built-ins-interfaces-in:
    - match: \b(Buffered|HttpParamsView|ICache|IChannel|IClassFactory|ICluster|IConduit|IConsumer|IEvent|IHierarchy|ILevel|IListener|IMessage|IMessageLoader|IOStream|IReadable|ISelectable|ISelectionSet|ISelector|IServer|IUnknown|IWritable|IXmlPrinter|InputStream|OutputStream|PathView|VfsFile|VfsFiles|VfsFolder|VfsFolderEntry|VfsFolders|VfsHost|VfsSync|ZipReader|ZipWriter)\b
      scope: support.type.built-ins.interfaces.d
  support-type-built-ins-structs-in:
    - match: \b(ABC|ABCFLOAT|ACCEL|ACCESSTIMEOUT|ACCESS_ALLOWED_ACE|ACCESS_DENIED_ACE|ACE_HEADER|ACL|ACL_REVISION_INFORMATION|ACL_SIZE_INFORMATION|ACTION_HEADER|ADAPTER_STATUS|ADDJOB_INFO_1|ANIMATIONINFO|APPBARDATA|Argument|Atomic|Attribute|BITMAP|BITMAPCOREHEADER|BITMAPCOREINFO|BITMAPINFO|BITMAPINFOHEADER|BITMAPV4HEADER|BLOB|BROWSEINFO|BY_HANDLE_FILE_INFORMATION|Bar|Baz|BitArray|Box|BracketResult|ByteSwap|CANDIDATEFORM|CANDIDATELIST|CBTACTIVATESTRUCT|CBT_CREATEWND|CHARFORMAT|CHARRANGE|CHARSET|CHARSETINFO|CHAR_INFO|CIDA|CIEXYZ|CIEXYZTRIPLE|CLIENTCREATESTRUCT|CMINVOKECOMMANDINFO|COLORADJUSTMENT|COLORMAP|COMMCONFIG|COMMPROP|COMMTIMEOUTS|COMPAREITEMSTRUCT|COMPCOLOR|COMPOSITIONFORM|COMSTAT|CONNECTDLGSTRUCT|CONSOLE_CURSOR_INFO|CONTEXT|CONVCONTEXT|CONVINFO|COORD|COPYDATASTRUCT|CPINFO|CPLINFO|CREATESTRUCT|CREATE_PROCESS_DEBUG_INFO|CREATE_THREAD_DEBUG_INFO|CRITICAL_SECTION|CRITICAL_SECTION_DEBUG|CURRENCYFMT|CURSORSHAPE|CWPRETSTRUCT|CWPSTRUCT|CharClass|CharRange|Clock|CodePage|Console|DATATYPES_INFO_1|DCB|DDEACK|DDEADVISE|DDEDATA|DDELN|DDEML_MSG_HOOK_DATA|DDEPOKE|DDEUP|DEBUGHOOKINFO|DEBUG_EVENT|DELETEITEMSTRUCT|DEVMODE|DEVNAMES|DEV_BROADCAST_HDR|DEV_BROADCAST_OEM|DEV_BROADCAST_PORT|DEV_BROADCAST_VOLUME|DIBSECTION|DIR|DISCDLGSTRUCT|DISK_GEOMETRY|DISK_PERFORMANCE|DOCINFO|DOC_INFO_1|DOC_INFO_2|DRAGLISTINFO|DRAWITEMSTRUCT|DRAWTEXTPARAMS|DRIVER_INFO_1|DRIVER_INFO_2|DRIVER_INFO_3|DRIVE_LAYOUT_INFORMATION|Date|DateParse|DateTime|DirEntry|DynArg|EDITSTREAM|EMPTYRECORD|EMR|EMRABORTPATH|EMRANGLEARC|EMRARC|EMRBITBLT|EMRCREATEBRUSHINDIRECT|EMRCREATECOLORSPACE|EMRCREATEDIBPATTERNBRUSHPT|EMRCREATEMONOBRUSH|EMRCREATEPALETTE|EMRCREATEPEN|EMRELLIPSE|EMREOF|EMREXCLUDECLIPRECT|EMREXTCREATEFONTINDIRECTW|EMREXTCREATEPEN|EMREXTFLOODFILL|EMREXTSELECTCLIPRGN|EMREXTTEXTOUTA|EMRFILLPATH|EMRFILLRGN|EMRFORMAT|EMRFRAMERGN|EMRGDICOMMENT|EMRINVERTRGN|EMRLINETO|EMRMASKBLT|EMRMODIFYWORLDTRANSFORM|EMROFFSETCLIPRGN|EMRPLGBLT|EMRPOLYDRAW|EMRPOLYDRAW16|EMRPOLYLINE|EMRPOLYLINE16|EMRPOLYPOLYLINE|EMRPOLYPOLYLINE16|EMRPOLYTEXTOUTA|EMRRESIZEPALETTE|EMRRESTOREDC|EMRROUNDRECT|EMRSCALEVIEWPORTEXTEX|EMRSELECTCLIPPATH|EMRSELECTCOLORSPACE|EMRSELECTOBJECT|EMRSELECTPALETTE|EMRSETARCDIRECTION|EMRSETBKCOLOR|EMRSETCOLORADJUSTMENT|EMRSETDIBITSTODEVICE|EMRSETMAPPERFLAGS|EMRSETMITERLIMIT|EMRSETPALETTEENTRIES|EMRSETPIXELV|EMRSETVIEWPORTEXTEX|EMRSETVIEWPORTORGEX|EMRSETWORLDTRANSFORM|EMRSTRETCHBLT|EMRSTRETCHDIBITS|EMRTEXT|ENCORRECTTEXT|ENDROPFILES|ENHMETAHEADER|ENHMETARECORD|ENOLEOPFAILED|ENPROTECTED|ENSAVECLIPBOARD|ENUMLOGFONT|ENUMLOGFONTEX|ENUM_SERVICE_STATUS|EVENTLOGRECORD|EVENTMSG|EXCEPTION_DEBUG_INFO|EXCEPTION_POINTERS|EXCEPTION_RECORD|EXIT_PROCESS_DEBUG_INFO|EXIT_THREAD_DEBUG_INFO|EXTLOGFONT|EXTLOGPEN|EXT_BUTTON|EmptySlot|EndOfCDRecord|Environment|FILETIME|FILTERKEYS|FINDREPLACE|FINDTEXTEX|FIND_NAME_BUFFER|FIND_NAME_HEADER|FIXED|FLOATING_SAVE_AREA|FMS_GETDRIVEINFO|FMS_GETFILESEL|FMS_LOAD|FMS_TOOLBARLOAD|FOCUS_EVENT_RECORD|FONTSIGNATURE|FORMATRANGE|FORMAT_PARAMETERS|FORM_INFO_1|FileConst|FileHeader|FileRoots|FileSystem|FoldingCaseData|Foo|FtpConnectionDetail|FtpFeature|FtpFileInfo|FtpResponse|GC|GCP_RESULTS|GCStats|GENERIC_MAPPING|GLYPHMETRICS|GLYPHMETRICSFLOAT|GROUP_INFO_2|GUID|HANDLETABLE|HD_HITTESTINFO|HD_ITEM|HD_LAYOUT|HD_NOTIFY|HELPINFO|HELPWININFO|HIGHCONTRAST|HSZPAIR|HeaderElement|HttpConst|HttpHeader|HttpHeaderName|HttpResponses|HttpStatus|HttpToken|ICONINFO|ICONMETRICS|IMAGEINFO|IMAGE_DOS_HEADER|INPUT_RECORD|ITEMIDLIST|IeeeFlags|Interface|JOB_INFO_1|JOB_INFO_2|KERNINGPAIR|LANA_ENUM|LAYERPLANEDESCRIPTOR|LDT_ENTRY|LIST_ENTRY|LOAD_DLL_DEBUG_INFO|LOCALESIGNATURE|LOCALGROUP_INFO_0|LOCALGROUP_MEMBERS_INFO_0|LOCALGROUP_MEMBERS_INFO_3|LOGBRUSH|LOGCOLORSPACE|LOGFONT|LOGFONTA|LOGFONTW|LOGPALETTE|LOGPEN|LUID_AND_ATTRIBUTES|LV_COLUMN|LV_DISPINFO|LV_FINDINFO|LV_HITTESTINFO|LV_ITEM|LV_KEYDOWN|LocalFileHeader|MAT2|MD5_CTX|MDICREATESTRUCT|MEASUREITEMSTRUCT|MEMORYSTATUS|MEMORY_BASIC_INFORMATION|MENUEX_TEMPLATE_HEADER|MENUEX_TEMPLATE_ITEM|MENUITEMINFO|MENUITEMTEMPLATE|MENUITEMTEMPLATEHEADER|MENUTEMPLATE|MENU_EVENT_RECORD|METAFILEPICT|METARECORD|MINIMIZEDMETRICS|MINMAXINFO|MODEMDEVCAPS|MODEMSETTINGS|MONCBSTRUCT|MONCONVSTRUCT|MONERRSTRUCT|MONHSZSTRUCT|MONITOR_INFO_1|MONITOR_INFO_2|MONLINKSTRUCT|MONMSGSTRUCT|MOUSEHOOKSTRUCT|MOUSEKEYS|MOUSE_EVENT_RECORD|MSG|MSGBOXPARAMS|MSGFILTER|MULTIKEYHELP|NAME_BUFFER|NCB|NCCALCSIZE_PARAMS|NDDESHAREINFO|NETCONNECTINFOSTRUCT|NETINFOSTRUCT|NETRESOURCE|NEWCPLINFO|NEWTEXTMETRIC|NEWTEXTMETRICEX|NMHDR|NM_LISTVIEW|NM_TREEVIEW|NM_UPDOWNW|NONCLIENTMETRICS|NS_SERVICE_INFO|NUMBERFMT|OFNOTIFY|OFSTRUCT|OPENFILENAME|OPENFILENAMEA|OPENFILENAMEW|OSVERSIONINFO|OUTLINETEXTMETRIC|OUTPUT_DEBUG_STRING_INFO|OVERLAPPED|OffsetTypeInfo|PAINTSTRUCT|PALETTEENTRY|PANOSE|PARAFORMAT|PARTITION_INFORMATION|PERF_COUNTER_BLOCK|PERF_COUNTER_DEFINITION|PERF_DATA_BLOCK|PERF_INSTANCE_DEFINITION|PERF_OBJECT_TYPE|PIXELFORMATDESCRIPTOR|POINT|POINTFLOAT|POINTFX|POINTL|POINTS|POLYTEXT|PORT_INFO_1|PORT_INFO_2|PREVENT_MEDIA_REMOVAL|PRINTER_DEFAULTS|PRINTER_INFO_1|PRINTER_INFO_2|PRINTER_INFO_3|PRINTER_INFO_4|PRINTER_INFO_5|PRINTER_NOTIFY_INFO|PRINTER_NOTIFY_INFO_DATA|PRINTER_NOTIFY_OPTIONS|PRINTER_NOTIFY_OPTIONS_TYPE|PRINTPROCESSOR_INFO_1|PRIVILEGE_SET|PROCESS_HEAPENTRY|PROCESS_INFORMATION|PROPSHEETHEADER|PROPSHEETHEADER_U1|PROPSHEETHEADER_U2|PROPSHEETHEADER_U3|PROPSHEETPAGE|PROPSHEETPAGE_U1|PROPSHEETPAGE_U2|PROTOCOL_INFO|PROVIDOR_INFO_1|PSHNOTIFY|PUNCTUATION|PassByCopy|PassByRef|Phase1Info|PropertyConfigurator|QUERY_SERVICE_CONFIG|QUERY_SERVICE_LOCK_STATUS|RASAMB|RASCONN|RASCONNSTATUS|RASDIALEXTENSIONS|RASDIALPARAMS|RASENTRYNAME|RASPPPIP|RASPPPIPX|RASPPPNBF|RASTERIZER_STATUS|REASSIGN_BLOCKS|RECT|RECTL|REMOTE_NAME_INFO|REPASTESPECIAL|REQRESIZE|RGBQUAD|RGBTRIPLE|RGNDATA|RGNDATAHEADER|RIP_INFO|Runtime|SCROLLINFO|SECURITY_ATTRIBUTES|SECURITY_DESCRIPTOR|SECURITY_QUALITY_OF_SERVICE|SELCHANGE|SERIALKEYS|SERVICE_ADDRESS|SERVICE_ADDRESSES|SERVICE_INFO|SERVICE_STATUS|SERVICE_TABLE_ENTRY|SERVICE_TYPE_INFO_ABS|SERVICE_TYPE_VALUE_ABS|SESSION_BUFFER|SESSION_HEADER|SET_PARTITION_INFORMATION|SHFILEINFO|SHFILEOPSTRUCT|SHITEMID|SHNAMEMAPPING|SID|SID_AND_ATTRIBUTES|SID_IDENTIFIER_AUTHORITY|SINGLE_LIST_ENTRY|SIZE|SMALL_RECT|SOUNDSENTRY|STARTUPINFO|STICKYKEYS|STRRET|STYLEBUF|STYLESTRUCT|SYSTEMTIME|SYSTEM_AUDIT_ACE|SYSTEM_INFO|SYSTEM_INFO_U|SYSTEM_POWER_STATUS|Signal|SjLj_Function_Context|SpecialCaseData|TAPE_ERASE|TAPE_GET_DRIVE_PARAMETERS|TAPE_GET_MEDIA_PARAMETERS|TAPE_GET_POSITION|TAPE_PREPARE|TAPE_SET_DRIVE_PARAMETERS|TAPE_SET_MEDIA_PARAMETERS|TAPE_SET_POSITION|TAPE_WRITE_MARKS|TBADDBITMAP|TBBUTTON|TBNOTIFY|TBSAVEPARAMS|TCHOOSECOLOR|TCHOOSEFONT|TC_HITTESTINFO|TC_ITEM|TC_ITEMHEADER|TC_KEYDOWN|TEXTMETRIC|TEXTMETRICA|TEXTRANGE|TFINDTEXT|TIME_ZONE_INFORMATION|TOGGLEKEYS|TOKEN_CONTROL|TOKEN_DEFAULT_DACL|TOKEN_GROUPS|TOKEN_OWNER|TOKEN_PRIMARY_GROUP|TOKEN_PRIVILEGES|TOKEN_SOURCE|TOKEN_STATISTICS|TOKEN_USER|TOOLINFO|TOOLTIPTEXT|TPAGESETUPDLG|TPMPARAMS|TRANSMIT_FILE_BUFFERS|TREEITEM|TSMALLPOINT|TTHITTESTINFO|TTPOLYCURVE|TTPOLYGONHEADER|TVARIANT|TV_DISPINFO|TV_HITTESTINFO|TV_INSERTSTRUCT|TV_ITEM|TV_KEYDOWN|TV_SORTCB|Time|TimeOfDay|TimeSpan|Tuple|UDACCEL|ULARGE_INTEGER|UNIVERSAL_NAME_INFO|UNLOAD_DLL_DEBUG_INFO|USEROBJECTFLAGS|USER_INFO_0|USER_INFO_2|USER_INFO_3|UnicodeData|VALENT|VA_LIST|VERIFY_INFORMATION|VS_FIXEDFILEINFO|Variant|VfsFilterInfo|WIN32_FILE_ATTRIBUTE_DATA|WIN32_FIND_DATA|WIN32_FIND_DATAW|WIN32_STREAM_ID|WINDOWINFO|WINDOWPLACEMENT|WINDOWPOS|WINDOW_BUFFER_SIZE_RECORD|WNDCLASS|WNDCLASSA|WNDCLASSEX|WNDCLASSEXA|WSADATA|WallClock|XFORM|ZipEntryInfo)\b
      scope: support.type.built-ins.structs.d
  support-type-in:
    - match: '\b((?:tango|std)\.[\w\.]+)\b'
      scope: support.type.d
