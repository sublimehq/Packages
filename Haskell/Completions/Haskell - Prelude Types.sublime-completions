{
	"scope": "source.haskell - comment - string",
	"completions":
	[
		// Prelude Classes

		{
			"trigger": "Applicative",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Bounded",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Enum",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Eq",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Floating",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Foldableble",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Fractional",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Functor",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Integral",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Monad",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Monadoid",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Num",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Ord",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Rational",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Read",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Real",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "RealFloat",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "RealFrac",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Show",
			"kind": ["type", "c", "Class"]
		},
		{
			"trigger": "Traversable",
			"kind": ["type", "c", "Class"]
		},

		// Prelude Constant Types

		{
			"trigger": "Just",
			"kind": ["type", "c", "Constants"]
		},
		{
			"trigger": "Nothing",
			"kind": ["type", "c", "Constants"]
		},
		{
			"trigger": "Left",
			"kind": ["type", "c", "Constants"]
		},
		{
			"trigger": "Right",
			"kind": ["type", "c", "Constants"]
		},
		{
			"trigger": "True",
			"kind": ["type", "c", "Constants"]
		},
		{
			"trigger": "False",
			"kind": ["type", "c", "Constants"]
		},
		{
			"trigger": "LT",
			"kind": ["type", "c", "Constants"]
		},
		{
			"trigger": "EQ",
			"kind": ["type", "c", "Constants"]
		},
		{
			"trigger": "GT",
			"kind": ["type", "c", "Constants"]
		},

		// Prelude Data Types

		{
			"trigger": "Bool",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "Char",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "Double",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "Either",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "FilePath",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "Float",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "Int",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "Integer",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "IO",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "IOError",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "Maybe",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "Ordering",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "ReadS",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "ShowS",
			"kind": ["type", "t", "Type"]
		},
		{
			"trigger": "String",
			"kind": ["type", "t", "Type"]
		}
	]
}