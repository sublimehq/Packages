%YAML 1.2
---
# Highlight interactive rebase text (git rebase -i).

name: Git Rebase
file_extensions:
  - git-rebase-todo
first_line_match: '^(?:pick|squash|reword|fixup|exec|edit|drop) \h{7,} '
scope: source.git.rebase

variables:
  hash: \h{7,}

contexts:
  prototype:
    - include: comments

  main:
    - include: commit

  comments:
    - match: '#'
      scope: punctuation.definition.comment.git.rebase
      push:
        - meta_scope: comment.line.git.rebase
        - match: \n
          pop: true
        - include: rebase-msg

  # e.g. pick d284bb2 Initial commit
  commit:
    - match: ^\s*(squash|reword|pick|fixup|exec|edit|drop|x|s|r|p|f|e|d)[\t ]
      captures:
        1: storage.type.edit.git.rebase
      push:
        - meta_scope: meta.commit.git.rebase
        - match: \n
          pop: true
        - match: \b({{hash}})\s # e.g. d284bb2
          captures:
            1: constant.numeric.hex.hash.git.rebase
          push:
            - meta_content_scope: text.plain.commit-msg.git.rebase
            - match: $
              pop: true

  # e.g. Rebase 9e73d21..6746220 onto 9e73d21 (2 commands)
  # highlight the hashes in this comment
  rebase-msg:
    - match: '\bRebase\s+'
      push:
        - meta_scope: meta.rebase-msg.git.rebase
        - match: '$'
          pop: true
        - match: '\b{{hash}}\b'
          scope: constant.numeric.hex.hash.git.rebase
        - match: \.\.
          scope: keyword.operator.commit-range.git.rebase
