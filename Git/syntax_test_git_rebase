# SYNTAX TEST "Packages/Git/rebase.sublime-syntax"
# <- source comment.line punctuation.definition.comment
pick d284bb2 Initial commit
# <- meta.commit
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.commit
#                           ^ -meta.commit
# <- keyword.operator.commit
#^^^ keyword.operator.commit
#   ^ -storage.type.commit
#    ^^^^^^^ constant.numeric.hex.hash
#           ^ -constant.numeric.hex.hash -text.plain.commit-msg
#            ^^^^^^^^^^^^^^ text.plain.commit-msg
#                          ^ -text.plain.commit-msg
p 6746220 Second pick commit # no comment
# <- meta.commit
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.commit
#                                         ^ -meta.commit
# <- keyword.operator.commit
#^ -keyword.operator.commit
# ^^^^^^^ constant.numeric.hex.hash
#        ^ -constant.numeric.hex.hash -text.plain.commit-msg
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ text.plain.commit-msg
#                                        ^ -text.plain.commit-msg
#                ^^^^ -keyword
   p 6746220 Second pick commit # no comment
# <- meta.commit
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.commit
#                                            ^ -meta.commit
# ^ -keyword.operator.commit
#  ^ keyword.operator.commit
#   ^ -keyword.operator.commit -constant.numeric.hex.hash
#    ^^^^^^^ constant.numeric.hex.hash
#           ^ -constant.numeric.hex.hash -text.plain.commit-msg
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ text.plain.commit-msg
#                                           ^ -text.plain.commit-msg
#                   ^^^^ -keyword
puck 6746220 Invalid command
# <- meta.commit
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.commit
# <- invalid.illegal.command-expected
#^^^ invalid.illegal.command-expected
#   ^ -storage.type.commit -invalid.illegal.command-expected
#    ^^^^^^^ constant.numeric.hex.hash
#           ^ -constant.numeric.hex.hash -text.plain.commit-msg
#            ^^^^^^^^^^^^^^^ text.plain.commit-msg
s 6746x20 Invalid hash # no comment
# <- meta.commit
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.commit
# <- keyword.operator.commit
#^ -storage.type.commit
# ^^^^^^^ invalid.illegal.hash-expected
#        ^ -constant.numeric.hex.hash -text.plain.commit-msg
#         ^^^^^^^^^^^^^^^^^^^^^^^^^ text.plain.commit-msg
#                                  ^ -text.plain.commit-msg
a 6746x20 Invalid command and hash # no comment
# <- meta.commit
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ meta.commit
# <- invalid.illegal.command-expected
#^ -storage.type.commit
# ^^^^^^^ invalid.illegal.hash-expected
#        ^ -constant.numeric.hex.hash -text.plain.commit-msg
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ text.plain.commit-msg
#                                              ^ -text.plain.commit-msg
  # p 6746220 Second pick commit # no comment
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.git.rebase

# Rebase 9e73d21..6746220 onto 9e73d21 (2 commands)
# <- comment.line punctuation.definition.comment
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line meta.rebase-msg
#        ^^^^^^^ constant.numeric.hex.hash
#               ^^ punctuation.separator.commit-range
#                 ^^^^^^^ constant.numeric.hex.hash
#                              ^^^^^^^ constant.numeric.hex.hash
#
# Commands:
# p, pick = use commit
#^^^^^^^^^^^^^^^^^^^^^^ comment.line
# ^^^^^^^^^^^^^^^^^^^^ meta.commands-help
#^ -keyword.operator.commit
# ^ keyword.operator.commit
#  ^^ -keyword.operator.commit
#  ^ punctuation.separator.comma
#    ^^^^ keyword.operator.commit
#        ^^^^^^^^^^^^^ -keyword.operator.commit
#         ^ punctuation.separator.key-value
# ^^^^^^^^^^ -text.plain.command-description
#           ^^^^^^^^^^ text.plain.command-description
# r, reword = use commit, but edit the commit message
# e, edit = use commit, but stop for amending
# s, squash = use commit, but meld into previous commit
# f, fixup = like "squash", but discard this commit's log message
# x, exec = run command (the rest of the line) using shell
# d, drop = remove commit
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
# Note that empty commits are commented out
