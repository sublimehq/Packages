%YAML 1.2
---
# Highlight interactive rebase text (git rebase -i).

name: Git Rebase
file_extensions:
  - git-rebase-todo
first_line_match: '^(?:drop|edit|exec|fixup|pick|reword|squash|[defprsx]) \h{7,} '
scope: source.git.rebase

variables:
  hash: \b\h{7,}\b
  shortcut: '[defprsx]'
  operator: \b(?:drop|edit|exec|fixup|pick|reword|squash|{{shortcut}})\b

contexts:

  main:
    - include: comments
    - include: commit

  comments:
    - match: ^\s*(#)
      captures:
        1: punctuation.definition.comment.git.rebase
      push:
        - meta_scope: comment.line.git.rebase
        - match: \n
          pop: true
        - include: commands-msg
        - include: rebase-msg

  # e.g. p, pick = use commit
  # highlight the commands and separators in this comment
  commands-msg:
    - match: \bCommands(:)
      scope: markup.heading.git.rebase
      captures:
        1: punctuation.terminator.heading.git.rebase
    - match: ({{shortcut}})(,)\s*({{operator}})\s*(=)\s*(.+)
      scope: meta.commands-help.git.rebase
      captures:
        1: keyword.operator.commit.git.rebase
        2: punctuation.separator.comma.git.rebase
        3: keyword.operator.commit.git.rebase
        4: punctuation.separator.key-value.git.rebase
        5: text.plain.command-description.git.rebase

  # e.g. Rebase 9e73d21..6746220 onto 9e73d21 (2 commands)
  # highlight the hashes in this comment
  rebase-msg:
    - match: \bRebase\b
      push:
        - meta_scope: meta.rebase-msg.git.rebase markup.heading.git.rebase
        - match: $
          pop: true
        - match: '{{hash}}'
          scope: constant.numeric.hex.hash.git.rebase
        - match: \.\.
          scope: punctuation.separator.commit-range.git.rebase

  # e.g. pick d284bb2 Initial commit
  commit:
    - match: ^
      push: [commit-message, commit-hash, commit-commands]

  commit-commands:
    - match: '{{operator}}'
      scope: keyword.operator.commit.git.rebase
      pop: true
    - match: \S+
      scope: invalid.illegal.command-expected.git.rebase
      pop: true
    - match: $
      pop: true

  commit-hash:
    - match: '{{hash}}' # e.g. d284bb2
      scope: constant.numeric.hex.hash.git.rebase
      pop: true
    - match: \S+
      scope: invalid.illegal.hash-expected.git.rebase
      pop: true
    - match: $
      pop: true

  commit-message:
    - meta_scope: meta.commit.git.rebase
    - match: (\S.+?)?\s*\n
      captures:
        1: text.plain.commit-msg
      pop: true
