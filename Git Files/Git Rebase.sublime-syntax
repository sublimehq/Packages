%YAML 1.2
---
# Highlight interactive rebase text (git rebase -i).

name: Git Rebase Todo
file_extensions:
  - git-rebase-todo
first_line_match: '^(?:drop|edit|exec|fixup|pick|reword|squash|[defprsx]) \h{7,} '
scope: text.git.rebase

variables:
  comment_char: '[#;]'
  hash: \b\h{7,}\b
  shortcut: '[defprsx]'
  operator: \b(?:drop|edit|exec|fixup|pick|reword|squash|{{shortcut}})\b

contexts:

  main:
    - include: comments
    - include: commit

##[ COMMENTS ]#########################################################

  comments:
    - match: ^\s*({{comment_char}})
      captures:
        1: punctuation.definition.comment.git.rebase
      push:
        - meta_scope: comment.line.git.rebase
        - match: ^(?!\s*{{comment_char}})
          pop: true
        - include: heading
        - include: commands-help
        - include: rebase-msg

  heading:
    # all comments ending with colon are scoped as headlines
    - match: \b\w.+(?=:\s*$)
      scope: markup.heading.git.rebase

  commands-help:
    # highlight the commands and separators in this comment
    # e.g. p, pick = use commit
    - match: ({{shortcut}})\s*(,)\s*({{operator}})\s*(=)\s*(.+)
      scope: meta.commands-help.git.rebase
      captures:
        1: keyword.operator.git.rebase
        2: punctuation.separator.sequence.git.rebase
        3: keyword.operator.git.rebase
        4: punctuation.separator.mapping.pair.git.rebase
        5: string.unquoted.git.rebase

  rebase-msg:
    # e.g. Rebase 9e73d21..6746220 onto 9e73d21 (2 commands)
    # highlight the hashes in this comment
    - match: Rebase\s+({{hash}})(?:(..)({{hash}}))?.+({{hash}}).*
      scope: meta.rebase-msg.git.rebase markup.heading.git.rebase
      captures:
        1: constant.numeric.hex.hash.git.rebase
        2: punctuation.separator.commit-range.git.rebase
        3: constant.numeric.hex.hash.git.rebase
        4: constant.numeric.hex.hash.git.rebase

##[ COMMITS ]##########################################################

  commit:
    # e.g. pick d284bb2 Initial commit
    - match: ^
      push: [commit-message, commit-hash, commit-commands]

  commit-commands:
    - match: '{{operator}}'
      scope: keyword.operator.commit.git.rebase
      pop: true
    - match: \S+
      scope: invalid.illegal.command-expected.git.rebase
      pop: true
    - include: line-end

  commit-hash:
    - match: '{{hash}}' # e.g. d284bb2
      scope: constant.numeric.hex.hash.git.rebase
      pop: true
    - match: \S+
      scope: invalid.illegal.hash-expected.git.rebase
      pop: true
    - include: line-end

  commit-message:
    - meta_scope: meta.commit.git.rebase
    - match: \n
      pop: true
    - match: (?=\S)  # subject beginns with first none whitespece
      push:
        - meta_content_scope: meta.subject.git.commit
        - include: Git Common.sublime-syntax#references
        - include: line-end

##[ PROTOTYPES ]#######################################################

  line-end:
    - match: $
      pop: true
