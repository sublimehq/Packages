%YAML 1.2
---
name: Ruby on Rails
file_extensions:
  - rxml
  - builder
scope: source.ruby.rails
contexts:
  main:
    - match: '(^\s*)(?=class\s+(([.a-zA-Z0-9_:]+ControllerTest(\s*<\s*[.a-zA-Z0-9_:]+)?)))'
      comment: Uses lookahead to match classes with the ControllerTest suffix; includes 'source.ruby' to avoid infinite recursion
      push:
        - meta_scope: meta.rails.functional_test
        - match: ^\1(?=end)\b
          pop: true
        - include: 'scope:source.ruby'
        - include: main
    - match: '(^\s*)(?=class\s+(([.a-zA-Z0-9_:]+Controller\b(\s*<\s*[.a-zA-Z0-9_:]+)?)|(<<\s*[.a-zA-Z0-9_:]+)))(?!.+\bend\b)'
      comment: Uses lookahead to match classes with the Controller suffix; includes 'source.ruby' to avoid infinite recursion
      push:
        - meta_scope: meta.rails.controller
        - match: ^\1(?=end)\b
          pop: true
        - include: 'scope:source.ruby'
        - include: main
    - match: '(^\s*)(?=module\s+((([A-Z]\w*::)*)[A-Z]\w*)Helper)'
      comment: Uses lookahead to match modules with the Helper suffix; includes 'source.ruby' to avoid infinite recursion
      push:
        - meta_scope: meta.rails.helper
        - match: ^\1(?=end)\b
          pop: true
        - include: 'scope:source.ruby'
        - include: main
    - match: '(^\s*)(?=class\s+(([.a-zA-Z0-9_:]+(\s*<\s*ActionMailer::Base))))'
      comment: Uses lookahead to match classes that inherit from ActionMailer::Base; includes 'source.ruby' to avoid infinite recursion
      push:
        - meta_scope: meta.rails.mailer
        - match: ^\1(?=end)\b
          pop: true
        - include: 'scope:source.ruby'
        - include: main
    - match: (^\s*)(?=class\s+.+ActiveRecord::Base)
      comment: Uses lookahead to match classes that (may) inherit from ActiveRecord::Base; includes 'source.ruby' to avoid infinite recursion
      push:
        - meta_scope: meta.rails.model
        - match: ^\1(?=end)\b
          pop: true
        - include: 'scope:source.ruby'
        - include: main
    - match: (^\s*)(?=class\s+.+ActiveRecord::Migration)
      comment: Uses lookahead to match classes that (may) inherit from ActiveRecord::Migration; includes 'source.ruby' to avoid infinite recursion
      push:
        - meta_scope: meta.rails.migration
        - match: ^\1(?=end)\b
          pop: true
        - match: (^\s*)(?=change_table)\b
          comment: Uses lookahead to match methods change_table; includes 'source.ruby' to avoid infinite recursion
          push:
            - meta_content_scope: meta.rails.migration.change_table
            - match: ^\1(?=end)\b
              pop: true
            - include: 'scope:source.ruby'
            - include: main
        - match: (^\s*)(?=create_table)\b
          comment: Uses lookahead to match methods create_table; includes 'source.ruby' to avoid infinite recursion
          push:
            - meta_content_scope: meta.rails.migration.create_table
            - match: ^\1(?=end)\b
              pop: true
            - include: 'scope:source.ruby'
            - include: main
        - include: 'scope:source.ruby'
        - include: main
    - match: '(^\s*)(?=class\s+(?![.a-zA-Z0-9_:]+ControllerTest)(([.a-zA-Z0-9_:]+Test(\s*<\s*[.a-zA-Z0-9_:]+)?)|(<<\s*[.a-zA-Z0-9_:]+)))'
      comment: Uses lookahead to match classes with the Test suffix; includes 'source.ruby' to avoid infinite recursion
      push:
        - meta_scope: meta.rails.unit_test
        - match: ^\1(?=end)\b
          pop: true
        - include: 'scope:source.ruby'
        - include: main
    - match: (^\s*)ActionController::Routing::Routes
      comment: Uses ActionController::Routing::Routes to determine it is a routes file; includes 'source.ruby' to avoid infinite recursion
      push:
        - meta_scope: meta.rails.routes
        - match: ^\1(?=end)\b
          pop: true
        - include: 'scope:source.ruby'
        - include: main
    - match: '\b(before_(filter|action)|skip_before_(filter|action)|skip_after_(filter|action)|after_(filter|action)|around_(filter|action)|filter|filter_parameter_logging|layout|require_dependency|render|render_action|render_text|render_file|render_template|render_nothing|render_component|render_without_layout|rescue_from|url_for|redirect_to|redirect_to_path|redirect_to_url|respond_to|helper|helper_method|model|observer|serialize|scaffold|verify|hide_action|append_view_path|prepend_view_path|view_paths)(?![?!:])\b'
      comment: Uses negative lookahead to filter out symbols
      scope: support.function.actionpack.rails
    - match: '\b(named_scope|default_scope|scope|after_create|after_destroy|after_save|after_update|after_validation|after_validation_on_create|after_validation_on_update|before_create|before_destroy|before_save|before_update|before_validation|before_validation_on_create|before_validation_on_update|composed_of|belongs_to|has_one|has_many|has_and_belongs_to_many|validate|validate_on_create|validates_numericality_of|validate_on_update|validates_acceptance_of|validates_associated|validates_confirmation_of|validates_each|validates_format_of|validates_inclusion_of|validates_exclusion_of|validates_length_of|validates_presence_of|validates_size_of|validates_uniqueness_of|validates|attr_protected|attr_accessible|attr_readonly)(?![?!:])\b'
      comment: Uses negative lookahead to filter out symbols
      scope: support.function.activerecord.rails
    - match: \b(alias_method_chain|alias_attribute|delegate|cattr_accessor|mattr_accessor|class_attribute|returning)\b
      scope: support.function.activesupport.rails
    - include: 'scope:source.ruby'
