%YAML 1.2
---
# Derived from https://github.com/i-akhmadullin/Sublime-CSS3
name: CSS
file_extensions:
  - css
  - css.erb
scope: source.css
contexts:
  main:
    - include: comment-block
    - include: selector
    - include: charset
    - include: import
    - include: font-face
    - include: media
    - include: custom-media
    - include: keyframes
    - include: property-list
  cascading-variable:
    - match: (var)\s*(\()
      captures:
        1: support.function.var.css
        2: punctuation.section.function.css
      push:
        - meta_scope: support.type.cascading-variable.css
        - match: (\))
          captures:
            1: punctuation.section.function.css
          pop: true
        - match: (--)
          scope: support.constant.custom-property-name.prefix.css
        - match: "(?i)([_a-z]+[_a-z0-9-]*)"
          scope: support.type.variable-name.css
        - match: (,)
          scope: punctuation.definition.arbitrary-repitition.css
        - include: numeric-values
  charset:
    - match: \s*((@)charset\b)\s*
      captures:
        1: keyword.control.at-rule.charset.css
        2: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.charset.css
        - match: \s*((?=;|$))
          pop: true
        - include: string-double
        - include: string-single
  color-values:
    - match: \b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\b
      comment: http://www.w3.org/TR/CSS21/syndata.html#value-def-color
      scope: support.constant.color.w3c-standard-color-name.css
    - match: \b(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|turquoise|violet|wheat|whitesmoke|yellowgreen)\b
      comment: https://www.w3.org/TR/css3-color/#svg-color
      scope: support.constant.color.w3c-extended-color-keywords.css
    - match: \b((?i)currentColor|transparent)\b
      comment: https://www.w3.org/TR/css3-color/#currentcolor and https://www.w3.org/TR/css3-color/#transparent-def
      scope: support.constant.color.w3c-special-color-keyword.css
    - match: (rgba?)\s*(\()
      captures:
        1: support.function.misc.css
        2: punctuation.section.function.css
      push:
        - match: (\))
          captures:
            1: punctuation.section.function.css
          pop: true
        - match: |-
            (?x)
            (0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\s*,\s*){2}
            (0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5]))))
            (\s*,\s*((0?\.[0-9]+)|[0-1]))?
          scope: constant.other.color.rgb-value.css
        - match: |-
            (?x)
            (([0-9]{1,2}|100)\s*%,\s*){2}
            ([0-9]{1,2}|100)\s*%
            (\s*,\s*((0?\.[0-9]+)|[0-1]))?
          scope: constant.other.color.rgb-percentage.css
        - include: numeric-values
    - match: (hsla?)\s*(\()
      captures:
        1: support.function.misc.css
        2: punctuation.section.function.css
      push:
        - match: (\))
          captures:
            1: punctuation.section.function.css
          pop: true
        - match: |-
            (?x)
            (-|\+)?
            (\d\.\d+(e\-\d+)?|\d+)\s*,\s*
            ([0-9]{1,2}|100)\s*%,\s*
            ([0-9]{1,2}|100)\s*%
            (\s*,\s*((0?\.[0-9]+)|[0-1]))?
          scope: constant.other.color.hsl-value.css
        - include: numeric-values
  comment-block:
    - match: /\*
      captures:
        0: punctuation.definition.comment.css
      push:
        - meta_scope: comment.block.css
        - match: \*/
          pop: true
  custom-media:
    - match: (?=\s*@custom-media\s*.*?)
      push:
        - match: \s*;
          captures:
            1: punctuation.section.property-list.css
          pop: true
        - match: \s*((@)custom-media)(?=.*?)
          captures:
            1: keyword.control.at-rule.custom-media.css
            2: punctuation.definition.keyword.css
            3: support.constant.custom-media.css
          push:
            - meta_scope: meta.at-rule.custom-media.css
            - match: \s*(?=;)
              pop: true
            - include: media-query-list
  font-face:
    - match: '\s*((@)font-face)\s*(?=\{)'
      captures:
        1: keyword.control.at-rule.font-face.css
        2: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.font-face.css
        - match: '\s*(\})'
          captures:
            1: punctuation.section.property-list.css
          pop: true
        - include: rule-list
  import:
    - match: \s*((@)import\b)\s*
      captures:
        1: keyword.control.at-rule.import.css
        2: punctuation.definition.keyword.css
      push:
        - meta_scope: meta.at-rule.import.css
        - match: '\s*((?=;|\}))'
          pop: true
        - include: string-double
        - include: string-single
        - match: \s*(url)\s*(\()\s*
          captures:
            1: support.function.url.css
            2: punctuation.section.function.css
          push:
            - match: \s*(\))\s*
              captures:
                1: punctuation.section.function.css
              pop: true
            - match: '[^''") \t]+'
              scope: variable.parameter.url.css
            - include: string-single
            - include: string-double
        - include: media-query-list
  keyframe-name:
    - match: '(?i)\s*[-]?([_\w\-]*)?'
      captures:
        1: entity.other.animation-name.css
      push:
        - match: '\s*(?:(,)|(?=[{;]))'
          captures:
            1: punctuation.definition.arbitrary-repitition.css
          pop: true
  keyframes:
    - match: (?=\s*@(?:-webkit-|-moz-|-o-)?keyframes\s*.*?)
      push:
        - match: '\s*(\})'
          captures:
            1: punctuation.section.property-list.css
          pop: true
        - match: \s*((@)(-webkit-|-moz-|-o-)?keyframes)(?=.*?)
          captures:
            1: keyword.control.at-rule.keyframe.css
            2: punctuation.definition.keyword.css
            3: support.type.property-vendor.css
            4: support.constant.keyframe.css
          push:
            - meta_scope: meta.at-rule.keyframe.css
            - match: '\s*(?=\{)'
              pop: true
            - match: '\s*(?=[^{;])'
              push:
                - match: '\s*(?=[{;])'
                  pop: true
                - include: keyframe-name
        - match: '\s*(\{)'
          captures:
            1: punctuation.section.property-list.css
          push:
            - match: '(?=\})'
              pop: true
            - include: main
  media:
    - match: (?=\s*@media\s*.*?)
      push:
        - match: '\s*(\})'
          captures:
            1: punctuation.section.property-list.css
          pop: true
        - match: \s*((@)media)(?=.*?)
          captures:
            1: keyword.control.at-rule.media.css
            2: punctuation.definition.keyword.css
            3: support.constant.media.css
          push:
            - meta_scope: meta.at-rule.media.css
            - match: '\s*(?=\{)'
              pop: true
            - include: media-query-list
        - match: '\s*(\{)'
          captures:
            1: punctuation.section.property-list.css
          push:
            - match: '(?=\})'
              pop: true
            - include: main
  media-query:
    - match: (?i)\s*(only|not)?\s*(all|aural|braille|embossed|handheld|print|projection|screen|tty|tv)?
      captures:
        1: keyword.operator.logic.media.css
        2: support.constant.media.css
      push:
        - match: '\s*(?:(,)|(?=[{;]))'
          captures:
            1: punctuation.definition.arbitrary-repitition.css
          pop: true
        - match: \s*(and)?\s*(\()\s*
          captures:
            1: keyword.operator.logic.media.css
          push:
            - match: \)
              pop: true
            - match: |-
                (?x)
                (
                    (-webkit-|-o-)?
                    ((min|max)-)?
                    (-moz-)?
                    (
                        ((device-)?(height|width|aspect-ratio|pixel-ratio))|
                        (color(-index)?)|monochrome|resolution
                    )
                )|grid|scan|orientation
                \s*(?=[:)])
              captures:
                0: support.type.property-name.media.css
                2: support.type.vendor-prefix.css
                5: support.type.vendor-prefix.css
              push:
                - match: (:)|(?=\))
                  captures:
                    1: punctuation.separator.key-value.css
                  pop: true
            - match: \b(portrait|landscape|progressive|interlace)
              scope: support.constant.property-value.css
            - match: \s*(\d+)(/)(\d+)
              captures:
                1: constant.numeric.css
                2: keyword.operator.arithmetic.css
                3: constant.numeric.css
            - include: numeric-values
  media-query-list:
    - match: '\s*(?=[^{;])'
      push:
        - match: '\s*(?=[{;])'
          pop: true
        - include: media-query
  numeric-values:
    - match: '(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\b'
      scope: constant.other.color.rgb-value.css
      captures:
        1: punctuation.definition.constant.css
    - match: |-
        (?x)
            (?:-|\+)?(?:(?:[0-9]+(?:\.[0-9]+)?)|(?:\.[0-9]+))
            ((?:px|pt|ch|cm|deg|dpi|dpcm|dppx|em|ex|in|grad|fr|mm|ms|pc|rad|rem|s|turn|vh|vw|vmin|vmax|x)\b|%)?
      scope: constant.numeric.css
      captures:
        1: keyword.other.unit.css
  property-list:
    - match: '(?=\{)'
      push:
        - match: '\}'
          captures:
            0: punctuation.section.property-list.css
          pop: true
        - include: rule-list
  property-values:
    - include: vendor-prefix
    - include: repeat-notation
    - match: |-
        \b(?x)
        (color-(burn|dodge)|darken|difference|exclusion|
        hard-light|hue|isolate|lighten|luminosity|multiply|overlay|
        saturation|screen|soft-light)\b
      comment: blend-mode and isolation-mode
      scope: support.constant.property-value.css
    - match: |-
        (?x)\b(
        ((all-)?(petite|small)|titling)-caps|
        ((no-)?(common|discretionary|historical))-ligatures|
        ((xx?-)?(small|large))|
        (?:ultra-|extra-|semi-)?(?:condensed|expanded)|
        (block-)?line-height|
        (border|content|margin|padding)-box|
        (column|row|wrap)(-reverse)?|
        (consider|disregard)-shifts|
        (diagonal|stacked)-fractions|
        (exclude|include)-ruby|
        (full|proportional)-width|
        (lining|oldstyle|proportional|tabular)-nums|
        (min|max)-content|
        (no-)?(open|close)-quote|
        (no-)?contextual|
        (n|ne|e|se|s|sw|w|nw)-resize|
        (over|under)-edge|
        (repeating-)?(linear|radial)-gradient|
        absolute|active|add|all-scroll|all|alphabetic|alpha|
        alternate(-reverse)?|always|annotation|antialiased|armenian|at|auto|
        avoid(-(column|page|region))?|
        background(-(color|image|position|size))?|
        backwards|balance|baseline|below|bicubic|
        bidi-override|blink|block|blur|bolder|bold|
        border-(bottom-|top-)?(right-|left-)radius|
        border-(bottom|color|left|radius|right|spacing|top|width)|
        border-(bottom|left|right|top)-color|
        border-(bottom|left|right|top)-width|
        border|both|bottom|bottom|box-shadow|box|(break|keep)-all|
        break-word|brightness|
        capitalize|center|central|char|character-variant|
        cjk-ideographic|clip|closest-(side|corner)|
        col-resize|collapse|color-stop|color|
        column(-count|-gap|-rule-color|-rule-width|-rule|-width)|
        columns|contain|content(s)?|contrast|cover|
        crisp-edges|crop|cross|crosshair|
        dashed|decimal(-leading-zero)?|default|dense|disabled|disc|
        distribute(-(all-lines|letter|space))?|
        dotted|double|drop-shadow|
        ease(-(in-out|in|out))?|
        ellipsis|EndColorStr|end|evenodd|exclude|
        farthest-(corner|side)|
        fill(-(box|opacity))?|
        filter|fixed|flex(-(grow|shrink|basis))?|
        flat|flex(-(start|end))?|
        flexbox|flip|flood-color|font(-(size-adjust|size|stretch|weight))?|
        forwards|from-image|from|
        geometricPrecision|georgian|glyphs|gradient|
        grayscale|grid(-height)?|groove|
        hand|hanging|hebrew|height|help|hidden|hiragana(-iroha)?|
        historical-forms|horizontal|
        ideograph-(alpha|numeric|parenthesis|space)|
        ideographic|inactive|infinite|inherit|initial|
        inline(-(box|block|flex|flexbox|grid|table|line-height))?|
        inside|inter-(ideograph|word)|intersect|invert|italic|isolation|
        jis(04|78|83|90)|justify|katakana(-iroha)?|
        larger|last|left|letter-spacing|lighter|
        lighting-color|line(-(edge|through))?|
        linear|list-item|local|loose|lower-(alpha|greek|latin|roman)|
        lowercase|lr-tb|ltr|luminance|
        margin(-(box|bottom|left|right|top))?|
        marker-offset|mathematical|matrix(3d)?|max-(height|lines|size|width)|
        medium|middle|min-(height|width)|move|
        newspaper|no-change|no-clip|no-drop|no-repeat|none|
        nonzero|normal|not-allowed|nowrap|
        oblique|offset(-(after|before|end|start))?|
        opacity|optimize(Legibility|Speed|Precission)|
        order|ordinal|ornaments|outline(-(color|offset|width))?|
        outset|outside|overline|
        padding(-(box|bottom|left|right|top))?|page|
        painted|paused|perspective(-origin)?|pixelated|pointer|
        pre(-(wrap|line))?|preserve-3d|
        progid:DXImageTransform.Microsoft.(Alpha|Blur|dropshadow|gradient|Shadow)|
        progress|
        recto|region|relative|repeat(-(x|y))?|
        replaced|reset-size|reverse|ridge|right|
        rotate(X|Y|Z|3d)?|round|row-resize|rtl|ruby|running|
        saturate|scale-down|scale(X|Y|Z|3d)?|scroll(-position)?|separate|sepia|
        shape-(image-threshold|margin|outside)|
        simplified|skew(X|Y)?|slashed-zero|smaller|smooth|snap|
        solid|space-(around|between)|space|span|square|stack|
        startColorStr|start|static|step-(end|start)|
        stop-(color|opacity)|stretch|strict|
        stroke(-(box|dasharray|dashoffset|miterlimit|opacity|width))?|
        style|styleset|stylistic|subgrid|subtract|sub|super|swash|
        table(-footer-group|-header-group|-cell|-caption|-column-group|-column|-row-group|-row)?|
        tb-rl|text(-(top|bottom))?|
        text(-decoration-color|-emphasis-color|-indent|-shadow|-size-adjust|-size)|
        text-(over|under)-edge|textfield|thick|thin|titling-case|top|touch|to|
        traditional|transform(-origin)?|translate(X|Y|Z|3d)?|
        under|underline|unicase|unset|upper-(alpha|latin|roman)|
        uppercase|use-script|
        verso|vertical(-(align|ideographic|text))?|view-box|
        viewport-fill(-opacity)?|visibility|visible(Painted|Fill|Stroke)?|
        wait|wavy|weight|whitespace|width|word-spacing|
        z-index|zero|zoom|
        )\b
      scope: support.constant.property-value.css
    - match: \b(circle|ellipse|inset)(?!\()\b
      comment: can be either keywords or functions, therefore slightly more strict matching
      scope: support.constant.property-value.css
    - match: (\b(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace)\b)
      scope: support.constant.font-name.css
    - include: unicode-range
    - include: numeric-values
    - include: color-values
    - include: string-double
    - include: string-single
    - match: (rect)\s*(\()
      captures:
        1: support.function.misc.css
        2: punctuation.section.function.css
      push:
        - match: (\))
          captures:
            1: punctuation.section.function.css
          pop: true
        - include: numeric-values
    - include: cascading-variable
    - match: (cubic-bezier|steps)\s*(\()
      captures:
        1: support.function.timing-function.css
        2: punctuation.section.function.css
      push:
        - meta_scope: support.type.function.easing.css
        - match: (\))
          captures:
            1: punctuation.section.function.css
          pop: true
        - match: (,)+
          scope: punctuation.section.function.css
        - include: numeric-values
        - match: (end|start)+
          scope: support.keyword.timing-direction.css
    - match: (circle|ellipse|inset|polygon)\s*(\()
      captures:
        1: support.function.shape.css
        2: punctuation.section.function.css
      push:
        - meta_scope: support.type.shape.definition.css
        - match: (\))
          captures:
            1: punctuation.section.function.css
          pop: true
        - include: numeric-values
        - match: (,)
          scope: punctuation.definition.arbitrary-repitition.css
        - match: |-
            \b(?x)(
            at|
            bottom|
            center|closest-side|
            evenodd|
            farthest-side|
            left|
            nonzero|
            right|round|
            top)\b
          scope: support.constant.property-value.css
    - match: (calc)\s*(\()
      captures:
        1: support.function.calc.css
        2: punctuation.section.function.css
      push:
        - meta_scope: support.type.expression.calc.css
        - match: (\))
          captures:
            1: punctuation.section.function.css
          pop: true
        - match: "[()]"
          scope: punctuation.section.function.css
        - include: cascading-variable
        - include: numeric-values
        - match: "[-/*+]"
          scope: punctuation.operator.function.css
    - match: (attr|counter|counters|cross-fade|format|image-set|image|local|minmax|url)\s*(\()
      captures:
        1: support.function.misc.css
        2: punctuation.section.function.css
      push:
        - match: (\))
          captures:
            1: punctuation.section.function.css
          pop: true
        - include: string-single
        - match: (?:min|max)-content
          scope: support.constant.property-value.css
        - include: string-double
        - include: numeric-values
        - include: color-values
        - match: '[^''") \t]+'
          scope: variable.parameter.misc.css
    - match: \!\s*important
      scope: keyword.other.important.css
  repeat-notation:
    - match: (repeat)\s*(\()
      captures:
        1: support.function.misc.css
        2: punctuation.section.function.css
      push:
        - match: (\))
          captures:
            1: punctuation.section.function.css
          pop: true
        - include: string-single
        - match: (?:min|max)-content
          scope: support.constant.property-value.css
        - include: string-double
        - include: numeric-values
        - match: '[^''") \t]+'
          scope: variable.parameter.misc.css
  rule-list:
    - match: '\{'
      captures:
        0: punctuation.section.property-list.css
      push:
        - meta_scope: meta.property-list.css
        - match: '(?=\s*\})'
          pop: true
        - include: rule-list-body
  rule-list-body:
    - include: comment-block
    - match: "(?<![-a-z])(?=[-a-z])"
      push:
        - meta_scope: meta.property-name.css
        - match: "$|(?![-a-z])"
          pop: true
        - include: vendor-prefix
        - match: '\b(var-)(?i)([_a-z]+[_a-z0-9-]*)'
          captures:
            1: keyword.other.custom-property.prefix.css
            2: support.type.custom-property.name.css
          push:
            - meta_scope: invalid.deprecated.custom-property.css
            - match: \b
              pop: true
        - match: "(?i)(--)([_a-z]+[_a-z0-9-]*)"
          captures:
            1: keyword.other.custom-property.prefix.css
            2: support.type.custom-property.name.css
          push:
            - meta_scope: support.type.custom-property.css
            - match: \b
              pop: true
        - match: |-
            \b(?x)(azimuth|
            all|
            appearance|
            align(-items|-content|-self)?|
            animation(-delay|-direction|-duration|-fill-mode|-iteration-count|-name|-play-state|-timing-function)?|
            backface-visibility|
            background(-blend-mode|-clip|-origin|-size)|
            behavior|
            border-(bottom-|top-)?(right-|left-)?radius(-bottomleft|-bottomright|-topleft|-topright)?|
            border-image(-outset|-repeat|-slice|-source|-width)?|
            box-sizing|
            box-align|box-pack|box-orient|box-direction|box-flex|(box-ordinal-)?group|
            break-(before|after)|
            clip-(path|rule)|
            column(-(rule-style|count|fill|gap|rule|rule-color|rule-width|span|width))?|
            (alignment|dominant)-baseline|
            alignment-adjust|
            baseline-shift|
            grid-template-(areas|columns|rows)|
            grid-column-(end|start)|
            grid-row-(end|start)|
            grid-auto-(columns|flow|rows)|
            grid-(area|column|row|template)|
            columns|
            initial-letter-align|initial-letter|
            inline-flex|inline-box-align|
            interpolation-mode|
            filter|
            flex(-align|-basis|-direction|-flow|-grow|-item-align|-order|-shrink|-wrap|-pack|-line-pack)?|
            hyphens|
            isolation|image-orientation|image-resolution|
            justify-content|
            line-(box-contain|stacking-ruby|stacking-shift|stacking-strategy|stacking|clamp)|
            mask-(border-(mode|outset|repeat|slice|source|width)|border|clip|composite|image|mode|origin|position|repeat|size|type)|mask|
            mix-blend-mode|
            order|
            outline-offset|
            overflow-scrolling|
            overflow-wrap|
            perspective(-origin)?|
            shape-(image-threshold|margin|outside)|
            tab-size|
            text-align-last|
            text-emphasis(-color|-position|-style)?|
            text-fill-color|
            text-overflow|
            text-height|
            text-size-adjust|
            transform(-origin(-x|-y)?|-style)?|
            transition(-delay|-duration|-property|-timing-function)?|
            user-select|
            will-change|word-break|writing-mode|
            background-attachment|background-color|background-image|background-position|background-repeat|background|box-shadow|border-radius|border-bottom-color|border-bottom-style|border-bottom-width|border-bottom|border-collapse|border-color|border-left-color|border-left-style|border-left-width|border-left|border-right-color|border-right-style|border-right-width|border-right|border-spacing|border-style|border-top-color|border-top-style|border-top-width|border-top|border-width|border|bottom|
            caption-side|clear|clip|color|content|counter-increment|counter-reset|cue-after|cue-before|cue|cursor|
            direction|display|
            elevation|empty-cells|
            float|
            osx-font-smoothing|
            font(?:(?:-)(?:effect|emphasize(-position|-style)?|family|feature-settings|kerning|language-override|size(?:-adjust)?|smoothing|stretch|style|synthesis|variant(?:-alternates|-caps|-east-asian|-ligatures|-numeric|-position)?|weight))?|
            height|
            image-rendering|ime-mode|
            left|letter-spacing|line-height|list-style-image|list-style-position|list-style-type|list-style|
            margin-bottom|margin-left|margin-right|margin-top|marker-offset|margin|marks|max-height|max-width|min-height|min-width|
            object-fit|object-position|opacity|orphans|outline-color|outline-style|outline-width|outline|overflow(-[xy])?|
            padding-bottom|padding-left|padding-right|padding-top|padding|page-break-after|page-break-before|page-break-inside|page|pause-after|pause-before|pause|pitch-range|pitch|play-during|pointer-events|position|
            quotes|
            resize|richness|right|
            size|speak-header|speak-numeral|speak-punctuation|speech-rate|speak|src|stress|scroll-behavior|
            table-layout|text-(decoration-line|decoration-style|align|decoration|indent|rendering|shadow|transform|underline-position)|top|text-justify|
            unicode-(?:bidi|range)|
            vertical-align|visibility|voice-family|volume|
            white-space|widows|width|word-(spacing|wrap)|
            zoom|z-index)\b
          scope: support.type.property-name.css
    - match: (:)\s*
      captures:
        1: punctuation.separator.key-value.css
      push:
        - meta_scope: meta.property-value.css
        - match: '\s*(;|(?=\}))'
          captures:
            1: punctuation.terminator.rule.css
          pop: true
        - include: property-values
  selector:
    - match: '\s*(?=[:.*#a-zA-Z])'
      push:
        - meta_scope: meta.selector.css
        - match: "(?=[/@{)])"
          pop: true
        - match: '\b(a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|content|data|datalist|dd|del|details|dfn|dir|dialog|div|dl|dt|element|em|embed|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|isindex|kbd|keygen|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|rtc|s|samp|script|section|select|shadow|small|source|span|strike|strong|style|sub|summary|sup|svg|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|tt|u|ul|var|video|wbr)\b'
          scope: entity.name.tag.css
        - match: '(\.)[a-zA-Z0-9_-]+'
          scope: entity.other.attribute-name.class.css
          captures:
            1: punctuation.definition.entity.css
        - match: "(#)[a-zA-Z][a-zA-Z0-9_-]*"
          scope: entity.other.attribute-name.id.css
          captures:
            1: punctuation.definition.entity.css
        - match: \*
          scope: entity.name.tag.wildcard.css
        - match: (:)((active|valid)-drop-target)\b
          scope: entity.other.attribute-name.pseudo-class.drag-and-drop.css
          captures:
            1: punctuation.definition.entity.css
        - match: (:)(checked|enabled|default|disabled|indeterminate|invalid|in-range|optional|out-of-range|placeholder-shown|required|read-only|read-write|user-error|valid)\b
          scope: entity.other.attribute-name.pseudo-class.ui-state.css
          captures:
            1: punctuation.definition.entity.css
        - match: (:)((nth-(last-)?)?column)\b
          scope: entity.other.attribute-name.pseudo-class.grid-structural.css
          captures:
            1: punctuation.definition.entity.css
        - match: |-
            (?x)(:+)
            (after|before|first-letter|first-line|
            (-moz-)?selection|
            (-moz-)(?:placeholder|focus-inner)|(?:(-webkit-|-ms-)input-)?placeholder|
            (-webkit-)(?:autofill|search-(?:cancel-button|decoration))|
            (-ms-)(?:browse|check|clear|expand|fill-lower|
            fill-upper|fill|reveal|thumb|ticks-after|
            ticks-before|tooltip|track|value))
            \b
          scope: entity.other.attribute-name.pseudo-element.css
          captures:
            1: punctuation.definition.entity.css
            3: support.type.vendor-prefix.css
            4: support.type.vendor-prefix.css
            5: support.type.vendor-prefix.css
            6: support.type.vendor-prefix.css
            7: support.type.vendor-prefix.css
        - match: (:)(current|(first|last)-child|(first|last|nth|only)-of-type|backdrop|empty|first|future|left|only-child|past|right|root|scope|target)\b
          scope: entity.other.attribute-name.pseudo-class.css
          captures:
            1: punctuation.definition.entity.css
        - match: ((:)dir|lang|matches|not|nth-(?:last-)?match)(\()
          captures:
            1: entity.other.attribute-name.pseudo-class.css
            2: punctuation.definition.entity.css
            3: punctuation.section.function.css
          push:
            - match: \)
              captures:
                0: punctuation.section.function.css
              pop: true
            - include: selector
        - match: ((:)nth-(?:(?:last-)?child|(?:last-)?of-type))(\()(\-?(?:\d+n?|n)(?:\+\d+)?|even|odd)(\))
          captures:
            1: entity.other.attribute-name.pseudo-class.css
            2: punctuation.definition.entity.css
            3: punctuation.section.function.css
            4: constant.numeric.css
            5: punctuation.section.function.css
        - match: (:)(active|any-link|hover|local-link|link|visited|focus)\b
          scope: entity.other.attribute-name.pseudo-class.css
          captures:
            1: punctuation.definition.entity.css
        - match: '(?i)(\[)\s*(-?[_a-z\\[[:^ascii:]]][_a-z0-9\-\\[[:^ascii:]]]*)(?:\s*([~|^$*]?=)\s*(?:(-?[_a-z\\[[:^ascii:]]][_a-z0-9\-\\[[:^ascii:]]]*)|((?>([''"])(?:[^\\]|\\.)*?(\6)))))?\s*(\])'
          scope: meta.attribute-selector.css
          captures:
            1: punctuation.definition.entity.css
            2: entity.other.attribute-name.attribute.css
            3: punctuation.separator.operator.css
            4: string.unquoted.attribute-value.css
            5: string.quoted.double.attribute-value.css
            6: punctuation.definition.string.begin.css
            7: punctuation.definition.string.end.css
  string-double:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.css
      push:
        - meta_scope: string.quoted.double.css
        - match: '"'
          captures:
            0: punctuation.definition.string.end.css
          pop: true
        - match: \\.
          scope: constant.character.escape.css
  string-single:
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.css
      push:
        - meta_scope: string.quoted.single.css
        - match: "'"
          captures:
            0: punctuation.definition.string.end.css
          pop: true
        - match: \\.
          scope: constant.character.escape.css
  unicode-range:
    - match: |-
        (?xi)
            (u\+)
            ([0-9a-f?]{1,6}
            (?:(-)[0-9a-f]{1,6})?)
      scope: support.unicode-range.css
      captures:
        1: support.constant.unicode-range.prefix.css
        2: constant.codepoint-range.css
        3: punctuation.section.range.css
  vendor-prefix:
    - match: "-(?:webkit|moz|ms|o)-"
      scope: support.type.vendor-prefix.css
