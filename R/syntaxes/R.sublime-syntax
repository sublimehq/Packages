%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: R
file_extensions:
  - R
  - r
  - s
  - S
  - Rprofile
scope: source.r
contexts:
  main:
    - match: (#).*$\n?
      scope: comment.line.number-sign.r
      captures:
        1: punctuation.definition.comment.r
    - match: \b(logical|numeric|character|complex|matrix|array|data\.frame|list|factor)(?=\s*\()
      scope: storage.type.r
    - match: \b(function|if|break|next|repeat|else|for|return|switch|while|in|invisible)\b
      scope: keyword.control.r
    - match: '\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b'
      scope: constant.numeric.r
    - match: \b(TRUE|FALSE|NULL|NA|Inf|NaN)\b
      scope: constant.language.r
    - match: \b(pi|letters|LETTERS|month\.abb|month\.name)\b
      scope: support.constant.misc.r
    - match: (\-|\+|\*|\/|%\/%|%%|%\*%|%in%|%o%|%x%|\^)
      scope: keyword.operator.arithmetic.r
    - match: (=|<-|<<-|->|->>)
      scope: keyword.operator.assignment.r
    - match: (==|!=|<>|<|>|<=|>=)
      scope: keyword.operator.comparison.r
    - match: "(!|&{1,2}|[|]{1,2})"
      scope: keyword.operator.logical.r
    - match: (\.\.\.|\$|:|\~)
      scope: keyword.other.r
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.r
      push:
        - meta_scope: string.quoted.double.r
        - match: '"'
          captures:
            0: punctuation.definition.string.end.r
          pop: true
        - match: \\.
          scope: constant.character.escape.r
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.r
      push:
        - meta_scope: string.quoted.single.r
        - match: "'"
          captures:
            0: punctuation.definition.string.end.r
          pop: true
        - match: \\.
          scope: constant.character.escape.r
    - match: '([a-zA-Z._][a-zA-Z0-9._]*)\s*(<-)\s*(function)'
      scope: meta.function.r
      captures:
        1: entity.name.function.r
        2: keyword.operator.assignment.r
        3: keyword.control.r
    - match: '([a-zA-Z._][a-zA-Z0-9._]*)\s*\('
    - match: '([a-zA-Z._][a-zA-Z0-9._]*)\s*(=)(?=[^=])'
      captures:
        1: variable.parameter.r
        2: keyword.operator.assignment.r
    - match: '\b([a-zA-Z._][a-zA-Z0-9._]*)\b'
      scope: variable.other.r
