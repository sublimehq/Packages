%YAML 1.2
---
name: HTML
file_extensions:
  - html
  - htm
  - shtml
  - xhtml
  - inc
  - tmpl
  - tpl
first_line_match: (?i)<(!DOCTYPE\s*)?html
scope: text.html.basic
contexts:
  main:
    - match: '(<)([a-zA-Z0-9:]++)(?=[^>]*></\2>)'
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.html
      push:
        - meta_scope: meta.tag.any.html
        - match: (>)((<)/)(\2)(>)
          captures:
            1: punctuation.definition.tag.end.html
            2: punctuation.definition.tag.begin.html
            3: meta.scope.between-tag-pair.html
            4: entity.name.tag.html
            5: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (<\?)(xml)
      captures:
        1: punctuation.definition.tag.html
        2: entity.name.tag.xml.html
      push:
        - meta_scope: meta.tag.preprocessor.xml.html
        - match: (\?>)
          pop: true
        - include: tag-generic-attribute
        - include: string-double-quoted
        - include: string-single-quoted
    - match: <!--
      captures:
        0: punctuation.definition.comment.html
      push:
        - meta_scope: comment.block.html
        - match: '--\s*>'
          pop: true
        - match: "--"
          scope: invalid.illegal.bad-comments-or-CDATA.html
    - match: <!
      captures:
        0: punctuation.definition.tag.html
      push:
        - meta_scope: meta.tag.sgml.html
        - match: ">"
          scope: punctuation.definition.tag.html
          pop: true
        - match: (?i:DOCTYPE)
          captures:
            0: entity.name.tag.doctype.html
          push:
            - meta_scope: meta.tag.sgml.doctype.html
            - match: (?=>)
              pop: true
            - match: '"[^">]*"'
              scope: string.quoted.double.doctype.identifiers-and-DTDs.html
        - match: '\[CDATA\['
          push:
            - meta_scope: constant.other.inline-data.html
            - match: "]](?=>)"
              pop: true
        - match: (\s*)(?!--|>)\S(\s*)
          scope: invalid.illegal.bad-comments-or-CDATA.html
    - match: '(?:^\s+)?(<)((?i:style))\b(?![^>]*/>)'
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.style.html
      push:
        - match: (?i)(</)(style)(>)
          captures:
            1: punctuation.definition.tag.begin.html
            2: entity.name.tag.html
            3: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
        - match: (>)
          captures:
            1: punctuation.definition.tag.end.html
          push:
            - meta_content_scope: source.css.embedded.html
            - include: 'scope:source.css'
          with_prototype:
            - match: (?i)(?=</style)
              pop: true
    - match: '(<)((?i:script))\b(?![^>]*/>)(?![^>]*(?i:type.?=.?text/((?!javascript).*)))'
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.script.html
      push:
        - meta_content_scope: source.js.embedded.html
        - match: (?i)(</)(script)(>)
          captures:
            1: punctuation.definition.tag.begin.html
            2: entity.name.tag.html
            3: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
        - match: (>)
          captures:
            1: punctuation.definition.tag.end.html
          push: 'scope:source.js'
          with_prototype:
             - match: (?i)(?=</script)
               pop: true
    - match: (</?)((?i:body|head|html)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.structure.any.html
      push:
        - meta_scope: meta.tag.structure.any.html
        - match: (>)
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (</?)((?i:address|blockquote|dd|div|section|article|aside|header|footer|nav|menu|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|pre)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.block.any.html
      push:
        - meta_scope: meta.tag.block.any.html
        - match: (>)
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: (</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\b)
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.inline.any.html
      push:
        - meta_scope: meta.tag.inline.any.html
        - match: "((?: ?/)?>)"
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - match: "(</?)([a-zA-Z0-9:]+)"
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.other.html
      push:
        - meta_scope: meta.tag.other.html
        - match: (>)
          captures:
            1: punctuation.definition.tag.end.html
          pop: true
        - include: tag-stuff
    - include: entities
    - match: <>
      scope: invalid.illegal.incomplete.html
  entities:
    - match: "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)"
      scope: constant.character.entity.html
      captures:
        1: punctuation.definition.entity.html
        3: punctuation.definition.entity.html
    - match: "&"
      scope: invalid.illegal.bad-ampersand.html
  string-double-quoted:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.html
      push:
        - meta_scope: string.quoted.double.html
        - match: '"'
          captures:
            0: punctuation.definition.string.end.html
          pop: true
        - include: entities
  string-single-quoted:
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.html
      push:
        - meta_scope: string.quoted.single.html
        - match: "'"
          captures:
            0: punctuation.definition.string.end.html
          pop: true
        - include: entities
  tag-generic-attribute:
    - match: '(?<=[^=])\b([a-zA-Z0-9:-]+)\s*(=?)'
      captures:
        1: entity.other.attribute-name.html
        2: punctuation.separator.key-value.html
  tag-id-attribute:
    - match: \b(id)\b\s*(=)
      captures:
        1: entity.other.attribute-name.id.html
        2: punctuation.separator.key-value.html
      push:
        - meta_scope: meta.attribute-with-value.id.html
        - match: '"'
          captures:
            0: punctuation.definition.string.begin.html
          push:
            - meta_scope: string.quoted.double.html
            - meta_content_scope: meta.toc-list.id.html
            - match: '"'
              captures:
                0: punctuation.definition.string.end.html
              pop: true
            - include: entities
        - match: "'"
          captures:
            0: punctuation.definition.string.begin.html
          push:
            - meta_scope: string.quoted.single.html
            - meta_content_scope: meta.toc-list.id.html
            - match: "'"
              captures:
                0: punctuation.definition.string.end.html
              pop: true
            - include: entities
        - match: '(?<==)\s*((?:[^\s<>/''"]|/(?!>))+)'
          scope: string.unquoted.html
          captures:
            1: meta.toc-list.id.html
        - match: ''
          pop: true
  tag-style-attribute:
    - match: \b(style)\b\s*(=)
      captures:
        1: entity.other.attribute-name.style.html
        2: punctuation.separator.key-value.html
      push:
        - meta_scope: meta.attribute-with-value.style.html
        - match: '"'
          scope: string.quoted.double punctuation.definition.string.begin.html
          push:
            - meta_scope: source.css
            - match: '"'
              scope: string.quoted.double punctuation.definition.string.end.html
              pop: true
            - match: ''
              # An anonymous context with an include is used here rather than
              # a direct push, so that if the target context isn't found it's
              # only a warning rather than an error. This will likely happen
              # if the user has replaced the default CSS syntax
              push:
                - include: 'CSS.sublime-syntax#rule-list-body'
              with_prototype:
                - match: '(?=")'
                  pop: true
                - include: entities
        - match: "'"
          scope: string.quoted.single punctuation.definition.string.begin.html
          push:
            - meta_scope: source.css
            - match: "'"
              scope: string.quoted.single punctuation.definition.string.end.html
              pop: true
            - match: ''
              # An anonymous context with an include is used here rather than
              # a direct push, so that if the target context isn't found it's
              # only a warning rather than an error. This will likely happen
              # if the user has replaced the default CSS syntax
              push:
                - include: 'CSS.sublime-syntax#rule-list-body'
              with_prototype:
                - match: "(?=')"
                  pop: true
                - include: entities
        - match: ''
          pop: true

  tag-event-attribute:
    - match: |-
        (?x)\b(
        onabort|onautocomplete|onautocompleteerror|onblur|oncancel|oncanplay|
        oncanplaythrough|onchange|onclick|onclose|oncontextmenu|oncuechange|
        ondblclick|ondrag|ondragend|ondragenter|ondragexit|ondragleave|ondragover|
        ondragstart|ondrop|ondurationchange|onemptied|onended|onerror|onfocus|
        oninput|oninvalid|onkeydown|onkeypress|onkeyup|onload|onloadeddata|
        onloadedmetadata|onloadstart|onmousedown|onmouseenter|onmouseleave|
        onmousemove|onmouseout|onmouseover|onmouseup|onmousewheel|onpause|onplay|
        onplaying|onprogress|onratechange|onreset|onresize|onscroll|onseeked|
        onseeking|onselect|onshow|onsort|onstalled|onsubmit|onsuspend|
        ontimeupdate|ontoggle|onvolumechange|onwaiting)\b\s*(=)
      captures:
        1: entity.other.attribute-name.event.html
        2: punctuation.separator.key-value.html
      push:
        - meta_scope: meta.attribute-with-value.event.html
        - match: '"'
          scope: string.quoted.double punctuation.definition.string.begin.html
          push:
            - match: '"'
              scope: string.quoted.double punctuation.definition.string.end.html
              pop: true
            - match: ''
              push: 'scope:source.js'
              with_prototype:
                - match: '(?=")'
                  pop: true
                - include: entities
        - match: "'"
          scope: string.quoted.single punctuation.definition.string.begin.html
          push:
            - match: "'"
              scope: string.quoted.single punctuation.definition.string.end.html
              pop: true
            - match: ''
              push: 'scope:source.js'
              with_prototype:
                - match: "(?=')"
                  pop: true
                - include: entities
        - match: ''
          pop: true

  tag-stuff:
    - include: tag-id-attribute
    - include: tag-style-attribute
    - include: tag-event-attribute
    - include: tag-generic-attribute
    - include: string-double-quoted
    - include: string-single-quoted
    - include: unquoted-attribute
  unquoted-attribute:
    - match: '(?<==)(?:[^\s<>/''"]|/(?!>))+'
      scope: string.unquoted.html
